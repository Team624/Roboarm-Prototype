ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_SAR_1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	ADC_SAR_1_Enable, %function
  25              	ADC_SAR_1_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 2


  31:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  32:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  76:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  79:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  82:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  84:Generated_Source\PSoC5/ADC_SAR_1.c **** }
  85:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 3


  88:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
  89:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  95:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 108:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 118:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 122:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 126:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 127:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_1.c **** {
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 145:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 147 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 148:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
  39              		.loc 1 150 0
  40 0006 214A     		ldr	r2, .L2
 147:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41              		.loc 1 147 0
  42 0008 0446     		mov	r4, r0
  43              	.LVL1:
  44              		.loc 1 150 0
  45 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 151:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 5


 183:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 203:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 207:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
  46              		.loc 1 223 0
  47 000c 0A20     		movs	r0, #10
 150:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  48              		.loc 1 150 0
  49 000e 43F00103 		orr	r3, r3, #1
  50 0012 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  51              		.loc 1 153 0
  52 0014 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1374     		strb	r3, [r2, #16]
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
  55              		.loc 1 157 0
  56 001c 12F80A3C 		ldrb	r3, [r2, #-10]	@ zero_extendqisi2
  57 0020 43F00103 		orr	r3, r3, #1
  58 0024 02F80A3C 		strb	r3, [r2, #-10]
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 6


 158:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  59              		.loc 1 158 0
  60 0028 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
  61 002a 43F00103 		orr	r3, r3, #1
  62 002e 9371     		strb	r3, [r2, #6]
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
  63              		.loc 1 162 0
  64 0030 02F5AA52 		add	r2, r2, #5440
  65 0034 1832     		adds	r2, r2, #24
  66 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67              	.LVL2:
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
  68              		.loc 1 169 0
  69 0038 43F00303 		orr	r3, r3, #3
  70              	.LVL3:
 171:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  71              		.loc 1 171 0
  72 003c 1370     		strb	r3, [r2]
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
  73              		.loc 1 184 0
  74 003e 144B     		ldr	r3, .L2+4
  75              	.LVL4:
  76 0040 0422     		movs	r2, #4
  77              	.LVL5:
  78 0042 1A70     		strb	r2, [r3]
  79              	.LVL6:
 190:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
  80              		.loc 1 190 0
  81 0044 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
  82 0048 02F0BF02 		and	r2, r2, #191
  83 004c 03F8012C 		strb	r2, [r3, #-1]
 200:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
  84              		.loc 1 200 0
  85 0050 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
  86 0054 42F00302 		orr	r2, r2, #3
  87 0058 03F8012C 		strb	r2, [r3, #-1]
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
  88              		.loc 1 206 0
  89 005c 0822     		movs	r2, #8
  90 005e 03F8062C 		strb	r2, [r3, #-6]
 218:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  91              		.loc 1 218 0
  92 0062 A3F59753 		sub	r3, r3, #4832
  93 0066 0222     		movs	r2, #2
  94 0068 123B     		subs	r3, r3, #18
  95 006a 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  96              		.loc 1 221 0
  97 006c 094A     		ldr	r2, .L2+8
  98 006e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  99 0070 43F00803 		orr	r3, r3, #8
 100 0074 1370     		strb	r3, [r2]
 101              		.loc 1 223 0
 102 0076 FFF7FEFF 		bl	CyDelayUs
 103              	.LVL7:
 224:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 7


 226:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 104              		.loc 1 227 0
 105 007a 074B     		ldr	r3, .L2+12
 106 007c 0122     		movs	r2, #1
 228:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 107              		.loc 1 230 0
 108 007e 2046     		mov	r0, r4
 231:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 109              		.loc 1 231 0
 110 0080 BDE81040 		pop	{r4, lr}
 111              		.cfi_restore 14
 112              		.cfi_restore 4
 113              		.cfi_def_cfa_offset 0
 114              	.LVL8:
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 115              		.loc 1 227 0
 116 0084 1A60     		str	r2, [r3]
 230:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 117              		.loc 1 230 0
 118 0086 FFF7FEBF 		b	CyExitCriticalSection
 119              	.LVL9:
 120              	.L3:
 121 008a 00BF     		.align	2
 122              	.L2:
 123 008c AB430040 		.word	1073759147
 124 0090 06590040 		.word	1073764614
 125 0094 275B0040 		.word	1073765159
 126 0098 80E200E0 		.word	-536812928
 127              		.cfi_endproc
 128              	.LFE2:
 129              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 130              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 131              		.align	1
 132              		.global	ADC_SAR_1_Stop
 133              		.thumb
 134              		.thumb_func
 135              		.type	ADC_SAR_1_Stop, %function
 136              	ADC_SAR_1_Stop:
 137              	.LFB3:
 232:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 8


 247:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 138              		.loc 1 249 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 08B5     		push	{r3, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 3, -8
 145              		.cfi_offset 14, -4
 250:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 146              		.loc 1 251 0
 147 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 148              	.LVL10:
 252:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 149              		.loc 1 254 0
 150 0006 0F4A     		ldr	r2, .L5
 151 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 152 000a 03F0FE03 		and	r3, r3, #254
 153 000e 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 154              		.loc 1 256 0
 155 0010 A2F5AA52 		sub	r2, r2, #5440
 156 0014 153A     		subs	r2, r2, #21
 157 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 158 0018 03F0FE03 		and	r3, r3, #254
 159 001c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 160              		.loc 1 258 0
 161 001e 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 162 0020 03F0FE03 		and	r3, r3, #254
 163 0024 1374     		strb	r3, [r2, #16]
 259:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 260:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 164              		.loc 1 262 0
 165 0026 12F80A3C 		ldrb	r3, [r2, #-10]	@ zero_extendqisi2
 166 002a 03F0FE03 		and	r3, r3, #254
 167 002e 02F80A3C 		strb	r3, [r2, #-10]
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 168              		.loc 1 263 0
 169 0032 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 170 0034 03F0FE03 		and	r3, r3, #254
 171 0038 9371     		strb	r3, [r2, #6]
 264:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 172              		.loc 1 268 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 9


 173 003a BDE80840 		pop	{r3, lr}
 174              		.cfi_restore 14
 175              		.cfi_restore 3
 176              		.cfi_def_cfa_offset 0
 266:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 177              		.loc 1 266 0
 178 003e FFF7FEBF 		b	CyExitCriticalSection
 179              	.LVL11:
 180              	.L6:
 181 0042 00BF     		.align	2
 182              	.L5:
 183 0044 00590040 		.word	1073764608
 184              		.cfi_endproc
 185              	.LFE3:
 186              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 187              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 188              		.align	1
 189              		.global	ADC_SAR_1_SetPower
 190              		.thumb
 191              		.thumb_func
 192              		.type	ADC_SAR_1_SetPower, %function
 193              	ADC_SAR_1_SetPower:
 194              	.LFB4:
 269:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 195              		.loc 1 291 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              	.LVL12:
 292:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 10


 297:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 201              		.loc 1 298 0
 202 0000 044A     		ldr	r2, .L8
 203 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 204 0004 03F03F03 		and	r3, r3, #63
 205              	.LVL13:
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 206              		.loc 1 299 0
 207 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 208              	.LVL14:
 209 000c C0B2     		uxtb	r0, r0
 210              	.LVL15:
 300:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 211              		.loc 1 300 0
 212 000e 1070     		strb	r0, [r2]
 213 0010 7047     		bx	lr
 214              	.L9:
 215 0012 00BF     		.align	2
 216              	.L8:
 217 0014 00590040 		.word	1073764608
 218              		.cfi_endproc
 219              	.LFE4:
 220              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 221              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 222              		.align	1
 223              		.global	ADC_SAR_1_SetResolution
 224              		.thumb
 225              		.thumb_func
 226              		.type	ADC_SAR_1_SetResolution, %function
 227              	ADC_SAR_1_SetResolution:
 228              	.LFB5:
 301:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 302:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 317:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 11


 326:Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 229              		.loc 1 341 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL16:
 342:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 235              		.loc 1 345 0
 236 0000 0828     		cmp	r0, #8
 237 0002 04D0     		beq	.L12
 238 0004 0A28     		cmp	r0, #10
 346:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 239              		.loc 1 348 0
 240 0006 0CBF     		ite	eq
 241 0008 8423     		moveq	r3, #132
 242 000a C423     		movne	r3, #196
 243 000c 00E0     		b	.L13
 244              	.L12:
 245              	.LVL17:
 349:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 350:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 353:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 246              		.loc 1 354 0
 247 000e 4423     		movs	r3, #68
 248              	.LVL18:
 249              	.L13:
 250 0010 0838     		subs	r0, r0, #8
 251              	.LVL19:
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 356:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 12


 360:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 361:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 252              		.loc 1 362 0
 253 0012 0E4A     		ldr	r2, .L18
 254 0014 C0B2     		uxtb	r0, r0
 255 0016 0428     		cmp	r0, #4
 256 0018 1370     		strb	r3, [r2]
 257              	.LVL20:
 258 001a 98BF     		it	ls
 259 001c 0C4B     		ldrls	r3, .L18+4
 260 001e 4FF00002 		mov	r2, #0
 261 0022 98BF     		it	ls
 262 0024 33F91010 		ldrshls	r1, [r3, r0, lsl #1]
 263              	.LBB4:
 264              	.LBB5:
 363:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 366:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 367:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
 374:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 403:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 13


 404:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 410:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 437:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 446:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 14


 461:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 477:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 483:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 485:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
 488:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 494:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 15


 518:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 522:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 524:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 552:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 558:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 16


 575:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 587:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 588:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 589:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 602:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 613:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 621:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
 624:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 630:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 17


 632:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 638:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
 640:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 646:Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 648:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 654:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 655:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
 265              		.loc 1 656 0
 266 0028 0A4B     		ldr	r3, .L18+8
 267              	.LBE5:
 268              	.LBE4:
 362:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 269              		.loc 1 362 0
 270 002a 88BF     		it	hi
 271 002c 1146     		movhi	r1, r2
 272              	.LVL21:
 273              	.LBB7:
 274              	.LBB6:
 275              		.loc 1 656 0
 276 002e 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
 659:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
 277              		.loc 1 659 0
 278 0030 42F21073 		movw	r3, #10000
 279 0034 4B43     		muls	r3, r1, r3
 280 0036 4FF40061 		mov	r1, #2048
 281              	.LVL22:
 282 003a 03F58063 		add	r3, r3, #1024
 283 003e 93FBF1F3 		sdiv	r3, r3, r1
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
 284              		.loc 1 658 0
 285 0042 0549     		ldr	r1, .L18+12
 286 0044 0B60     		str	r3, [r1]
 660:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 18


 287              		.loc 1 664 0
 288 0046 054B     		ldr	r3, .L18+16
 289 0048 1A80     		strh	r2, [r3]	@ movhi
 290 004a 7047     		bx	lr
 291              	.L19:
 292              		.align	2
 293              	.L18:
 294 004c 02590040 		.word	1073764610
 295 0050 00000000 		.word	.LANCHOR0
 296 0054 00000000 		.word	ADC_SAR_1_countsPerVolt
 297 0058 00000000 		.word	ADC_SAR_1_countsPer10Volt
 298 005c 00000000 		.word	ADC_SAR_1_shift
 299              	.LBE6:
 300              	.LBE7:
 301              		.cfi_endproc
 302              	.LFE5:
 303              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 304              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
 305              		.align	1
 306              		.global	ADC_SAR_1_Init
 307              		.thumb
 308              		.thumb_func
 309              		.type	ADC_SAR_1_Init, %function
 310              	ADC_SAR_1_Init:
 311              	.LFB1:
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 312              		.loc 1 107 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 08B5     		push	{r3, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 320              		.loc 1 111 0
 321 0002 1020     		movs	r0, #16
 322 0004 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 323              	.LVL23:
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 324              		.loc 1 116 0
 325 0008 0721     		movs	r1, #7
 326 000a 0020     		movs	r0, #0
 327 000c FFF7FEFF 		bl	CyIntSetPriority
 328              	.LVL24:
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 329              		.loc 1 117 0
 330 0010 0749     		ldr	r1, .L21
 331 0012 0020     		movs	r0, #0
 332 0014 FFF7FEFF 		bl	CyIntSetVector
 333              	.LVL25:
 121:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 334              		.loc 1 121 0
 335 0018 064A     		ldr	r2, .L21+4
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 336              		.loc 1 124 0
 337 001a 0C20     		movs	r0, #12
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 19


 121:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 338              		.loc 1 121 0
 339 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 340 001e 43F00603 		orr	r3, r3, #6
 341 0022 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 342              		.loc 1 124 0
 343 0024 FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 344              	.LVL26:
 125:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 345              		.loc 1 125 0
 346 0028 034B     		ldr	r3, .L21+8
 347 002a 0022     		movs	r2, #0
 348 002c 1A80     		strh	r2, [r3]	@ movhi
 349 002e 08BD     		pop	{r3, pc}
 350              	.L22:
 351              		.align	2
 352              	.L21:
 353 0030 00000000 		.word	ADC_SAR_1_ISR
 354 0034 01590040 		.word	1073764609
 355 0038 00000000 		.word	ADC_SAR_1_offset
 356              		.cfi_endproc
 357              	.LFE1:
 358              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 359              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
 360              		.align	1
 361              		.global	ADC_SAR_1_Start
 362              		.thumb
 363              		.thumb_func
 364              		.type	ADC_SAR_1_Start, %function
 365              	ADC_SAR_1_Start:
 366              	.LFB0:
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 367              		.loc 1 75 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 10B5     		push	{r4, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 4, -8
 374              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 375              		.loc 1 78 0
 376 0002 054C     		ldr	r4, .L25
 377 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 378 0006 1BB9     		cbnz	r3, .L24
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
 379              		.loc 1 80 0
 380 0008 FFF7FEFF 		bl	ADC_SAR_1_Init
 381              	.LVL27:
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 382              		.loc 1 81 0
 383 000c 0123     		movs	r3, #1
 384 000e 2370     		strb	r3, [r4]
 385              	.L24:
  84:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 386              		.loc 1 84 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 20


 387 0010 BDE81040 		pop	{r4, lr}
 388              		.cfi_restore 14
 389              		.cfi_restore 4
 390              		.cfi_def_cfa_offset 0
  83:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 391              		.loc 1 83 0
 392 0014 FFF7FEBF 		b	ADC_SAR_1_Enable
 393              	.LVL28:
 394              	.L26:
 395              		.align	2
 396              	.L25:
 397 0018 00000000 		.word	.LANCHOR1
 398              		.cfi_endproc
 399              	.LFE0:
 400              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
 401              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 402              		.align	1
 403              		.global	ADC_SAR_1_StartConvert
 404              		.thumb
 405              		.thumb_func
 406              		.type	ADC_SAR_1_StartConvert, %function
 407              	ADC_SAR_1_StartConvert:
 408              	.LFB6:
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 409              		.loc 1 402 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 414              		.loc 1 408 0
 415 0000 024A     		ldr	r2, .L28
 416 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 417 0004 43F00103 		orr	r3, r3, #1
 418 0008 1370     		strb	r3, [r2]
 419 000a 7047     		bx	lr
 420              	.L29:
 421              		.align	2
 422              	.L28:
 423 000c 00590040 		.word	1073764608
 424              		.cfi_endproc
 425              	.LFE6:
 426              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 427              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 428              		.align	1
 429              		.global	ADC_SAR_1_StopConvert
 430              		.thumb
 431              		.thumb_func
 432              		.type	ADC_SAR_1_StopConvert, %function
 433              	ADC_SAR_1_StopConvert:
 434              	.LFB7:
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 435              		.loc 1 436 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 21


 438:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440              		.loc 1 438 0
 441 0000 024A     		ldr	r2, .L31
 442 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 443 0004 03F0FE03 		and	r3, r3, #254
 444 0008 1370     		strb	r3, [r2]
 445 000a 7047     		bx	lr
 446              	.L32:
 447              		.align	2
 448              	.L31:
 449 000c 00590040 		.word	1073764608
 450              		.cfi_endproc
 451              	.LFE7:
 452              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 453              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 454              		.align	1
 455              		.global	ADC_SAR_1_IsEndConversion
 456              		.thumb
 457              		.thumb_func
 458              		.type	ADC_SAR_1_IsEndConversion, %function
 459              	ADC_SAR_1_IsEndConversion:
 460              	.LFB8:
 476:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 461              		.loc 1 476 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              	.LVL29:
 466 0000 10B5     		push	{r4, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 470              		.loc 1 481 0
 471 0002 084B     		ldr	r3, .L40
 472              	.L35:
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 473              		.loc 1 481 0 is_stmt 0 discriminator 2
 474 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 475              	.LVL30:
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 476              		.loc 1 482 0 is_stmt 1 discriminator 2
 477 0006 14F00104 		ands	r4, r4, #1
 478              	.LVL31:
 479 000a 03D1     		bne	.L34
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 480              		.loc 1 482 0 is_stmt 0 discriminator 1
 481 000c 0028     		cmp	r0, #0
 482 000e F9D0     		beq	.L35
 483 0010 0024     		movs	r4, #0
 484 0012 04E0     		b	.L39
 485              	.L34:
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 486              		.loc 1 487 0 is_stmt 1
 487 0014 2046     		mov	r0, r4
 488              	.LVL32:
 489 0016 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 22


 490              	.LVL33:
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491              		.loc 1 489 0
 492 001a 024B     		ldr	r3, .L40
 493 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494              	.L39:
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495              		.loc 1 493 0
 496 001e 2046     		mov	r0, r4
 497 0020 10BD     		pop	{r4, pc}
 498              	.L41:
 499 0022 00BF     		.align	2
 500              	.L40:
 501 0024 01590040 		.word	1073764609
 502              		.cfi_endproc
 503              	.LFE8:
 504              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 505              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 506              		.align	1
 507              		.global	ADC_SAR_1_GetResult8
 508              		.thumb
 509              		.thumb_func
 510              		.type	ADC_SAR_1_GetResult8, %function
 511              	ADC_SAR_1_GetResult8:
 512              	.LFB9:
 521:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 513              		.loc 1 521 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 522:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 518              		.loc 1 522 0
 519 0000 034A     		ldr	r2, .L43
 520 0002 044B     		ldr	r3, .L43+4
 521 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 522 0006 1088     		ldrh	r0, [r2]
 523 0008 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 524              		.loc 1 523 0
 525 000a 40B2     		sxtb	r0, r0
 526 000c 7047     		bx	lr
 527              	.L44:
 528 000e 00BF     		.align	2
 529              	.L43:
 530 0010 00000000 		.word	ADC_SAR_1_shift
 531 0014 A05B0040 		.word	1073765280
 532              		.cfi_endproc
 533              	.LFE9:
 534              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 535              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 536              		.align	1
 537              		.global	ADC_SAR_1_GetResult16
 538              		.thumb
 539              		.thumb_func
 540              		.type	ADC_SAR_1_GetResult16, %function
 541              	ADC_SAR_1_GetResult16:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 23


 542              	.LFB10:
 551:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 543              		.loc 1 551 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 556:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 548              		.loc 1 556 0
 549 0000 034A     		ldr	r2, .L46
 554:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 550              		.loc 1 554 0
 551 0002 044B     		ldr	r3, .L46+4
 552 0004 1B88     		ldrh	r3, [r3]
 553              	.LVL34:
 556:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 554              		.loc 1 556 0
 555 0006 1088     		ldrh	r0, [r2]
 556 0008 181A     		subs	r0, r3, r0
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 557              		.loc 1 557 0
 558 000a 00B2     		sxth	r0, r0
 559 000c 7047     		bx	lr
 560              	.L47:
 561 000e 00BF     		.align	2
 562              	.L46:
 563 0010 00000000 		.word	ADC_SAR_1_shift
 564 0014 A05B0040 		.word	1073765280
 565              		.cfi_endproc
 566              	.LFE10:
 567              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 568              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 569              		.align	1
 570              		.global	ADC_SAR_1_SetOffset
 571              		.thumb
 572              		.thumb_func
 573              		.type	ADC_SAR_1_SetOffset, %function
 574              	ADC_SAR_1_SetOffset:
 575              	.LFB11:
 586:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 576              		.loc 1 586 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581              	.LVL35:
 587:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 582              		.loc 1 587 0
 583 0000 014B     		ldr	r3, .L49
 584 0002 1880     		strh	r0, [r3]	@ movhi
 585 0004 7047     		bx	lr
 586              	.L50:
 587 0006 00BF     		.align	2
 588              	.L49:
 589 0008 00000000 		.word	ADC_SAR_1_offset
 590              		.cfi_endproc
 591              	.LFE11:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 24


 592              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 593              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 594              		.align	1
 595              		.global	ADC_SAR_1_SetGain
 596              		.thumb
 597              		.thumb_func
 598              		.type	ADC_SAR_1_SetGain, %function
 599              	ADC_SAR_1_SetGain:
 600              	.LFB13:
 665:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 669:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 687:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 601              		.loc 1 693 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606              	.LVL36:
 694:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 607              		.loc 1 694 0
 608 0000 0A23     		movs	r3, #10
 609 0002 5843     		muls	r0, r3, r0
 610              	.LVL37:
 611 0004 014B     		ldr	r3, .L52
 612 0006 1860     		str	r0, [r3]
 613 0008 7047     		bx	lr
 614              	.L53:
 615 000a 00BF     		.align	2
 616              	.L52:
 617 000c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 618              		.cfi_endproc
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 25


 619              	.LFE13:
 620              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 621              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 622              		.align	1
 623              		.global	ADC_SAR_1_SetScaledGain
 624              		.thumb
 625              		.thumb_func
 626              		.type	ADC_SAR_1_SetScaledGain, %function
 627              	ADC_SAR_1_SetScaledGain:
 628              	.LFB14:
 695:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 696:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 698:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 714:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 629              		.loc 1 720 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634              	.LVL38:
 721:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 635              		.loc 1 721 0
 636 0000 014B     		ldr	r3, .L55
 637 0002 1860     		str	r0, [r3]
 638 0004 7047     		bx	lr
 639              	.L56:
 640 0006 00BF     		.align	2
 641              	.L55:
 642 0008 00000000 		.word	ADC_SAR_1_countsPer10Volt
 643              		.cfi_endproc
 644              	.LFE14:
 645              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 646              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 647              		.align	1
 648              		.global	ADC_SAR_1_CountsTo_mVolts
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 26


 649              		.thumb
 650              		.thumb_func
 651              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 652              	ADC_SAR_1_CountsTo_mVolts:
 653              	.LFB15:
 722:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 723:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 654              		.loc 1 744 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659              	.LVL39:
 745:Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 660              		.loc 1 748 0
 661 0000 0E4A     		ldr	r2, .L62
 662 0002 1388     		ldrh	r3, [r2]
 663 0004 1BB2     		sxth	r3, r3
 664 0006 23B1     		cbz	r3, .L58
 749:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 665              		.loc 1 750 0
 666 0008 1188     		ldrh	r1, [r2]
 667 000a 0A23     		movs	r3, #10
 668 000c 09B2     		sxth	r1, r1
 669 000e 5943     		muls	r1, r3, r1
 670              	.LVL40:
 671 0010 01E0     		b	.L59
 672              	.LVL41:
 673              	.L58:
 751:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 27


 754:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 674              		.loc 1 754 0
 675 0012 0B4B     		ldr	r3, .L62+4
 676 0014 1968     		ldr	r1, [r3]
 677              	.LVL42:
 678              	.L59:
 755:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 679              		.loc 1 758 0
 680 0016 0B4B     		ldr	r3, .L62+8
 681 0018 1B88     		ldrh	r3, [r3]
 682 001a C01A     		subs	r0, r0, r3
 683              	.LVL43:
 759:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 684              		.loc 1 760 0
 685 001c 42F21073 		movw	r3, #10000
 758:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 686              		.loc 1 758 0
 687 0020 00B2     		sxth	r0, r0
 688              	.LVL44:
 689              		.loc 1 760 0
 690 0022 03FB00F2 		mul	r2, r3, r0
 691 0026 0223     		movs	r3, #2
 761:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 692              		.loc 1 761 0
 693 0028 91FBF3F3 		sdiv	r3, r1, r3
 694 002c 0028     		cmp	r0, #0
 695 002e D8BF     		it	le
 696 0030 5B42     		rsble	r3, r3, #0
 697              	.LVL45:
 762:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 698              		.loc 1 763 0
 699 0032 1344     		add	r3, r3, r2
 700              	.LVL46:
 701 0034 93FBF1F0 		sdiv	r0, r3, r1
 702              	.LVL47:
 764:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 703              		.loc 1 764 0
 704 0038 00B2     		sxth	r0, r0
 705 003a 7047     		bx	lr
 706              	.L63:
 707              		.align	2
 708              	.L62:
 709 003c 00000000 		.word	ADC_SAR_1_countsPerVolt
 710 0040 00000000 		.word	ADC_SAR_1_countsPer10Volt
 711 0044 00000000 		.word	ADC_SAR_1_offset
 712              		.cfi_endproc
 713              	.LFE15:
 714              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 715              		.global	__aeabi_ldivmod
 716              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 717              		.align	1
 718              		.global	ADC_SAR_1_CountsTo_uVolts
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 28


 719              		.thumb
 720              		.thumb_func
 721              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 722              	ADC_SAR_1_CountsTo_uVolts:
 723              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 780:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 724              		.loc 1 786 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              	.LVL48:
 787:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 729              		.loc 1 791 0
 730 0000 0C4A     		ldr	r2, .L67
 786:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 731              		.loc 1 786 0
 732 0002 38B5     		push	{r3, r4, r5, lr}
 733              		.cfi_def_cfa_offset 16
 734              		.cfi_offset 3, -16
 735              		.cfi_offset 4, -12
 736              		.cfi_offset 5, -8
 737              		.cfi_offset 14, -4
 738              		.loc 1 791 0
 739 0004 1388     		ldrh	r3, [r2]
 740 0006 1BB2     		sxth	r3, r3
 741 0008 23B1     		cbz	r3, .L65
 792:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 742              		.loc 1 793 0
 743 000a 1288     		ldrh	r2, [r2]
 744 000c 0A23     		movs	r3, #10
 745 000e 12B2     		sxth	r2, r2
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 29


 746 0010 5A43     		muls	r2, r3, r2
 747              	.LVL49:
 748 0012 01E0     		b	.L66
 749              	.LVL50:
 750              	.L65:
 794:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 751              		.loc 1 797 0
 752 0014 084B     		ldr	r3, .L67+4
 753 0016 1A68     		ldr	r2, [r3]
 754              	.LVL51:
 755              	.L66:
 798:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 800:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 756              		.loc 1 801 0
 757 0018 084B     		ldr	r3, .L67+8
 758 001a 1C88     		ldrh	r4, [r3]
 802:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
 806:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_1.c ****     return((int32) uVolts );
 759              		.loc 1 807 0
 760 001c 084B     		ldr	r3, .L67+12
 801:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 761              		.loc 1 801 0
 762 001e 041B     		subs	r4, r0, r4
 763              	.LVL52:
 764              		.loc 1 807 0
 765 0020 24B2     		sxth	r4, r4
 766 0022 A4FB0301 		umull	r0, r1, r4, r3
 767 0026 E517     		asrs	r5, r4, #31
 768 0028 03FB0511 		mla	r1, r3, r5, r1
 769 002c D317     		asrs	r3, r2, #31
 770 002e FFF7FEFF 		bl	__aeabi_ldivmod
 771              	.LVL53:
 808:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 772              		.loc 1 808 0
 773 0032 38BD     		pop	{r3, r4, r5, pc}
 774              	.LVL54:
 775              	.L68:
 776              		.align	2
 777              	.L67:
 778 0034 00000000 		.word	ADC_SAR_1_countsPerVolt
 779 0038 00000000 		.word	ADC_SAR_1_countsPer10Volt
 780 003c 00000000 		.word	ADC_SAR_1_offset
 781 0040 80969800 		.word	10000000
 782              		.cfi_endproc
 783              	.LFE16:
 784              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 785              		.global	__aeabi_i2f
 786              		.global	__aeabi_fmul
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 30


 787              		.global	__aeabi_fdiv
 788              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 789              		.align	1
 790              		.global	ADC_SAR_1_CountsTo_Volts
 791              		.thumb
 792              		.thumb_func
 793              		.type	ADC_SAR_1_CountsTo_Volts, %function
 794              	ADC_SAR_1_CountsTo_Volts:
 795              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 796              		.loc 1 830 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              	.LVL55:
 831:Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 801              		.loc 1 834 0
 802 0000 0E4A     		ldr	r2, .L72
 830:Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 803              		.loc 1 830 0
 804 0002 38B5     		push	{r3, r4, r5, lr}
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 3, -16
 807              		.cfi_offset 4, -12
 808              		.cfi_offset 5, -8
 809              		.cfi_offset 14, -4
 810              		.loc 1 834 0
 811 0004 1388     		ldrh	r3, [r2]
 812 0006 1BB2     		sxth	r3, r3
 813 0008 23B1     		cbz	r3, .L70
 835:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 814              		.loc 1 836 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 31


 815 000a 1488     		ldrh	r4, [r2]
 816 000c 0A23     		movs	r3, #10
 817 000e 24B2     		sxth	r4, r4
 818 0010 5C43     		muls	r4, r3, r4
 819              	.LVL56:
 820 0012 01E0     		b	.L71
 821              	.LVL57:
 822              	.L70:
 837:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 823              		.loc 1 840 0
 824 0014 0A4B     		ldr	r3, .L72+4
 825 0016 1C68     		ldr	r4, [r3]
 826              	.LVL58:
 827              	.L71:
 841:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 828              		.loc 1 844 0
 829 0018 0A4B     		ldr	r3, .L72+8
 830 001a 1B88     		ldrh	r3, [r3]
 831 001c C01A     		subs	r0, r0, r3
 832              	.LVL59:
 845:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 846:Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 847:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 833              		.loc 1 848 0
 834 001e 00B2     		sxth	r0, r0
 835 0020 FFF7FEFF 		bl	__aeabi_i2f
 836              	.LVL60:
 837 0024 0849     		ldr	r1, .L72+12
 838 0026 FFF7FEFF 		bl	__aeabi_fmul
 839              	.LVL61:
 840 002a 0546     		mov	r5, r0
 841 002c 2046     		mov	r0, r4
 842 002e FFF7FEFF 		bl	__aeabi_i2f
 843              	.LVL62:
 844 0032 0146     		mov	r1, r0
 845 0034 2846     		mov	r0, r5
 846 0036 FFF7FEFF 		bl	__aeabi_fdiv
 847              	.LVL63:
 849:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 848              		.loc 1 849 0
 849 003a 38BD     		pop	{r3, r4, r5, pc}
 850              	.LVL64:
 851              	.L73:
 852              		.align	2
 853              	.L72:
 854 003c 00000000 		.word	ADC_SAR_1_countsPerVolt
 855 0040 00000000 		.word	ADC_SAR_1_countsPer10Volt
 856 0044 00000000 		.word	ADC_SAR_1_offset
 857 0048 00002041 		.word	1092616192
 858              		.cfi_endproc
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 32


 859              	.LFE17:
 860              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 861              		.comm	ADC_SAR_1_shift,2,2
 862              		.comm	ADC_SAR_1_countsPer10Volt,4,4
 863              		.comm	ADC_SAR_1_countsPerVolt,2,2
 864              		.comm	ADC_SAR_1_offset,2,2
 865              		.global	ADC_SAR_1_initVar
 866              		.section	.rodata
 867              		.align	1
 868              		.set	.LANCHOR0,. + 0
 869              		.type	CSWTCH.24, %object
 870              		.size	CSWTCH.24, 10
 871              	CSWTCH.24:
 872 0000 0001     		.short	256
 873 0002 0000     		.short	0
 874 0004 0004     		.short	1024
 875 0006 0000     		.short	0
 876 0008 0010     		.short	4096
 877              		.bss
 878              		.set	.LANCHOR1,. + 0
 879              		.type	ADC_SAR_1_initVar, %object
 880              		.size	ADC_SAR_1_initVar, 1
 881              	ADC_SAR_1_initVar:
 882 0000 00       		.space	1
 883              		.text
 884              	.Letext0:
 885              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 886              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 887              		.file 4 "Generated_Source\\PSoC5\\ADC_SAR_1_theACLK.h"
 888              		.section	.debug_info,"",%progbits
 889              	.Ldebug_info0:
 890 0000 93050000 		.4byte	0x593
 891 0004 0400     		.2byte	0x4
 892 0006 00000000 		.4byte	.Ldebug_abbrev0
 893 000a 04       		.byte	0x4
 894 000b 01       		.uleb128 0x1
 895 000c 7D000000 		.4byte	.LASF65
 896 0010 0C       		.byte	0xc
 897 0011 9D030000 		.4byte	.LASF66
 898 0015 41010000 		.4byte	.LASF67
 899 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 900 001d 00000000 		.4byte	0
 901 0021 00000000 		.4byte	.Ldebug_line0
 902 0025 02       		.uleb128 0x2
 903 0026 08       		.byte	0x8
 904 0027 07       		.byte	0x7
 905 0028 4C000000 		.4byte	.LASF0
 906 002c 02       		.uleb128 0x2
 907 002d 04       		.byte	0x4
 908 002e 04       		.byte	0x4
 909 002f F6020000 		.4byte	.LASF1
 910 0033 02       		.uleb128 0x2
 911 0034 08       		.byte	0x8
 912 0035 05       		.byte	0x5
 913 0036 63000000 		.4byte	.LASF2
 914 003a 03       		.uleb128 0x3
 915 003b 04       		.byte	0x4
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 33


 916 003c 05       		.byte	0x5
 917 003d 696E7400 		.ascii	"int\000"
 918 0041 02       		.uleb128 0x2
 919 0042 02       		.byte	0x2
 920 0043 05       		.byte	0x5
 921 0044 41030000 		.4byte	.LASF3
 922 0048 02       		.uleb128 0x2
 923 0049 04       		.byte	0x4
 924 004a 07       		.byte	0x7
 925 004b BB010000 		.4byte	.LASF4
 926 004f 02       		.uleb128 0x2
 927 0050 08       		.byte	0x8
 928 0051 04       		.byte	0x4
 929 0052 5B020000 		.4byte	.LASF5
 930 0056 02       		.uleb128 0x2
 931 0057 01       		.byte	0x1
 932 0058 06       		.byte	0x6
 933 0059 71000000 		.4byte	.LASF6
 934 005d 02       		.uleb128 0x2
 935 005e 01       		.byte	0x1
 936 005f 08       		.byte	0x8
 937 0060 19030000 		.4byte	.LASF7
 938 0064 02       		.uleb128 0x2
 939 0065 02       		.byte	0x2
 940 0066 07       		.byte	0x7
 941 0067 FE010000 		.4byte	.LASF8
 942 006b 02       		.uleb128 0x2
 943 006c 04       		.byte	0x4
 944 006d 05       		.byte	0x5
 945 006e 11010000 		.4byte	.LASF9
 946 0072 02       		.uleb128 0x2
 947 0073 04       		.byte	0x4
 948 0074 07       		.byte	0x7
 949 0075 CF010000 		.4byte	.LASF10
 950 0079 02       		.uleb128 0x2
 951 007a 04       		.byte	0x4
 952 007b 07       		.byte	0x7
 953 007c 52020000 		.4byte	.LASF11
 954 0080 02       		.uleb128 0x2
 955 0081 01       		.byte	0x1
 956 0082 08       		.byte	0x8
 957 0083 C0030000 		.4byte	.LASF12
 958 0087 04       		.uleb128 0x4
 959 0088 31010000 		.4byte	.LASF13
 960 008c 02       		.byte	0x2
 961 008d E401     		.2byte	0x1e4
 962 008f 5D000000 		.4byte	0x5d
 963 0093 04       		.uleb128 0x4
 964 0094 00000000 		.4byte	.LASF14
 965 0098 02       		.byte	0x2
 966 0099 E501     		.2byte	0x1e5
 967 009b 64000000 		.4byte	0x64
 968 009f 04       		.uleb128 0x4
 969 00a0 8D010000 		.4byte	.LASF15
 970 00a4 02       		.byte	0x2
 971 00a5 E601     		.2byte	0x1e6
 972 00a7 72000000 		.4byte	0x72
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 34


 973 00ab 04       		.uleb128 0x4
 974 00ac 20020000 		.4byte	.LASF16
 975 00b0 02       		.byte	0x2
 976 00b1 E701     		.2byte	0x1e7
 977 00b3 56000000 		.4byte	0x56
 978 00b7 04       		.uleb128 0x4
 979 00b8 5C040000 		.4byte	.LASF17
 980 00bc 02       		.byte	0x2
 981 00bd E801     		.2byte	0x1e8
 982 00bf 41000000 		.4byte	0x41
 983 00c3 04       		.uleb128 0x4
 984 00c4 0B010000 		.4byte	.LASF18
 985 00c8 02       		.byte	0x2
 986 00c9 E901     		.2byte	0x1e9
 987 00cb 6B000000 		.4byte	0x6b
 988 00cf 04       		.uleb128 0x4
 989 00d0 4A020000 		.4byte	.LASF19
 990 00d4 02       		.byte	0x2
 991 00d5 EA01     		.2byte	0x1ea
 992 00d7 2C000000 		.4byte	0x2c
 993 00db 02       		.uleb128 0x2
 994 00dc 08       		.byte	0x8
 995 00dd 04       		.byte	0x4
 996 00de AA040000 		.4byte	.LASF20
 997 00e2 04       		.uleb128 0x4
 998 00e3 CB020000 		.4byte	.LASF21
 999 00e7 02       		.byte	0x2
 1000 00e8 EF01     		.2byte	0x1ef
 1001 00ea 33000000 		.4byte	0x33
 1002 00ee 04       		.uleb128 0x4
 1003 00ef 14030000 		.4byte	.LASF22
 1004 00f3 02       		.byte	0x2
 1005 00f4 8E02     		.2byte	0x28e
 1006 00f6 FA000000 		.4byte	0xfa
 1007 00fa 05       		.uleb128 0x5
 1008 00fb 87000000 		.4byte	0x87
 1009 00ff 04       		.uleb128 0x4
 1010 0100 2B010000 		.4byte	.LASF23
 1011 0104 02       		.byte	0x2
 1012 0105 8F02     		.2byte	0x28f
 1013 0107 0B010000 		.4byte	0x10b
 1014 010b 05       		.uleb128 0x5
 1015 010c 93000000 		.4byte	0x93
 1016 0110 04       		.uleb128 0x4
 1017 0111 2C020000 		.4byte	.LASF24
 1018 0115 02       		.byte	0x2
 1019 0116 9002     		.2byte	0x290
 1020 0118 1C010000 		.4byte	0x11c
 1021 011c 05       		.uleb128 0x5
 1022 011d 9F000000 		.4byte	0x9f
 1023 0121 06       		.uleb128 0x6
 1024 0122 53030000 		.4byte	.LASF27
 1025 0126 01       		.byte	0x1
 1026 0127 8F       		.byte	0x8f
 1027 0128 00000000 		.4byte	.LFB2
 1028 012c 9C000000 		.4byte	.LFE2-.LFB2
 1029 0130 01       		.uleb128 0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 35


 1030 0131 9C       		.byte	0x9c
 1031 0132 7A010000 		.4byte	0x17a
 1032 0136 07       		.uleb128 0x7
 1033 0137 93040000 		.4byte	.LASF25
 1034 013b 01       		.byte	0x1
 1035 013c 91       		.byte	0x91
 1036 013d 87000000 		.4byte	0x87
 1037 0141 00000000 		.4byte	.LLST0
 1038 0145 07       		.uleb128 0x7
 1039 0146 05040000 		.4byte	.LASF26
 1040 014a 01       		.byte	0x1
 1041 014b 92       		.byte	0x92
 1042 014c 87000000 		.4byte	0x87
 1043 0150 3D000000 		.4byte	.LLST1
 1044 0154 08       		.uleb128 0x8
 1045 0155 06000000 		.4byte	.LVL0
 1046 0159 54050000 		.4byte	0x554
 1047 015d 09       		.uleb128 0x9
 1048 015e 7A000000 		.4byte	.LVL7
 1049 0162 5F050000 		.4byte	0x55f
 1050 0166 70010000 		.4byte	0x170
 1051 016a 0A       		.uleb128 0xa
 1052 016b 01       		.uleb128 0x1
 1053 016c 50       		.byte	0x50
 1054 016d 01       		.uleb128 0x1
 1055 016e 3A       		.byte	0x3a
 1056 016f 00       		.byte	0
 1057 0170 0B       		.uleb128 0xb
 1058 0171 8A000000 		.4byte	.LVL9
 1059 0175 6A050000 		.4byte	0x56a
 1060 0179 00       		.byte	0
 1061 017a 06       		.uleb128 0x6
 1062 017b B1040000 		.4byte	.LASF28
 1063 017f 01       		.byte	0x1
 1064 0180 F8       		.byte	0xf8
 1065 0181 00000000 		.4byte	.LFB3
 1066 0185 48000000 		.4byte	.LFE3-.LFB3
 1067 0189 01       		.uleb128 0x1
 1068 018a 9C       		.byte	0x9c
 1069 018b B1010000 		.4byte	0x1b1
 1070 018f 07       		.uleb128 0x7
 1071 0190 05040000 		.4byte	.LASF26
 1072 0194 01       		.byte	0x1
 1073 0195 FA       		.byte	0xfa
 1074 0196 87000000 		.4byte	0x87
 1075 019a 50000000 		.4byte	.LLST2
 1076 019e 08       		.uleb128 0x8
 1077 019f 06000000 		.4byte	.LVL10
 1078 01a3 54050000 		.4byte	0x554
 1079 01a7 0B       		.uleb128 0xb
 1080 01a8 42000000 		.4byte	.LVL11
 1081 01ac 6A050000 		.4byte	0x56a
 1082 01b0 00       		.byte	0
 1083 01b1 0C       		.uleb128 0xc
 1084 01b2 37040000 		.4byte	.LASF29
 1085 01b6 01       		.byte	0x1
 1086 01b7 2201     		.2byte	0x122
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 36


 1087 01b9 00000000 		.4byte	.LFB4
 1088 01bd 18000000 		.4byte	.LFE4-.LFB4
 1089 01c1 01       		.uleb128 0x1
 1090 01c2 9C       		.byte	0x9c
 1091 01c3 E8010000 		.4byte	0x1e8
 1092 01c7 0D       		.uleb128 0xd
 1093 01c8 0E030000 		.4byte	.LASF31
 1094 01cc 01       		.byte	0x1
 1095 01cd 2201     		.2byte	0x122
 1096 01cf 87000000 		.4byte	0x87
 1097 01d3 63000000 		.4byte	.LLST3
 1098 01d7 0E       		.uleb128 0xe
 1099 01d8 93040000 		.4byte	.LASF25
 1100 01dc 01       		.byte	0x1
 1101 01dd 2401     		.2byte	0x124
 1102 01df 87000000 		.4byte	0x87
 1103 01e3 95000000 		.4byte	.LLST4
 1104 01e7 00       		.byte	0
 1105 01e8 0F       		.uleb128 0xf
 1106 01e9 39000000 		.4byte	.LASF68
 1107 01ed 01       		.byte	0x1
 1108 01ee 6302     		.2byte	0x263
 1109 01f0 01       		.byte	0x1
 1110 01f1 0E020000 		.4byte	0x20e
 1111 01f5 10       		.uleb128 0x10
 1112 01f6 92030000 		.4byte	.LASF32
 1113 01fa 01       		.byte	0x1
 1114 01fb 6302     		.2byte	0x263
 1115 01fd 87000000 		.4byte	0x87
 1116 0201 11       		.uleb128 0x11
 1117 0202 32000000 		.4byte	.LASF69
 1118 0206 01       		.byte	0x1
 1119 0207 6502     		.2byte	0x265
 1120 0209 C3000000 		.4byte	0xc3
 1121 020d 00       		.byte	0
 1122 020e 0C       		.uleb128 0xc
 1123 020f 67020000 		.4byte	.LASF30
 1124 0213 01       		.byte	0x1
 1125 0214 5401     		.2byte	0x154
 1126 0216 00000000 		.4byte	.LFB5
 1127 021a 60000000 		.4byte	.LFE5-.LFB5
 1128 021e 01       		.uleb128 0x1
 1129 021f 9C       		.byte	0x9c
 1130 0220 6A020000 		.4byte	0x26a
 1131 0224 0D       		.uleb128 0xd
 1132 0225 92030000 		.4byte	.LASF32
 1133 0229 01       		.byte	0x1
 1134 022a 5401     		.2byte	0x154
 1135 022c 87000000 		.4byte	0x87
 1136 0230 B3000000 		.4byte	.LLST5
 1137 0234 0E       		.uleb128 0xe
 1138 0235 93040000 		.4byte	.LASF25
 1139 0239 01       		.byte	0x1
 1140 023a 5601     		.2byte	0x156
 1141 023c 87000000 		.4byte	0x87
 1142 0240 D4000000 		.4byte	.LLST6
 1143 0244 12       		.uleb128 0x12
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 37


 1144 0245 E8010000 		.4byte	0x1e8
 1145 0249 28000000 		.4byte	.LBB4
 1146 024d 00000000 		.4byte	.Ldebug_ranges0+0
 1147 0251 01       		.byte	0x1
 1148 0252 6D01     		.2byte	0x16d
 1149 0254 13       		.uleb128 0x13
 1150 0255 F5010000 		.4byte	0x1f5
 1151 0259 14       		.uleb128 0x14
 1152 025a 00000000 		.4byte	.Ldebug_ranges0+0
 1153 025e 15       		.uleb128 0x15
 1154 025f 01020000 		.4byte	0x201
 1155 0263 E9000000 		.4byte	.LLST7
 1156 0267 00       		.byte	0
 1157 0268 00       		.byte	0
 1158 0269 00       		.byte	0
 1159 026a 06       		.uleb128 0x6
 1160 026b 11020000 		.4byte	.LASF33
 1161 026f 01       		.byte	0x1
 1162 0270 6A       		.byte	0x6a
 1163 0271 00000000 		.4byte	.LFB1
 1164 0275 3C000000 		.4byte	.LFE1-.LFB1
 1165 0279 01       		.uleb128 0x1
 1166 027a 9C       		.byte	0x9c
 1167 027b CD020000 		.4byte	0x2cd
 1168 027f 09       		.uleb128 0x9
 1169 0280 08000000 		.4byte	.LVL23
 1170 0284 75050000 		.4byte	0x575
 1171 0288 92020000 		.4byte	0x292
 1172 028c 0A       		.uleb128 0xa
 1173 028d 01       		.uleb128 0x1
 1174 028e 50       		.byte	0x50
 1175 028f 01       		.uleb128 0x1
 1176 0290 40       		.byte	0x40
 1177 0291 00       		.byte	0
 1178 0292 09       		.uleb128 0x9
 1179 0293 10000000 		.4byte	.LVL24
 1180 0297 80050000 		.4byte	0x580
 1181 029b AA020000 		.4byte	0x2aa
 1182 029f 0A       		.uleb128 0xa
 1183 02a0 01       		.uleb128 0x1
 1184 02a1 50       		.byte	0x50
 1185 02a2 01       		.uleb128 0x1
 1186 02a3 30       		.byte	0x30
 1187 02a4 0A       		.uleb128 0xa
 1188 02a5 01       		.uleb128 0x1
 1189 02a6 51       		.byte	0x51
 1190 02a7 01       		.uleb128 0x1
 1191 02a8 37       		.byte	0x37
 1192 02a9 00       		.byte	0
 1193 02aa 09       		.uleb128 0x9
 1194 02ab 18000000 		.4byte	.LVL25
 1195 02af 8B050000 		.4byte	0x58b
 1196 02b3 BD020000 		.4byte	0x2bd
 1197 02b7 0A       		.uleb128 0xa
 1198 02b8 01       		.uleb128 0x1
 1199 02b9 50       		.byte	0x50
 1200 02ba 01       		.uleb128 0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 38


 1201 02bb 30       		.byte	0x30
 1202 02bc 00       		.byte	0
 1203 02bd 16       		.uleb128 0x16
 1204 02be 28000000 		.4byte	.LVL26
 1205 02c2 0E020000 		.4byte	0x20e
 1206 02c6 0A       		.uleb128 0xa
 1207 02c7 01       		.uleb128 0x1
 1208 02c8 50       		.byte	0x50
 1209 02c9 01       		.uleb128 0x1
 1210 02ca 3C       		.byte	0x3c
 1211 02cb 00       		.byte	0
 1212 02cc 00       		.byte	0
 1213 02cd 06       		.uleb128 0x6
 1214 02ce BB020000 		.4byte	.LASF34
 1215 02d2 01       		.byte	0x1
 1216 02d3 4A       		.byte	0x4a
 1217 02d4 00000000 		.4byte	.LFB0
 1218 02d8 1C000000 		.4byte	.LFE0-.LFB0
 1219 02dc 01       		.uleb128 0x1
 1220 02dd 9C       		.byte	0x9c
 1221 02de F5020000 		.4byte	0x2f5
 1222 02e2 08       		.uleb128 0x8
 1223 02e3 0C000000 		.4byte	.LVL27
 1224 02e7 6A020000 		.4byte	0x26a
 1225 02eb 0B       		.uleb128 0xb
 1226 02ec 18000000 		.4byte	.LVL28
 1227 02f0 21010000 		.4byte	0x121
 1228 02f4 00       		.byte	0
 1229 02f5 17       		.uleb128 0x17
 1230 02f6 7C040000 		.4byte	.LASF35
 1231 02fa 01       		.byte	0x1
 1232 02fb 9101     		.2byte	0x191
 1233 02fd 00000000 		.4byte	.LFB6
 1234 0301 10000000 		.4byte	.LFE6-.LFB6
 1235 0305 01       		.uleb128 0x1
 1236 0306 9C       		.byte	0x9c
 1237 0307 17       		.uleb128 0x17
 1238 0308 E5030000 		.4byte	.LASF36
 1239 030c 01       		.byte	0x1
 1240 030d B301     		.2byte	0x1b3
 1241 030f 00000000 		.4byte	.LFB7
 1242 0313 10000000 		.4byte	.LFE7-.LFB7
 1243 0317 01       		.uleb128 0x1
 1244 0318 9C       		.byte	0x9c
 1245 0319 18       		.uleb128 0x18
 1246 031a 1D040000 		.4byte	.LASF39
 1247 031e 01       		.byte	0x1
 1248 031f DB01     		.2byte	0x1db
 1249 0321 87000000 		.4byte	0x87
 1250 0325 00000000 		.4byte	.LFB8
 1251 0329 28000000 		.4byte	.LFE8-.LFB8
 1252 032d 01       		.uleb128 0x1
 1253 032e 9C       		.byte	0x9c
 1254 032f 64030000 		.4byte	0x364
 1255 0333 0D       		.uleb128 0xd
 1256 0334 B3010000 		.4byte	.LASF37
 1257 0338 01       		.byte	0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 39


 1258 0339 DB01     		.2byte	0x1db
 1259 033b 87000000 		.4byte	0x87
 1260 033f FC000000 		.4byte	.LLST8
 1261 0343 0E       		.uleb128 0xe
 1262 0344 16040000 		.4byte	.LASF38
 1263 0348 01       		.byte	0x1
 1264 0349 DD01     		.2byte	0x1dd
 1265 034b 87000000 		.4byte	0x87
 1266 034f 1D010000 		.4byte	.LLST9
 1267 0353 16       		.uleb128 0x16
 1268 0354 1A000000 		.4byte	.LVL33
 1269 0358 5F050000 		.4byte	0x55f
 1270 035c 0A       		.uleb128 0xa
 1271 035d 01       		.uleb128 0x1
 1272 035e 50       		.byte	0x50
 1273 035f 02       		.uleb128 0x2
 1274 0360 74       		.byte	0x74
 1275 0361 00       		.sleb128 0
 1276 0362 00       		.byte	0
 1277 0363 00       		.byte	0
 1278 0364 19       		.uleb128 0x19
 1279 0365 07000000 		.4byte	.LASF70
 1280 0369 01       		.byte	0x1
 1281 036a 0802     		.2byte	0x208
 1282 036c AB000000 		.4byte	0xab
 1283 0370 00000000 		.4byte	.LFB9
 1284 0374 18000000 		.4byte	.LFE9-.LFB9
 1285 0378 01       		.uleb128 0x1
 1286 0379 9C       		.byte	0x9c
 1287 037a 18       		.uleb128 0x18
 1288 037b 7C030000 		.4byte	.LASF40
 1289 037f 01       		.byte	0x1
 1290 0380 2602     		.2byte	0x226
 1291 0382 B7000000 		.4byte	0xb7
 1292 0386 00000000 		.4byte	.LFB10
 1293 038a 18000000 		.4byte	.LFE10-.LFB10
 1294 038e 01       		.uleb128 0x1
 1295 038f 9C       		.byte	0x9c
 1296 0390 A3030000 		.4byte	0x3a3
 1297 0394 1A       		.uleb128 0x1a
 1298 0395 72657300 		.ascii	"res\000"
 1299 0399 01       		.byte	0x1
 1300 039a 2802     		.2byte	0x228
 1301 039c 93000000 		.4byte	0x93
 1302 03a0 01       		.uleb128 0x1
 1303 03a1 53       		.byte	0x53
 1304 03a2 00       		.byte	0
 1305 03a3 0C       		.uleb128 0xc
 1306 03a4 D1020000 		.4byte	.LASF41
 1307 03a8 01       		.byte	0x1
 1308 03a9 4902     		.2byte	0x249
 1309 03ab 00000000 		.4byte	.LFB11
 1310 03af 0C000000 		.4byte	.LFE11-.LFB11
 1311 03b3 01       		.uleb128 0x1
 1312 03b4 9C       		.byte	0x9c
 1313 03b5 C8030000 		.4byte	0x3c8
 1314 03b9 1B       		.uleb128 0x1b
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 40


 1315 03ba DE030000 		.4byte	.LASF42
 1316 03be 01       		.byte	0x1
 1317 03bf 4902     		.2byte	0x249
 1318 03c1 B7000000 		.4byte	0xb7
 1319 03c5 01       		.uleb128 0x1
 1320 03c6 50       		.byte	0x50
 1321 03c7 00       		.byte	0
 1322 03c8 0C       		.uleb128 0xc
 1323 03c9 4A040000 		.4byte	.LASF43
 1324 03cd 01       		.byte	0x1
 1325 03ce B402     		.2byte	0x2b4
 1326 03d0 00000000 		.4byte	.LFB13
 1327 03d4 10000000 		.4byte	.LFE13-.LFB13
 1328 03d8 01       		.uleb128 0x1
 1329 03d9 9C       		.byte	0x9c
 1330 03da EF030000 		.4byte	0x3ef
 1331 03de 0D       		.uleb128 0xd
 1332 03df 4B030000 		.4byte	.LASF44
 1333 03e3 01       		.byte	0x1
 1334 03e4 B402     		.2byte	0x2b4
 1335 03e6 B7000000 		.4byte	0xb7
 1336 03ea 34010000 		.4byte	.LLST10
 1337 03ee 00       		.byte	0
 1338 03ef 0C       		.uleb128 0xc
 1339 03f0 64030000 		.4byte	.LASF45
 1340 03f4 01       		.byte	0x1
 1341 03f5 CF02     		.2byte	0x2cf
 1342 03f7 00000000 		.4byte	.LFB14
 1343 03fb 0C000000 		.4byte	.LFE14-.LFB14
 1344 03ff 01       		.uleb128 0x1
 1345 0400 9C       		.byte	0x9c
 1346 0401 14040000 		.4byte	0x414
 1347 0405 1B       		.uleb128 0x1b
 1348 0406 4B030000 		.4byte	.LASF44
 1349 040a 01       		.byte	0x1
 1350 040b CF02     		.2byte	0x2cf
 1351 040d C3000000 		.4byte	0xc3
 1352 0411 01       		.uleb128 0x1
 1353 0412 50       		.byte	0x50
 1354 0413 00       		.byte	0
 1355 0414 18       		.uleb128 0x18
 1356 0415 27030000 		.4byte	.LASF46
 1357 0419 01       		.byte	0x1
 1358 041a E702     		.2byte	0x2e7
 1359 041c B7000000 		.4byte	0xb7
 1360 0420 00000000 		.4byte	.LFB15
 1361 0424 48000000 		.4byte	.LFE15-.LFB15
 1362 0428 01       		.uleb128 0x1
 1363 0429 9C       		.byte	0x9c
 1364 042a 5F040000 		.4byte	0x45f
 1365 042e 0D       		.uleb128 0xd
 1366 042f FB030000 		.4byte	.LASF47
 1367 0433 01       		.byte	0x1
 1368 0434 E702     		.2byte	0x2e7
 1369 0436 B7000000 		.4byte	0xb7
 1370 043a 55010000 		.4byte	.LLST11
 1371 043e 0E       		.uleb128 0xe
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 41


 1372 043f 25020000 		.4byte	.LASF48
 1373 0443 01       		.byte	0x1
 1374 0444 E902     		.2byte	0x2e9
 1375 0446 B7000000 		.4byte	0xb7
 1376 044a 81010000 		.4byte	.LLST12
 1377 044e 0E       		.uleb128 0xe
 1378 044f 94010000 		.4byte	.LASF49
 1379 0453 01       		.byte	0x1
 1380 0454 EA02     		.2byte	0x2ea
 1381 0456 C3000000 		.4byte	0xc3
 1382 045a 9C010000 		.4byte	.LLST13
 1383 045e 00       		.byte	0
 1384 045f 1C       		.uleb128 0x1c
 1385 0460 7F020000 		.4byte	.LASF50
 1386 0464 01       		.byte	0x1
 1387 0465 1103     		.2byte	0x311
 1388 0467 C3000000 		.4byte	0xc3
 1389 046b 00000000 		.4byte	.LFB16
 1390 046f 44000000 		.4byte	.LFE16-.LFB16
 1391 0473 01       		.uleb128 0x1
 1392 0474 9C       		.byte	0x9c
 1393 0475 AA040000 		.4byte	0x4aa
 1394 0479 0D       		.uleb128 0xd
 1395 047a FB030000 		.4byte	.LASF47
 1396 047e 01       		.byte	0x1
 1397 047f 1103     		.2byte	0x311
 1398 0481 B7000000 		.4byte	0xb7
 1399 0485 BA010000 		.4byte	.LLST14
 1400 0489 0E       		.uleb128 0xe
 1401 048a C8010000 		.4byte	.LASF51
 1402 048e 01       		.byte	0x1
 1403 048f 1403     		.2byte	0x314
 1404 0491 E2000000 		.4byte	0xe2
 1405 0495 D8010000 		.4byte	.LLST15
 1406 0499 0E       		.uleb128 0xe
 1407 049a 94010000 		.4byte	.LASF49
 1408 049e 01       		.byte	0x1
 1409 049f 1503     		.2byte	0x315
 1410 04a1 C3000000 		.4byte	0xc3
 1411 04a5 04020000 		.4byte	.LLST16
 1412 04a9 00       		.byte	0
 1413 04aa 1C       		.uleb128 0x1c
 1414 04ab C5030000 		.4byte	.LASF52
 1415 04af 01       		.byte	0x1
 1416 04b0 3D03     		.2byte	0x33d
 1417 04b2 CF000000 		.4byte	0xcf
 1418 04b6 00000000 		.4byte	.LFB17
 1419 04ba 4C000000 		.4byte	.LFE17-.LFB17
 1420 04be 01       		.uleb128 0x1
 1421 04bf 9C       		.byte	0x9c
 1422 04c0 F5040000 		.4byte	0x4f5
 1423 04c4 0D       		.uleb128 0xd
 1424 04c5 FB030000 		.4byte	.LASF47
 1425 04c9 01       		.byte	0x1
 1426 04ca 3D03     		.2byte	0x33d
 1427 04cc B7000000 		.4byte	0xb7
 1428 04d0 22020000 		.4byte	.LLST17
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 42


 1429 04d4 0E       		.uleb128 0xe
 1430 04d5 E1010000 		.4byte	.LASF53
 1431 04d9 01       		.byte	0x1
 1432 04da 3F03     		.2byte	0x33f
 1433 04dc CF000000 		.4byte	0xcf
 1434 04e0 40020000 		.4byte	.LLST18
 1435 04e4 0E       		.uleb128 0xe
 1436 04e5 94010000 		.4byte	.LASF49
 1437 04e9 01       		.byte	0x1
 1438 04ea 4003     		.2byte	0x340
 1439 04ec C3000000 		.4byte	0xc3
 1440 04f0 68020000 		.4byte	.LLST19
 1441 04f4 00       		.byte	0
 1442 04f5 1D       		.uleb128 0x1d
 1443 04f6 FC020000 		.4byte	.LASF54
 1444 04fa 01       		.byte	0x1
 1445 04fb 23       		.byte	0x23
 1446 04fc 87000000 		.4byte	0x87
 1447 0500 05       		.uleb128 0x5
 1448 0501 03       		.byte	0x3
 1449 0502 00000000 		.4byte	ADC_SAR_1_initVar
 1450 0506 1D       		.uleb128 0x1d
 1451 0507 1A010000 		.4byte	.LASF55
 1452 050b 01       		.byte	0x1
 1453 050c 24       		.byte	0x24
 1454 050d 17050000 		.4byte	0x517
 1455 0511 05       		.uleb128 0x5
 1456 0512 03       		.byte	0x3
 1457 0513 00000000 		.4byte	ADC_SAR_1_offset
 1458 0517 05       		.uleb128 0x5
 1459 0518 B7000000 		.4byte	0xb7
 1460 051c 1D       		.uleb128 0x1d
 1461 051d 32020000 		.4byte	.LASF56
 1462 0521 01       		.byte	0x1
 1463 0522 25       		.byte	0x25
 1464 0523 17050000 		.4byte	0x517
 1465 0527 05       		.uleb128 0x5
 1466 0528 03       		.byte	0x3
 1467 0529 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1468 052d 1D       		.uleb128 0x1d
 1469 052e 62040000 		.4byte	.LASF57
 1470 0532 01       		.byte	0x1
 1471 0533 26       		.byte	0x26
 1472 0534 3E050000 		.4byte	0x53e
 1473 0538 05       		.uleb128 0x5
 1474 0539 03       		.byte	0x3
 1475 053a 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1476 053e 05       		.uleb128 0x5
 1477 053f C3000000 		.4byte	0xc3
 1478 0543 1D       		.uleb128 0x1d
 1479 0544 9A040000 		.4byte	.LASF58
 1480 0548 01       		.byte	0x1
 1481 0549 27       		.byte	0x27
 1482 054a 17050000 		.4byte	0x517
 1483 054e 05       		.uleb128 0x5
 1484 054f 03       		.byte	0x3
 1485 0550 00000000 		.4byte	ADC_SAR_1_shift
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 43


 1486 0554 1E       		.uleb128 0x1e
 1487 0555 E7010000 		.4byte	.LASF59
 1488 0559 E7010000 		.4byte	.LASF59
 1489 055d 03       		.byte	0x3
 1490 055e 7D       		.byte	0x7d
 1491 055f 1E       		.uleb128 0x1e
 1492 0560 37010000 		.4byte	.LASF60
 1493 0564 37010000 		.4byte	.LASF60
 1494 0568 03       		.byte	0x3
 1495 0569 77       		.byte	0x77
 1496 056a 1E       		.uleb128 0x1e
 1497 056b 1C000000 		.4byte	.LASF61
 1498 056f 1C000000 		.4byte	.LASF61
 1499 0573 03       		.byte	0x3
 1500 0574 7E       		.byte	0x7e
 1501 0575 1E       		.uleb128 0x1e
 1502 0576 99020000 		.4byte	.LASF62
 1503 057a 99020000 		.4byte	.LASF62
 1504 057e 04       		.byte	0x4
 1505 057f 32       		.byte	0x32
 1506 0580 1E       		.uleb128 0x1e
 1507 0581 E5020000 		.4byte	.LASF63
 1508 0585 E5020000 		.4byte	.LASF63
 1509 0589 03       		.byte	0x3
 1510 058a 8B       		.byte	0x8b
 1511 058b 1E       		.uleb128 0x1e
 1512 058c A4010000 		.4byte	.LASF64
 1513 0590 A4010000 		.4byte	.LASF64
 1514 0594 03       		.byte	0x3
 1515 0595 88       		.byte	0x88
 1516 0596 00       		.byte	0
 1517              		.section	.debug_abbrev,"",%progbits
 1518              	.Ldebug_abbrev0:
 1519 0000 01       		.uleb128 0x1
 1520 0001 11       		.uleb128 0x11
 1521 0002 01       		.byte	0x1
 1522 0003 25       		.uleb128 0x25
 1523 0004 0E       		.uleb128 0xe
 1524 0005 13       		.uleb128 0x13
 1525 0006 0B       		.uleb128 0xb
 1526 0007 03       		.uleb128 0x3
 1527 0008 0E       		.uleb128 0xe
 1528 0009 1B       		.uleb128 0x1b
 1529 000a 0E       		.uleb128 0xe
 1530 000b 55       		.uleb128 0x55
 1531 000c 17       		.uleb128 0x17
 1532 000d 11       		.uleb128 0x11
 1533 000e 01       		.uleb128 0x1
 1534 000f 10       		.uleb128 0x10
 1535 0010 17       		.uleb128 0x17
 1536 0011 00       		.byte	0
 1537 0012 00       		.byte	0
 1538 0013 02       		.uleb128 0x2
 1539 0014 24       		.uleb128 0x24
 1540 0015 00       		.byte	0
 1541 0016 0B       		.uleb128 0xb
 1542 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 44


 1543 0018 3E       		.uleb128 0x3e
 1544 0019 0B       		.uleb128 0xb
 1545 001a 03       		.uleb128 0x3
 1546 001b 0E       		.uleb128 0xe
 1547 001c 00       		.byte	0
 1548 001d 00       		.byte	0
 1549 001e 03       		.uleb128 0x3
 1550 001f 24       		.uleb128 0x24
 1551 0020 00       		.byte	0
 1552 0021 0B       		.uleb128 0xb
 1553 0022 0B       		.uleb128 0xb
 1554 0023 3E       		.uleb128 0x3e
 1555 0024 0B       		.uleb128 0xb
 1556 0025 03       		.uleb128 0x3
 1557 0026 08       		.uleb128 0x8
 1558 0027 00       		.byte	0
 1559 0028 00       		.byte	0
 1560 0029 04       		.uleb128 0x4
 1561 002a 16       		.uleb128 0x16
 1562 002b 00       		.byte	0
 1563 002c 03       		.uleb128 0x3
 1564 002d 0E       		.uleb128 0xe
 1565 002e 3A       		.uleb128 0x3a
 1566 002f 0B       		.uleb128 0xb
 1567 0030 3B       		.uleb128 0x3b
 1568 0031 05       		.uleb128 0x5
 1569 0032 49       		.uleb128 0x49
 1570 0033 13       		.uleb128 0x13
 1571 0034 00       		.byte	0
 1572 0035 00       		.byte	0
 1573 0036 05       		.uleb128 0x5
 1574 0037 35       		.uleb128 0x35
 1575 0038 00       		.byte	0
 1576 0039 49       		.uleb128 0x49
 1577 003a 13       		.uleb128 0x13
 1578 003b 00       		.byte	0
 1579 003c 00       		.byte	0
 1580 003d 06       		.uleb128 0x6
 1581 003e 2E       		.uleb128 0x2e
 1582 003f 01       		.byte	0x1
 1583 0040 3F       		.uleb128 0x3f
 1584 0041 19       		.uleb128 0x19
 1585 0042 03       		.uleb128 0x3
 1586 0043 0E       		.uleb128 0xe
 1587 0044 3A       		.uleb128 0x3a
 1588 0045 0B       		.uleb128 0xb
 1589 0046 3B       		.uleb128 0x3b
 1590 0047 0B       		.uleb128 0xb
 1591 0048 27       		.uleb128 0x27
 1592 0049 19       		.uleb128 0x19
 1593 004a 11       		.uleb128 0x11
 1594 004b 01       		.uleb128 0x1
 1595 004c 12       		.uleb128 0x12
 1596 004d 06       		.uleb128 0x6
 1597 004e 40       		.uleb128 0x40
 1598 004f 18       		.uleb128 0x18
 1599 0050 9742     		.uleb128 0x2117
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 45


 1600 0052 19       		.uleb128 0x19
 1601 0053 01       		.uleb128 0x1
 1602 0054 13       		.uleb128 0x13
 1603 0055 00       		.byte	0
 1604 0056 00       		.byte	0
 1605 0057 07       		.uleb128 0x7
 1606 0058 34       		.uleb128 0x34
 1607 0059 00       		.byte	0
 1608 005a 03       		.uleb128 0x3
 1609 005b 0E       		.uleb128 0xe
 1610 005c 3A       		.uleb128 0x3a
 1611 005d 0B       		.uleb128 0xb
 1612 005e 3B       		.uleb128 0x3b
 1613 005f 0B       		.uleb128 0xb
 1614 0060 49       		.uleb128 0x49
 1615 0061 13       		.uleb128 0x13
 1616 0062 02       		.uleb128 0x2
 1617 0063 17       		.uleb128 0x17
 1618 0064 00       		.byte	0
 1619 0065 00       		.byte	0
 1620 0066 08       		.uleb128 0x8
 1621 0067 898201   		.uleb128 0x4109
 1622 006a 00       		.byte	0
 1623 006b 11       		.uleb128 0x11
 1624 006c 01       		.uleb128 0x1
 1625 006d 31       		.uleb128 0x31
 1626 006e 13       		.uleb128 0x13
 1627 006f 00       		.byte	0
 1628 0070 00       		.byte	0
 1629 0071 09       		.uleb128 0x9
 1630 0072 898201   		.uleb128 0x4109
 1631 0075 01       		.byte	0x1
 1632 0076 11       		.uleb128 0x11
 1633 0077 01       		.uleb128 0x1
 1634 0078 31       		.uleb128 0x31
 1635 0079 13       		.uleb128 0x13
 1636 007a 01       		.uleb128 0x1
 1637 007b 13       		.uleb128 0x13
 1638 007c 00       		.byte	0
 1639 007d 00       		.byte	0
 1640 007e 0A       		.uleb128 0xa
 1641 007f 8A8201   		.uleb128 0x410a
 1642 0082 00       		.byte	0
 1643 0083 02       		.uleb128 0x2
 1644 0084 18       		.uleb128 0x18
 1645 0085 9142     		.uleb128 0x2111
 1646 0087 18       		.uleb128 0x18
 1647 0088 00       		.byte	0
 1648 0089 00       		.byte	0
 1649 008a 0B       		.uleb128 0xb
 1650 008b 898201   		.uleb128 0x4109
 1651 008e 00       		.byte	0
 1652 008f 11       		.uleb128 0x11
 1653 0090 01       		.uleb128 0x1
 1654 0091 9542     		.uleb128 0x2115
 1655 0093 19       		.uleb128 0x19
 1656 0094 31       		.uleb128 0x31
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 46


 1657 0095 13       		.uleb128 0x13
 1658 0096 00       		.byte	0
 1659 0097 00       		.byte	0
 1660 0098 0C       		.uleb128 0xc
 1661 0099 2E       		.uleb128 0x2e
 1662 009a 01       		.byte	0x1
 1663 009b 3F       		.uleb128 0x3f
 1664 009c 19       		.uleb128 0x19
 1665 009d 03       		.uleb128 0x3
 1666 009e 0E       		.uleb128 0xe
 1667 009f 3A       		.uleb128 0x3a
 1668 00a0 0B       		.uleb128 0xb
 1669 00a1 3B       		.uleb128 0x3b
 1670 00a2 05       		.uleb128 0x5
 1671 00a3 27       		.uleb128 0x27
 1672 00a4 19       		.uleb128 0x19
 1673 00a5 11       		.uleb128 0x11
 1674 00a6 01       		.uleb128 0x1
 1675 00a7 12       		.uleb128 0x12
 1676 00a8 06       		.uleb128 0x6
 1677 00a9 40       		.uleb128 0x40
 1678 00aa 18       		.uleb128 0x18
 1679 00ab 9742     		.uleb128 0x2117
 1680 00ad 19       		.uleb128 0x19
 1681 00ae 01       		.uleb128 0x1
 1682 00af 13       		.uleb128 0x13
 1683 00b0 00       		.byte	0
 1684 00b1 00       		.byte	0
 1685 00b2 0D       		.uleb128 0xd
 1686 00b3 05       		.uleb128 0x5
 1687 00b4 00       		.byte	0
 1688 00b5 03       		.uleb128 0x3
 1689 00b6 0E       		.uleb128 0xe
 1690 00b7 3A       		.uleb128 0x3a
 1691 00b8 0B       		.uleb128 0xb
 1692 00b9 3B       		.uleb128 0x3b
 1693 00ba 05       		.uleb128 0x5
 1694 00bb 49       		.uleb128 0x49
 1695 00bc 13       		.uleb128 0x13
 1696 00bd 02       		.uleb128 0x2
 1697 00be 17       		.uleb128 0x17
 1698 00bf 00       		.byte	0
 1699 00c0 00       		.byte	0
 1700 00c1 0E       		.uleb128 0xe
 1701 00c2 34       		.uleb128 0x34
 1702 00c3 00       		.byte	0
 1703 00c4 03       		.uleb128 0x3
 1704 00c5 0E       		.uleb128 0xe
 1705 00c6 3A       		.uleb128 0x3a
 1706 00c7 0B       		.uleb128 0xb
 1707 00c8 3B       		.uleb128 0x3b
 1708 00c9 05       		.uleb128 0x5
 1709 00ca 49       		.uleb128 0x49
 1710 00cb 13       		.uleb128 0x13
 1711 00cc 02       		.uleb128 0x2
 1712 00cd 17       		.uleb128 0x17
 1713 00ce 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 47


 1714 00cf 00       		.byte	0
 1715 00d0 0F       		.uleb128 0xf
 1716 00d1 2E       		.uleb128 0x2e
 1717 00d2 01       		.byte	0x1
 1718 00d3 03       		.uleb128 0x3
 1719 00d4 0E       		.uleb128 0xe
 1720 00d5 3A       		.uleb128 0x3a
 1721 00d6 0B       		.uleb128 0xb
 1722 00d7 3B       		.uleb128 0x3b
 1723 00d8 05       		.uleb128 0x5
 1724 00d9 27       		.uleb128 0x27
 1725 00da 19       		.uleb128 0x19
 1726 00db 20       		.uleb128 0x20
 1727 00dc 0B       		.uleb128 0xb
 1728 00dd 01       		.uleb128 0x1
 1729 00de 13       		.uleb128 0x13
 1730 00df 00       		.byte	0
 1731 00e0 00       		.byte	0
 1732 00e1 10       		.uleb128 0x10
 1733 00e2 05       		.uleb128 0x5
 1734 00e3 00       		.byte	0
 1735 00e4 03       		.uleb128 0x3
 1736 00e5 0E       		.uleb128 0xe
 1737 00e6 3A       		.uleb128 0x3a
 1738 00e7 0B       		.uleb128 0xb
 1739 00e8 3B       		.uleb128 0x3b
 1740 00e9 05       		.uleb128 0x5
 1741 00ea 49       		.uleb128 0x49
 1742 00eb 13       		.uleb128 0x13
 1743 00ec 00       		.byte	0
 1744 00ed 00       		.byte	0
 1745 00ee 11       		.uleb128 0x11
 1746 00ef 34       		.uleb128 0x34
 1747 00f0 00       		.byte	0
 1748 00f1 03       		.uleb128 0x3
 1749 00f2 0E       		.uleb128 0xe
 1750 00f3 3A       		.uleb128 0x3a
 1751 00f4 0B       		.uleb128 0xb
 1752 00f5 3B       		.uleb128 0x3b
 1753 00f6 05       		.uleb128 0x5
 1754 00f7 49       		.uleb128 0x49
 1755 00f8 13       		.uleb128 0x13
 1756 00f9 00       		.byte	0
 1757 00fa 00       		.byte	0
 1758 00fb 12       		.uleb128 0x12
 1759 00fc 1D       		.uleb128 0x1d
 1760 00fd 01       		.byte	0x1
 1761 00fe 31       		.uleb128 0x31
 1762 00ff 13       		.uleb128 0x13
 1763 0100 52       		.uleb128 0x52
 1764 0101 01       		.uleb128 0x1
 1765 0102 55       		.uleb128 0x55
 1766 0103 17       		.uleb128 0x17
 1767 0104 58       		.uleb128 0x58
 1768 0105 0B       		.uleb128 0xb
 1769 0106 59       		.uleb128 0x59
 1770 0107 05       		.uleb128 0x5
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 48


 1771 0108 00       		.byte	0
 1772 0109 00       		.byte	0
 1773 010a 13       		.uleb128 0x13
 1774 010b 05       		.uleb128 0x5
 1775 010c 00       		.byte	0
 1776 010d 31       		.uleb128 0x31
 1777 010e 13       		.uleb128 0x13
 1778 010f 00       		.byte	0
 1779 0110 00       		.byte	0
 1780 0111 14       		.uleb128 0x14
 1781 0112 0B       		.uleb128 0xb
 1782 0113 01       		.byte	0x1
 1783 0114 55       		.uleb128 0x55
 1784 0115 17       		.uleb128 0x17
 1785 0116 00       		.byte	0
 1786 0117 00       		.byte	0
 1787 0118 15       		.uleb128 0x15
 1788 0119 34       		.uleb128 0x34
 1789 011a 00       		.byte	0
 1790 011b 31       		.uleb128 0x31
 1791 011c 13       		.uleb128 0x13
 1792 011d 02       		.uleb128 0x2
 1793 011e 17       		.uleb128 0x17
 1794 011f 00       		.byte	0
 1795 0120 00       		.byte	0
 1796 0121 16       		.uleb128 0x16
 1797 0122 898201   		.uleb128 0x4109
 1798 0125 01       		.byte	0x1
 1799 0126 11       		.uleb128 0x11
 1800 0127 01       		.uleb128 0x1
 1801 0128 31       		.uleb128 0x31
 1802 0129 13       		.uleb128 0x13
 1803 012a 00       		.byte	0
 1804 012b 00       		.byte	0
 1805 012c 17       		.uleb128 0x17
 1806 012d 2E       		.uleb128 0x2e
 1807 012e 00       		.byte	0
 1808 012f 3F       		.uleb128 0x3f
 1809 0130 19       		.uleb128 0x19
 1810 0131 03       		.uleb128 0x3
 1811 0132 0E       		.uleb128 0xe
 1812 0133 3A       		.uleb128 0x3a
 1813 0134 0B       		.uleb128 0xb
 1814 0135 3B       		.uleb128 0x3b
 1815 0136 05       		.uleb128 0x5
 1816 0137 27       		.uleb128 0x27
 1817 0138 19       		.uleb128 0x19
 1818 0139 11       		.uleb128 0x11
 1819 013a 01       		.uleb128 0x1
 1820 013b 12       		.uleb128 0x12
 1821 013c 06       		.uleb128 0x6
 1822 013d 40       		.uleb128 0x40
 1823 013e 18       		.uleb128 0x18
 1824 013f 9742     		.uleb128 0x2117
 1825 0141 19       		.uleb128 0x19
 1826 0142 00       		.byte	0
 1827 0143 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 49


 1828 0144 18       		.uleb128 0x18
 1829 0145 2E       		.uleb128 0x2e
 1830 0146 01       		.byte	0x1
 1831 0147 3F       		.uleb128 0x3f
 1832 0148 19       		.uleb128 0x19
 1833 0149 03       		.uleb128 0x3
 1834 014a 0E       		.uleb128 0xe
 1835 014b 3A       		.uleb128 0x3a
 1836 014c 0B       		.uleb128 0xb
 1837 014d 3B       		.uleb128 0x3b
 1838 014e 05       		.uleb128 0x5
 1839 014f 27       		.uleb128 0x27
 1840 0150 19       		.uleb128 0x19
 1841 0151 49       		.uleb128 0x49
 1842 0152 13       		.uleb128 0x13
 1843 0153 11       		.uleb128 0x11
 1844 0154 01       		.uleb128 0x1
 1845 0155 12       		.uleb128 0x12
 1846 0156 06       		.uleb128 0x6
 1847 0157 40       		.uleb128 0x40
 1848 0158 18       		.uleb128 0x18
 1849 0159 9742     		.uleb128 0x2117
 1850 015b 19       		.uleb128 0x19
 1851 015c 01       		.uleb128 0x1
 1852 015d 13       		.uleb128 0x13
 1853 015e 00       		.byte	0
 1854 015f 00       		.byte	0
 1855 0160 19       		.uleb128 0x19
 1856 0161 2E       		.uleb128 0x2e
 1857 0162 00       		.byte	0
 1858 0163 3F       		.uleb128 0x3f
 1859 0164 19       		.uleb128 0x19
 1860 0165 03       		.uleb128 0x3
 1861 0166 0E       		.uleb128 0xe
 1862 0167 3A       		.uleb128 0x3a
 1863 0168 0B       		.uleb128 0xb
 1864 0169 3B       		.uleb128 0x3b
 1865 016a 05       		.uleb128 0x5
 1866 016b 27       		.uleb128 0x27
 1867 016c 19       		.uleb128 0x19
 1868 016d 49       		.uleb128 0x49
 1869 016e 13       		.uleb128 0x13
 1870 016f 11       		.uleb128 0x11
 1871 0170 01       		.uleb128 0x1
 1872 0171 12       		.uleb128 0x12
 1873 0172 06       		.uleb128 0x6
 1874 0173 40       		.uleb128 0x40
 1875 0174 18       		.uleb128 0x18
 1876 0175 9742     		.uleb128 0x2117
 1877 0177 19       		.uleb128 0x19
 1878 0178 00       		.byte	0
 1879 0179 00       		.byte	0
 1880 017a 1A       		.uleb128 0x1a
 1881 017b 34       		.uleb128 0x34
 1882 017c 00       		.byte	0
 1883 017d 03       		.uleb128 0x3
 1884 017e 08       		.uleb128 0x8
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 50


 1885 017f 3A       		.uleb128 0x3a
 1886 0180 0B       		.uleb128 0xb
 1887 0181 3B       		.uleb128 0x3b
 1888 0182 05       		.uleb128 0x5
 1889 0183 49       		.uleb128 0x49
 1890 0184 13       		.uleb128 0x13
 1891 0185 02       		.uleb128 0x2
 1892 0186 18       		.uleb128 0x18
 1893 0187 00       		.byte	0
 1894 0188 00       		.byte	0
 1895 0189 1B       		.uleb128 0x1b
 1896 018a 05       		.uleb128 0x5
 1897 018b 00       		.byte	0
 1898 018c 03       		.uleb128 0x3
 1899 018d 0E       		.uleb128 0xe
 1900 018e 3A       		.uleb128 0x3a
 1901 018f 0B       		.uleb128 0xb
 1902 0190 3B       		.uleb128 0x3b
 1903 0191 05       		.uleb128 0x5
 1904 0192 49       		.uleb128 0x49
 1905 0193 13       		.uleb128 0x13
 1906 0194 02       		.uleb128 0x2
 1907 0195 18       		.uleb128 0x18
 1908 0196 00       		.byte	0
 1909 0197 00       		.byte	0
 1910 0198 1C       		.uleb128 0x1c
 1911 0199 2E       		.uleb128 0x2e
 1912 019a 01       		.byte	0x1
 1913 019b 3F       		.uleb128 0x3f
 1914 019c 19       		.uleb128 0x19
 1915 019d 03       		.uleb128 0x3
 1916 019e 0E       		.uleb128 0xe
 1917 019f 3A       		.uleb128 0x3a
 1918 01a0 0B       		.uleb128 0xb
 1919 01a1 3B       		.uleb128 0x3b
 1920 01a2 05       		.uleb128 0x5
 1921 01a3 27       		.uleb128 0x27
 1922 01a4 19       		.uleb128 0x19
 1923 01a5 49       		.uleb128 0x49
 1924 01a6 13       		.uleb128 0x13
 1925 01a7 11       		.uleb128 0x11
 1926 01a8 01       		.uleb128 0x1
 1927 01a9 12       		.uleb128 0x12
 1928 01aa 06       		.uleb128 0x6
 1929 01ab 40       		.uleb128 0x40
 1930 01ac 18       		.uleb128 0x18
 1931 01ad 9642     		.uleb128 0x2116
 1932 01af 19       		.uleb128 0x19
 1933 01b0 01       		.uleb128 0x1
 1934 01b1 13       		.uleb128 0x13
 1935 01b2 00       		.byte	0
 1936 01b3 00       		.byte	0
 1937 01b4 1D       		.uleb128 0x1d
 1938 01b5 34       		.uleb128 0x34
 1939 01b6 00       		.byte	0
 1940 01b7 03       		.uleb128 0x3
 1941 01b8 0E       		.uleb128 0xe
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 51


 1942 01b9 3A       		.uleb128 0x3a
 1943 01ba 0B       		.uleb128 0xb
 1944 01bb 3B       		.uleb128 0x3b
 1945 01bc 0B       		.uleb128 0xb
 1946 01bd 49       		.uleb128 0x49
 1947 01be 13       		.uleb128 0x13
 1948 01bf 3F       		.uleb128 0x3f
 1949 01c0 19       		.uleb128 0x19
 1950 01c1 02       		.uleb128 0x2
 1951 01c2 18       		.uleb128 0x18
 1952 01c3 00       		.byte	0
 1953 01c4 00       		.byte	0
 1954 01c5 1E       		.uleb128 0x1e
 1955 01c6 2E       		.uleb128 0x2e
 1956 01c7 00       		.byte	0
 1957 01c8 3F       		.uleb128 0x3f
 1958 01c9 19       		.uleb128 0x19
 1959 01ca 3C       		.uleb128 0x3c
 1960 01cb 19       		.uleb128 0x19
 1961 01cc 6E       		.uleb128 0x6e
 1962 01cd 0E       		.uleb128 0xe
 1963 01ce 03       		.uleb128 0x3
 1964 01cf 0E       		.uleb128 0xe
 1965 01d0 3A       		.uleb128 0x3a
 1966 01d1 0B       		.uleb128 0xb
 1967 01d2 3B       		.uleb128 0x3b
 1968 01d3 0B       		.uleb128 0xb
 1969 01d4 00       		.byte	0
 1970 01d5 00       		.byte	0
 1971 01d6 00       		.byte	0
 1972              		.section	.debug_loc,"",%progbits
 1973              	.Ldebug_loc0:
 1974              	.LLST0:
 1975 0000 38000000 		.4byte	.LVL2
 1976 0004 3C000000 		.4byte	.LVL3
 1977 0008 0500     		.2byte	0x5
 1978 000a 73       		.byte	0x73
 1979 000b 00       		.sleb128 0
 1980 000c 32       		.byte	0x32
 1981 000d 21       		.byte	0x21
 1982 000e 9F       		.byte	0x9f
 1983 000f 3C000000 		.4byte	.LVL3
 1984 0013 40000000 		.4byte	.LVL4
 1985 0017 0100     		.2byte	0x1
 1986 0019 53       		.byte	0x53
 1987 001a 40000000 		.4byte	.LVL4
 1988 001e 42000000 		.4byte	.LVL5
 1989 0022 0200     		.2byte	0x2
 1990 0024 72       		.byte	0x72
 1991 0025 00       		.sleb128 0
 1992 0026 42000000 		.4byte	.LVL5
 1993 002a 44000000 		.4byte	.LVL6
 1994 002e 0500     		.2byte	0x5
 1995 0030 0C       		.byte	0xc
 1996 0031 03590040 		.4byte	0x40005903
 1997 0035 00000000 		.4byte	0
 1998 0039 00000000 		.4byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 52


 1999              	.LLST1:
 2000 003d 0A000000 		.4byte	.LVL1
 2001 0041 84000000 		.4byte	.LVL8
 2002 0045 0100     		.2byte	0x1
 2003 0047 54       		.byte	0x54
 2004 0048 00000000 		.4byte	0
 2005 004c 00000000 		.4byte	0
 2006              	.LLST2:
 2007 0050 06000000 		.4byte	.LVL10
 2008 0054 41000000 		.4byte	.LVL11-1
 2009 0058 0100     		.2byte	0x1
 2010 005a 50       		.byte	0x50
 2011 005b 00000000 		.4byte	0
 2012 005f 00000000 		.4byte	0
 2013              	.LLST3:
 2014 0063 00000000 		.4byte	.LVL12
 2015 0067 00000000 		.4byte	.LVL12
 2016 006b 0100     		.2byte	0x1
 2017 006d 50       		.byte	0x50
 2018 006e 00000000 		.4byte	.LVL12
 2019 0072 0C000000 		.4byte	.LVL14
 2020 0076 0500     		.2byte	0x5
 2021 0078 70       		.byte	0x70
 2022 0079 00       		.sleb128 0
 2023 007a 33       		.byte	0x33
 2024 007b 1A       		.byte	0x1a
 2025 007c 9F       		.byte	0x9f
 2026 007d 0C000000 		.4byte	.LVL14
 2027 0081 18000000 		.4byte	.LFE4
 2028 0085 0600     		.2byte	0x6
 2029 0087 F3       		.byte	0xf3
 2030 0088 01       		.uleb128 0x1
 2031 0089 50       		.byte	0x50
 2032 008a 33       		.byte	0x33
 2033 008b 1A       		.byte	0x1a
 2034 008c 9F       		.byte	0x9f
 2035 008d 00000000 		.4byte	0
 2036 0091 00000000 		.4byte	0
 2037              	.LLST4:
 2038 0095 08000000 		.4byte	.LVL13
 2039 0099 0E000000 		.4byte	.LVL15
 2040 009d 0100     		.2byte	0x1
 2041 009f 53       		.byte	0x53
 2042 00a0 0E000000 		.4byte	.LVL15
 2043 00a4 18000000 		.4byte	.LFE4
 2044 00a8 0100     		.2byte	0x1
 2045 00aa 50       		.byte	0x50
 2046 00ab 00000000 		.4byte	0
 2047 00af 00000000 		.4byte	0
 2048              	.LLST5:
 2049 00b3 00000000 		.4byte	.LVL16
 2050 00b7 12000000 		.4byte	.LVL19
 2051 00bb 0100     		.2byte	0x1
 2052 00bd 50       		.byte	0x50
 2053 00be 12000000 		.4byte	.LVL19
 2054 00c2 60000000 		.4byte	.LFE5
 2055 00c6 0400     		.2byte	0x4
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 53


 2056 00c8 F3       		.byte	0xf3
 2057 00c9 01       		.uleb128 0x1
 2058 00ca 50       		.byte	0x50
 2059 00cb 9F       		.byte	0x9f
 2060 00cc 00000000 		.4byte	0
 2061 00d0 00000000 		.4byte	0
 2062              	.LLST6:
 2063 00d4 0E000000 		.4byte	.LVL17
 2064 00d8 10000000 		.4byte	.LVL18
 2065 00dc 0300     		.2byte	0x3
 2066 00de 08       		.byte	0x8
 2067 00df 44       		.byte	0x44
 2068 00e0 9F       		.byte	0x9f
 2069 00e1 00000000 		.4byte	0
 2070 00e5 00000000 		.4byte	0
 2071              	.LLST7:
 2072 00e9 2E000000 		.4byte	.LVL21
 2073 00ed 3A000000 		.4byte	.LVL22
 2074 00f1 0100     		.2byte	0x1
 2075 00f3 51       		.byte	0x51
 2076 00f4 00000000 		.4byte	0
 2077 00f8 00000000 		.4byte	0
 2078              	.LLST8:
 2079 00fc 00000000 		.4byte	.LVL29
 2080 0100 16000000 		.4byte	.LVL32
 2081 0104 0100     		.2byte	0x1
 2082 0106 50       		.byte	0x50
 2083 0107 16000000 		.4byte	.LVL32
 2084 010b 28000000 		.4byte	.LFE8
 2085 010f 0400     		.2byte	0x4
 2086 0111 F3       		.byte	0xf3
 2087 0112 01       		.uleb128 0x1
 2088 0113 50       		.byte	0x50
 2089 0114 9F       		.byte	0x9f
 2090 0115 00000000 		.4byte	0
 2091 0119 00000000 		.4byte	0
 2092              	.LLST9:
 2093 011d 06000000 		.4byte	.LVL30
 2094 0121 0A000000 		.4byte	.LVL31
 2095 0125 0500     		.2byte	0x5
 2096 0127 74       		.byte	0x74
 2097 0128 00       		.sleb128 0
 2098 0129 31       		.byte	0x31
 2099 012a 1A       		.byte	0x1a
 2100 012b 9F       		.byte	0x9f
 2101 012c 00000000 		.4byte	0
 2102 0130 00000000 		.4byte	0
 2103              	.LLST10:
 2104 0134 00000000 		.4byte	.LVL36
 2105 0138 04000000 		.4byte	.LVL37
 2106 013c 0100     		.2byte	0x1
 2107 013e 50       		.byte	0x50
 2108 013f 04000000 		.4byte	.LVL37
 2109 0143 10000000 		.4byte	.LFE13
 2110 0147 0400     		.2byte	0x4
 2111 0149 F3       		.byte	0xf3
 2112 014a 01       		.uleb128 0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 54


 2113 014b 50       		.byte	0x50
 2114 014c 9F       		.byte	0x9f
 2115 014d 00000000 		.4byte	0
 2116 0151 00000000 		.4byte	0
 2117              	.LLST11:
 2118 0155 00000000 		.4byte	.LVL39
 2119 0159 1C000000 		.4byte	.LVL43
 2120 015d 0100     		.2byte	0x1
 2121 015f 50       		.byte	0x50
 2122 0160 1C000000 		.4byte	.LVL43
 2123 0164 22000000 		.4byte	.LVL44
 2124 0168 0400     		.2byte	0x4
 2125 016a F3       		.byte	0xf3
 2126 016b 01       		.uleb128 0x1
 2127 016c 50       		.byte	0x50
 2128 016d 9F       		.byte	0x9f
 2129 016e 22000000 		.4byte	.LVL44
 2130 0172 38000000 		.4byte	.LVL47
 2131 0176 0100     		.2byte	0x1
 2132 0178 50       		.byte	0x50
 2133 0179 00000000 		.4byte	0
 2134 017d 00000000 		.4byte	0
 2135              	.LLST12:
 2136 0181 32000000 		.4byte	.LVL45
 2137 0185 34000000 		.4byte	.LVL46
 2138 0189 0900     		.2byte	0x9
 2139 018b 73       		.byte	0x73
 2140 018c 00       		.sleb128 0
 2141 018d 72       		.byte	0x72
 2142 018e 00       		.sleb128 0
 2143 018f 22       		.byte	0x22
 2144 0190 71       		.byte	0x71
 2145 0191 00       		.sleb128 0
 2146 0192 1B       		.byte	0x1b
 2147 0193 9F       		.byte	0x9f
 2148 0194 00000000 		.4byte	0
 2149 0198 00000000 		.4byte	0
 2150              	.LLST13:
 2151 019c 10000000 		.4byte	.LVL40
 2152 01a0 12000000 		.4byte	.LVL41
 2153 01a4 0100     		.2byte	0x1
 2154 01a6 51       		.byte	0x51
 2155 01a7 16000000 		.4byte	.LVL42
 2156 01ab 48000000 		.4byte	.LFE15
 2157 01af 0100     		.2byte	0x1
 2158 01b1 51       		.byte	0x51
 2159 01b2 00000000 		.4byte	0
 2160 01b6 00000000 		.4byte	0
 2161              	.LLST14:
 2162 01ba 00000000 		.4byte	.LVL48
 2163 01be 20000000 		.4byte	.LVL52
 2164 01c2 0100     		.2byte	0x1
 2165 01c4 50       		.byte	0x50
 2166 01c5 20000000 		.4byte	.LVL52
 2167 01c9 34000000 		.4byte	.LVL54
 2168 01cd 0100     		.2byte	0x1
 2169 01cf 54       		.byte	0x54
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 55


 2170 01d0 00000000 		.4byte	0
 2171 01d4 00000000 		.4byte	0
 2172              	.LLST15:
 2173 01d8 20000000 		.4byte	.LVL52
 2174 01dc 31000000 		.4byte	.LVL53-1
 2175 01e0 1A00     		.2byte	0x1a
 2176 01e2 74       		.byte	0x74
 2177 01e3 00       		.sleb128 0
 2178 01e4 F7       		.byte	0xf7
 2179 01e5 41       		.uleb128 0x41
 2180 01e6 F7       		.byte	0xf7
 2181 01e7 25       		.uleb128 0x25
 2182 01e8 0C       		.byte	0xc
 2183 01e9 80969800 		.4byte	0x989680
 2184 01ed F7       		.byte	0xf7
 2185 01ee 25       		.uleb128 0x25
 2186 01ef 1E       		.byte	0x1e
 2187 01f0 F7       		.byte	0xf7
 2188 01f1 33       		.uleb128 0x33
 2189 01f2 72       		.byte	0x72
 2190 01f3 00       		.sleb128 0
 2191 01f4 F7       		.byte	0xf7
 2192 01f5 3A       		.uleb128 0x3a
 2193 01f6 F7       		.byte	0xf7
 2194 01f7 33       		.uleb128 0x33
 2195 01f8 1B       		.byte	0x1b
 2196 01f9 F7       		.byte	0xf7
 2197 01fa 25       		.uleb128 0x25
 2198 01fb 9F       		.byte	0x9f
 2199 01fc 00000000 		.4byte	0
 2200 0200 00000000 		.4byte	0
 2201              	.LLST16:
 2202 0204 12000000 		.4byte	.LVL49
 2203 0208 14000000 		.4byte	.LVL50
 2204 020c 0100     		.2byte	0x1
 2205 020e 52       		.byte	0x52
 2206 020f 18000000 		.4byte	.LVL51
 2207 0213 31000000 		.4byte	.LVL53-1
 2208 0217 0100     		.2byte	0x1
 2209 0219 52       		.byte	0x52
 2210 021a 00000000 		.4byte	0
 2211 021e 00000000 		.4byte	0
 2212              	.LLST17:
 2213 0222 00000000 		.4byte	.LVL55
 2214 0226 1E000000 		.4byte	.LVL59
 2215 022a 0100     		.2byte	0x1
 2216 022c 50       		.byte	0x50
 2217 022d 1E000000 		.4byte	.LVL59
 2218 0231 23000000 		.4byte	.LVL60-1
 2219 0235 0100     		.2byte	0x1
 2220 0237 50       		.byte	0x50
 2221 0238 00000000 		.4byte	0
 2222 023c 00000000 		.4byte	0
 2223              	.LLST18:
 2224 0240 1E000000 		.4byte	.LVL59
 2225 0244 23000000 		.4byte	.LVL60-1
 2226 0248 1600     		.2byte	0x16
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 56


 2227 024a 70       		.byte	0x70
 2228 024b 00       		.sleb128 0
 2229 024c F7       		.byte	0xf7
 2230 024d 41       		.uleb128 0x41
 2231 024e F7       		.byte	0xf7
 2232 024f 2C       		.uleb128 0x2c
 2233 0250 F4       		.byte	0xf4
 2234 0251 2C       		.uleb128 0x2c
 2235 0252 04       		.byte	0x4
 2236 0253 00002041 		.4byte	0x41200000
 2237 0257 1E       		.byte	0x1e
 2238 0258 74       		.byte	0x74
 2239 0259 00       		.sleb128 0
 2240 025a F7       		.byte	0xf7
 2241 025b 3A       		.uleb128 0x3a
 2242 025c F7       		.byte	0xf7
 2243 025d 2C       		.uleb128 0x2c
 2244 025e 1B       		.byte	0x1b
 2245 025f 9F       		.byte	0x9f
 2246 0260 00000000 		.4byte	0
 2247 0264 00000000 		.4byte	0
 2248              	.LLST19:
 2249 0268 12000000 		.4byte	.LVL56
 2250 026c 14000000 		.4byte	.LVL57
 2251 0270 0100     		.2byte	0x1
 2252 0272 54       		.byte	0x54
 2253 0273 18000000 		.4byte	.LVL58
 2254 0277 3C000000 		.4byte	.LVL64
 2255 027b 0100     		.2byte	0x1
 2256 027d 54       		.byte	0x54
 2257 027e 00000000 		.4byte	0
 2258 0282 00000000 		.4byte	0
 2259              		.section	.debug_aranges,"",%progbits
 2260 0000 9C000000 		.4byte	0x9c
 2261 0004 0200     		.2byte	0x2
 2262 0006 00000000 		.4byte	.Ldebug_info0
 2263 000a 04       		.byte	0x4
 2264 000b 00       		.byte	0
 2265 000c 0000     		.2byte	0
 2266 000e 0000     		.2byte	0
 2267 0010 00000000 		.4byte	.LFB2
 2268 0014 9C000000 		.4byte	.LFE2-.LFB2
 2269 0018 00000000 		.4byte	.LFB3
 2270 001c 48000000 		.4byte	.LFE3-.LFB3
 2271 0020 00000000 		.4byte	.LFB4
 2272 0024 18000000 		.4byte	.LFE4-.LFB4
 2273 0028 00000000 		.4byte	.LFB5
 2274 002c 60000000 		.4byte	.LFE5-.LFB5
 2275 0030 00000000 		.4byte	.LFB1
 2276 0034 3C000000 		.4byte	.LFE1-.LFB1
 2277 0038 00000000 		.4byte	.LFB0
 2278 003c 1C000000 		.4byte	.LFE0-.LFB0
 2279 0040 00000000 		.4byte	.LFB6
 2280 0044 10000000 		.4byte	.LFE6-.LFB6
 2281 0048 00000000 		.4byte	.LFB7
 2282 004c 10000000 		.4byte	.LFE7-.LFB7
 2283 0050 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 57


 2284 0054 28000000 		.4byte	.LFE8-.LFB8
 2285 0058 00000000 		.4byte	.LFB9
 2286 005c 18000000 		.4byte	.LFE9-.LFB9
 2287 0060 00000000 		.4byte	.LFB10
 2288 0064 18000000 		.4byte	.LFE10-.LFB10
 2289 0068 00000000 		.4byte	.LFB11
 2290 006c 0C000000 		.4byte	.LFE11-.LFB11
 2291 0070 00000000 		.4byte	.LFB13
 2292 0074 10000000 		.4byte	.LFE13-.LFB13
 2293 0078 00000000 		.4byte	.LFB14
 2294 007c 0C000000 		.4byte	.LFE14-.LFB14
 2295 0080 00000000 		.4byte	.LFB15
 2296 0084 48000000 		.4byte	.LFE15-.LFB15
 2297 0088 00000000 		.4byte	.LFB16
 2298 008c 44000000 		.4byte	.LFE16-.LFB16
 2299 0090 00000000 		.4byte	.LFB17
 2300 0094 4C000000 		.4byte	.LFE17-.LFB17
 2301 0098 00000000 		.4byte	0
 2302 009c 00000000 		.4byte	0
 2303              		.section	.debug_ranges,"",%progbits
 2304              	.Ldebug_ranges0:
 2305 0000 28000000 		.4byte	.LBB4
 2306 0004 2A000000 		.4byte	.LBE4
 2307 0008 2E000000 		.4byte	.LBB7
 2308 000c 60000000 		.4byte	.LBE7
 2309 0010 00000000 		.4byte	0
 2310 0014 00000000 		.4byte	0
 2311 0018 00000000 		.4byte	.LFB2
 2312 001c 9C000000 		.4byte	.LFE2
 2313 0020 00000000 		.4byte	.LFB3
 2314 0024 48000000 		.4byte	.LFE3
 2315 0028 00000000 		.4byte	.LFB4
 2316 002c 18000000 		.4byte	.LFE4
 2317 0030 00000000 		.4byte	.LFB5
 2318 0034 60000000 		.4byte	.LFE5
 2319 0038 00000000 		.4byte	.LFB1
 2320 003c 3C000000 		.4byte	.LFE1
 2321 0040 00000000 		.4byte	.LFB0
 2322 0044 1C000000 		.4byte	.LFE0
 2323 0048 00000000 		.4byte	.LFB6
 2324 004c 10000000 		.4byte	.LFE6
 2325 0050 00000000 		.4byte	.LFB7
 2326 0054 10000000 		.4byte	.LFE7
 2327 0058 00000000 		.4byte	.LFB8
 2328 005c 28000000 		.4byte	.LFE8
 2329 0060 00000000 		.4byte	.LFB9
 2330 0064 18000000 		.4byte	.LFE9
 2331 0068 00000000 		.4byte	.LFB10
 2332 006c 18000000 		.4byte	.LFE10
 2333 0070 00000000 		.4byte	.LFB11
 2334 0074 0C000000 		.4byte	.LFE11
 2335 0078 00000000 		.4byte	.LFB13
 2336 007c 10000000 		.4byte	.LFE13
 2337 0080 00000000 		.4byte	.LFB14
 2338 0084 0C000000 		.4byte	.LFE14
 2339 0088 00000000 		.4byte	.LFB15
 2340 008c 48000000 		.4byte	.LFE15
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 58


 2341 0090 00000000 		.4byte	.LFB16
 2342 0094 44000000 		.4byte	.LFE16
 2343 0098 00000000 		.4byte	.LFB17
 2344 009c 4C000000 		.4byte	.LFE17
 2345 00a0 00000000 		.4byte	0
 2346 00a4 00000000 		.4byte	0
 2347              		.section	.debug_line,"",%progbits
 2348              	.Ldebug_line0:
 2349 0000 0D020000 		.section	.debug_str,"MS",%progbits,1
 2349      02006800 
 2349      00000201 
 2349      FB0E0D00 
 2349      01010101 
 2350              	.LASF14:
 2351 0000 75696E74 		.ascii	"uint16\000"
 2351      313600
 2352              	.LASF70:
 2353 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2353      5341525F 
 2353      315F4765 
 2353      74526573 
 2353      756C7438 
 2354              	.LASF61:
 2355 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 2355      69744372 
 2355      69746963 
 2355      616C5365 
 2355      6374696F 
 2356              	.LASF69:
 2357 0032 636F756E 		.ascii	"counts\000"
 2357      747300
 2358              	.LASF68:
 2359 0039 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2359      5341525F 
 2359      315F4361 
 2359      6C634761 
 2359      696E00
 2360              	.LASF0:
 2361 004c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2361      206C6F6E 
 2361      6720756E 
 2361      7369676E 
 2361      65642069 
 2362              	.LASF2:
 2363 0063 6C6F6E67 		.ascii	"long long int\000"
 2363      206C6F6E 
 2363      6720696E 
 2363      7400
 2364              	.LASF6:
 2365 0071 7369676E 		.ascii	"signed char\000"
 2365      65642063 
 2365      68617200 
 2366              	.LASF65:
 2367 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2367      43313120 
 2367      352E342E 
 2367      31203230 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 59


 2367      31363036 
 2368 00b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2368      20726576 
 2368      6973696F 
 2368      6E203233 
 2368      37373135 
 2369 00e3 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2369      66756E63 
 2369      74696F6E 
 2369      2D736563 
 2369      74696F6E 
 2370              	.LASF18:
 2371 010b 696E7433 		.ascii	"int32\000"
 2371      3200
 2372              	.LASF9:
 2373 0111 6C6F6E67 		.ascii	"long int\000"
 2373      20696E74 
 2373      00
 2374              	.LASF55:
 2375 011a 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2375      5341525F 
 2375      315F6F66 
 2375      66736574 
 2375      00
 2376              	.LASF23:
 2377 012b 72656731 		.ascii	"reg16\000"
 2377      3600
 2378              	.LASF13:
 2379 0131 75696E74 		.ascii	"uint8\000"
 2379      3800
 2380              	.LASF60:
 2381 0137 43794465 		.ascii	"CyDelayUs\000"
 2381      6C617955 
 2381      7300
 2382              	.LASF67:
 2383 0141 433A5C55 		.ascii	"C:\\Users\\valer\\Desktop\\Other Projects\\RoboArm\\"
 2383      73657273 
 2383      5C76616C 
 2383      65725C44 
 2383      65736B74 
 2384 016f 526F626F 		.ascii	"RoboarmTest\\RoboArmTest.cydsn\000"
 2384      61726D54 
 2384      6573745C 
 2384      526F626F 
 2384      41726D54 
 2385              	.LASF15:
 2386 018d 75696E74 		.ascii	"uint32\000"
 2386      333200
 2387              	.LASF49:
 2388 0194 636F756E 		.ascii	"countsPer10Volt\000"
 2388      74735065 
 2388      72313056 
 2388      6F6C7400 
 2389              	.LASF64:
 2390 01a4 4379496E 		.ascii	"CyIntSetVector\000"
 2390      74536574 
 2390      56656374 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 60


 2390      6F7200
 2391              	.LASF37:
 2392 01b3 7265744D 		.ascii	"retMode\000"
 2392      6F646500 
 2393              	.LASF4:
 2394 01bb 756E7369 		.ascii	"unsigned int\000"
 2394      676E6564 
 2394      20696E74 
 2394      00
 2395              	.LASF51:
 2396 01c8 75566F6C 		.ascii	"uVolts\000"
 2396      747300
 2397              	.LASF10:
 2398 01cf 6C6F6E67 		.ascii	"long unsigned int\000"
 2398      20756E73 
 2398      69676E65 
 2398      6420696E 
 2398      7400
 2399              	.LASF53:
 2400 01e1 766F6C74 		.ascii	"volts\000"
 2400      7300
 2401              	.LASF59:
 2402 01e7 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2402      74657243 
 2402      72697469 
 2402      63616C53 
 2402      65637469 
 2403              	.LASF8:
 2404 01fe 73686F72 		.ascii	"short unsigned int\000"
 2404      7420756E 
 2404      7369676E 
 2404      65642069 
 2404      6E7400
 2405              	.LASF33:
 2406 0211 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2406      5341525F 
 2406      315F496E 
 2406      697400
 2407              	.LASF16:
 2408 0220 696E7438 		.ascii	"int8\000"
 2408      00
 2409              	.LASF48:
 2410 0225 6D566F6C 		.ascii	"mVolts\000"
 2410      747300
 2411              	.LASF24:
 2412 022c 72656733 		.ascii	"reg32\000"
 2412      3200
 2413              	.LASF56:
 2414 0232 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2414      5341525F 
 2414      315F636F 
 2414      756E7473 
 2414      50657256 
 2415              	.LASF19:
 2416 024a 666C6F61 		.ascii	"float32\000"
 2416      74333200 
 2417              	.LASF11:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 61


 2418 0252 73697A65 		.ascii	"sizetype\000"
 2418      74797065 
 2418      00
 2419              	.LASF5:
 2420 025b 6C6F6E67 		.ascii	"long double\000"
 2420      20646F75 
 2420      626C6500 
 2421              	.LASF30:
 2422 0267 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2422      5341525F 
 2422      315F5365 
 2422      74526573 
 2422      6F6C7574 
 2423              	.LASF50:
 2424 027f 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2424      5341525F 
 2424      315F436F 
 2424      756E7473 
 2424      546F5F75 
 2425              	.LASF62:
 2426 0299 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetModeRegister\000"
 2426      5341525F 
 2426      315F7468 
 2426      6541434C 
 2426      4B5F5365 
 2427              	.LASF34:
 2428 02bb 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2428      5341525F 
 2428      315F5374 
 2428      61727400 
 2429              	.LASF21:
 2430 02cb 696E7436 		.ascii	"int64\000"
 2430      3400
 2431              	.LASF41:
 2432 02d1 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2432      5341525F 
 2432      315F5365 
 2432      744F6666 
 2432      73657400 
 2433              	.LASF63:
 2434 02e5 4379496E 		.ascii	"CyIntSetPriority\000"
 2434      74536574 
 2434      5072696F 
 2434      72697479 
 2434      00
 2435              	.LASF1:
 2436 02f6 666C6F61 		.ascii	"float\000"
 2436      7400
 2437              	.LASF54:
 2438 02fc 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2438      5341525F 
 2438      315F696E 
 2438      69745661 
 2438      7200
 2439              	.LASF31:
 2440 030e 706F7765 		.ascii	"power\000"
 2440      7200
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 62


 2441              	.LASF22:
 2442 0314 72656738 		.ascii	"reg8\000"
 2442      00
 2443              	.LASF7:
 2444 0319 756E7369 		.ascii	"unsigned char\000"
 2444      676E6564 
 2444      20636861 
 2444      7200
 2445              	.LASF46:
 2446 0327 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2446      5341525F 
 2446      315F436F 
 2446      756E7473 
 2446      546F5F6D 
 2447              	.LASF3:
 2448 0341 73686F72 		.ascii	"short int\000"
 2448      7420696E 
 2448      7400
 2449              	.LASF44:
 2450 034b 61646347 		.ascii	"adcGain\000"
 2450      61696E00 
 2451              	.LASF27:
 2452 0353 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2452      5341525F 
 2452      315F456E 
 2452      61626C65 
 2452      00
 2453              	.LASF45:
 2454 0364 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2454      5341525F 
 2454      315F5365 
 2454      74536361 
 2454      6C656447 
 2455              	.LASF40:
 2456 037c 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2456      5341525F 
 2456      315F4765 
 2456      74526573 
 2456      756C7431 
 2457              	.LASF32:
 2458 0392 7265736F 		.ascii	"resolution\000"
 2458      6C757469 
 2458      6F6E00
 2459              	.LASF66:
 2460 039d 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2460      72617465 
 2460      645F536F 
 2460      75726365 
 2460      5C50536F 
 2461              	.LASF12:
 2462 03c0 63686172 		.ascii	"char\000"
 2462      00
 2463              	.LASF52:
 2464 03c5 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2464      5341525F 
 2464      315F436F 
 2464      756E7473 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 63


 2464      546F5F56 
 2465              	.LASF42:
 2466 03de 6F666673 		.ascii	"offset\000"
 2466      657400
 2467              	.LASF36:
 2468 03e5 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2468      5341525F 
 2468      315F5374 
 2468      6F70436F 
 2468      6E766572 
 2469              	.LASF47:
 2470 03fb 61646343 		.ascii	"adcCounts\000"
 2470      6F756E74 
 2470      7300
 2471              	.LASF26:
 2472 0405 656E6162 		.ascii	"enableInterrupts\000"
 2472      6C65496E 
 2472      74657272 
 2472      75707473 
 2472      00
 2473              	.LASF38:
 2474 0416 73746174 		.ascii	"status\000"
 2474      757300
 2475              	.LASF39:
 2476 041d 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2476      5341525F 
 2476      315F4973 
 2476      456E6443 
 2476      6F6E7665 
 2477              	.LASF29:
 2478 0437 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2478      5341525F 
 2478      315F5365 
 2478      74506F77 
 2478      657200
 2479              	.LASF43:
 2480 044a 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2480      5341525F 
 2480      315F5365 
 2480      74476169 
 2480      6E00
 2481              	.LASF17:
 2482 045c 696E7431 		.ascii	"int16\000"
 2482      3600
 2483              	.LASF57:
 2484 0462 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2484      5341525F 
 2484      315F636F 
 2484      756E7473 
 2484      50657231 
 2485              	.LASF35:
 2486 047c 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2486      5341525F 
 2486      315F5374 
 2486      61727443 
 2486      6F6E7665 
 2487              	.LASF25:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccmgJuG3.s 			page 64


 2488 0493 746D7052 		.ascii	"tmpReg\000"
 2488      656700
 2489              	.LASF58:
 2490 049a 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2490      5341525F 
 2490      315F7368 
 2490      69667400 
 2491              	.LASF20:
 2492 04aa 646F7562 		.ascii	"double\000"
 2492      6C6500
 2493              	.LASF28:
 2494 04b1 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2494      5341525F 
 2494      315F5374 
 2494      6F7000
 2495              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
  36              		.loc 1 112 0
  37 0002 1049     		ldr	r1, .L2
  38 0004 0120     		movs	r0, #1
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0120     		movs	r0, #1
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0D4B     		ldr	r3, .L2+4
  48 0014 0022     		movs	r2, #0
  49 0016 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 4


 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 0C4B     		ldr	r3, .L2+8
  52 001a 7222     		movs	r2, #114
  53 001c 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2022     		movs	r2, #32
  56 0020 5A70     		strb	r2, [r3, #1]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  57              		.loc 1 132 0
  58 0022 0B49     		ldr	r1, .L2+12
  59 0024 0220     		movs	r0, #2
  60 0026 FFF7FEFF 		bl	CyIntSetVector
  61              	.LVL2:
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  62              		.loc 1 133 0
  63 002a 0721     		movs	r1, #7
  64 002c 0220     		movs	r0, #2
  65 002e FFF7FEFF 		bl	CyIntSetPriority
  66              	.LVL3:
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  67              		.loc 1 138 0
  68 0032 084B     		ldr	r3, .L2+16
  69 0034 0622     		movs	r2, #6
  70 0036 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  71              		.loc 1 139 0
  72 0038 4722     		movs	r2, #71
  73 003a 1A74     		strb	r2, [r3, #16]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
  74              		.loc 1 148 0
  75 003c 0222     		movs	r2, #2
  76 003e 83F86120 		strb	r2, [r3, #97]
  77 0042 08BD     		pop	{r3, pc}
  78              	.L3:
  79              		.align	2
  80              	.L2:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 5


  81 0044 00000000 		.word	UART_RXISR
  82 0048 00000000 		.word	.LANCHOR0
  83 004c 88650040 		.word	1073767816
  84 0050 00000000 		.word	UART_TXISR
  85 0054 2A650040 		.word	1073767722
  86              		.cfi_endproc
  87              	.LFE1:
  88              		.size	UART_Init, .-UART_Init
  89              		.section	.text.UART_Enable,"ax",%progbits
  90              		.align	1
  91              		.global	UART_Enable
  92              		.thumb
  93              		.thumb_func
  94              		.type	UART_Enable, %function
  95              	UART_Enable:
  96              	.LFB2:
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  97              		.loc 1 184 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 6


 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 4, -8
 104              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 105              		.loc 1 186 0
 106 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 107              	.LVL4:
 108 0006 0446     		mov	r4, r0
 109              	.LVL5:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 110              		.loc 1 190 0
 111 0008 0D4A     		ldr	r2, .L5
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 112              		.loc 1 211 0
 113 000a 0E49     		ldr	r1, .L5+4
 190:Generated_Source\PSoC5/UART.c **** 
 114              		.loc 1 190 0
 115 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 116 000e 43F02003 		orr	r3, r3, #32
 117 0012 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/UART.c **** 
 118              		.loc 1 193 0
 119 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 120 0016 43F01003 		orr	r3, r3, #16
 121 001a 5370     		strb	r3, [r2, #1]
 196:Generated_Source\PSoC5/UART.c **** 
 122              		.loc 1 196 0
 123 001c 0A4A     		ldr	r2, .L5+8
 124 001e 0223     		movs	r3, #2
 125 0020 1360     		str	r3, [r2]
 126              		.loc 1 211 0
 127 0022 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 128 0024 43F01003 		orr	r3, r3, #16
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 7


 129 0028 0B70     		strb	r3, [r1]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 130              		.loc 1 213 0
 131 002a 0849     		ldr	r1, .L5+12
 132 002c 0423     		movs	r3, #4
 133 002e 0B60     		str	r3, [r1]
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 134              		.loc 1 214 0
 135 0030 1360     		str	r3, [r2]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 136              		.loc 1 219 0
 137 0032 FFF7FEFF 		bl	UART_IntClock_Start
 138              	.LVL6:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 139              		.loc 1 222 0
 140 0036 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART.c **** }
 141              		.loc 1 223 0
 142 0038 BDE81040 		pop	{r4, lr}
 143              		.cfi_restore 14
 144              		.cfi_restore 4
 145              		.cfi_def_cfa_offset 0
 146              	.LVL7:
 222:Generated_Source\PSoC5/UART.c **** }
 147              		.loc 1 222 0
 148 003c FFF7FEBF 		b	CyExitCriticalSection
 149              	.LVL8:
 150              	.L6:
 151              		.align	2
 152              	.L5:
 153 0040 98650040 		.word	1073767832
 154 0044 9B650040 		.word	1073767835
 155 0048 00E100E0 		.word	-536813312
 156 004c 80E200E0 		.word	-536812928
 157              		.cfi_endproc
 158              	.LFE2:
 159              		.size	UART_Enable, .-UART_Enable
 160              		.section	.text.UART_Start,"ax",%progbits
 161              		.align	1
 162              		.global	UART_Start
 163              		.thumb
 164              		.thumb_func
 165              		.type	UART_Start, %function
 166              	UART_Start:
 167              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 168              		.loc 1 77 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 8


 172 0000 10B5     		push	{r4, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 176              		.loc 1 79 0
 177 0002 054C     		ldr	r4, .L10
 178 0004 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 179 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 180              		.loc 1 81 0
 181 0008 FFF7FEFF 		bl	UART_Init
 182              	.LVL9:
  82:Generated_Source\PSoC5/UART.c ****     }
 183              		.loc 1 82 0
 184 000c 0123     		movs	r3, #1
 185 000e 6370     		strb	r3, [r4, #1]
 186              	.L8:
  86:Generated_Source\PSoC5/UART.c **** 
 187              		.loc 1 86 0
 188 0010 BDE81040 		pop	{r4, lr}
 189              		.cfi_restore 14
 190              		.cfi_restore 4
 191              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART.c **** }
 192              		.loc 1 85 0
 193 0014 FFF7FEBF 		b	UART_Enable
 194              	.LVL10:
 195              	.L11:
 196              		.align	2
 197              	.L10:
 198 0018 00000000 		.word	.LANCHOR0
 199              		.cfi_endproc
 200              	.LFE0:
 201              		.size	UART_Start, .-UART_Start
 202              		.section	.text.UART_Stop,"ax",%progbits
 203              		.align	1
 204              		.global	UART_Stop
 205              		.thumb
 206              		.thumb_func
 207              		.type	UART_Stop, %function
 208              	UART_Stop:
 209              	.LFB3:
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 9


 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 210              		.loc 1 241 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 218              		.loc 1 243 0
 219 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 220              	.LVL11:
 221 0006 0446     		mov	r4, r0
 222              	.LVL12:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 223              		.loc 1 247 0
 224 0008 0D4A     		ldr	r2, .L13
 225 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 226 000c 03F0DF03 		and	r3, r3, #223
 227 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 228              		.loc 1 257 0
 229 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 230              	.LVL13:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 231              		.loc 1 262 0
 232 0016 0B4A     		ldr	r2, .L13+4
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 233              		.loc 1 270 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 10


 234 0018 0B49     		ldr	r1, .L13+8
 262:Generated_Source\PSoC5/UART.c **** 
 235              		.loc 1 262 0
 236 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 237              		.loc 1 277 0
 238 001c 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART.c **** 
 239              		.loc 1 262 0
 240 001e 03F0EF03 		and	r3, r3, #239
 241 0022 1370     		strb	r3, [r2]
 265:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 242              		.loc 1 265 0
 243 0024 094A     		ldr	r2, .L13+12
 244 0026 0223     		movs	r3, #2
 245 0028 1360     		str	r3, [r2]
 270:Generated_Source\PSoC5/UART.c **** 
 246              		.loc 1 270 0
 247 002a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 248 002c 03F0EF03 		and	r3, r3, #239
 249 0030 0B70     		strb	r3, [r1]
 273:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 250              		.loc 1 273 0
 251 0032 0423     		movs	r3, #4
 252 0034 1360     		str	r3, [r2]
 278:Generated_Source\PSoC5/UART.c **** }
 253              		.loc 1 278 0
 254 0036 BDE81040 		pop	{r4, lr}
 255              		.cfi_restore 14
 256              		.cfi_restore 4
 257              		.cfi_def_cfa_offset 0
 258              	.LVL14:
 277:Generated_Source\PSoC5/UART.c **** }
 259              		.loc 1 277 0
 260 003a FFF7FEBF 		b	CyExitCriticalSection
 261              	.LVL15:
 262              	.L14:
 263 003e 00BF     		.align	2
 264              	.L13:
 265 0040 98650040 		.word	1073767832
 266 0044 99650040 		.word	1073767833
 267 0048 9B650040 		.word	1073767835
 268 004c 80E100E0 		.word	-536813184
 269              		.cfi_endproc
 270              	.LFE3:
 271              		.size	UART_Stop, .-UART_Stop
 272              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 273              		.align	1
 274              		.global	UART_ReadControlRegister
 275              		.thumb
 276              		.thumb_func
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 11


 277              		.type	UART_ReadControlRegister, %function
 278              	UART_ReadControlRegister:
 279              	.LFB4:
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 280              		.loc 1 296 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 285              		.loc 1 302 0
 286 0000 0020     		movs	r0, #0
 287 0002 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 291              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 292              		.align	1
 293              		.global	UART_WriteControlRegister
 294              		.thumb
 295              		.thumb_func
 296              		.type	UART_WriteControlRegister, %function
 297              	UART_WriteControlRegister:
 298              	.LFB30:
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 7047     		bx	lr
 304              		.cfi_endproc
 305              	.LFE30:
 306              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 307              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 308              		.align	1
 309              		.global	UART_SetRxInterruptMode
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 12


 310              		.thumb
 311              		.thumb_func
 312              		.type	UART_SetRxInterruptMode, %function
 313              	UART_SetRxInterruptMode:
 314              	.LFB6:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 13


 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 315              		.loc 1 360 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LVL16:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 321              		.loc 1 361 0
 322 0000 014B     		ldr	r3, .L18
 323 0002 1870     		strb	r0, [r3]
 324 0004 7047     		bx	lr
 325              	.L19:
 326 0006 00BF     		.align	2
 327              	.L18:
 328 0008 89650040 		.word	1073767817
 329              		.cfi_endproc
 330              	.LFE6:
 331              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 332              		.section	.text.UART_ReadRxData,"ax",%progbits
 333              		.align	1
 334              		.global	UART_ReadRxData
 335              		.thumb
 336              		.thumb_func
 337              		.type	UART_ReadRxData, %function
 338              	UART_ReadRxData:
 339              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 14


 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 340              		.loc 1 393 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 345              		.loc 1 402 0
 346 0000 104B     		ldr	r3, .L28
 347 0002 0222     		movs	r2, #2
 348 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 349              		.loc 1 404 0
 350 0006 104A     		ldr	r2, .L28+4
 351 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 352              		.loc 1 405 0
 353 000a D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 354              		.loc 1 407 0
 355 000c 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 356              		.loc 1 404 0
 357 000e DBB2     		uxtb	r3, r3
 358              	.LVL17:
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 359              		.loc 1 405 0
 360 0010 C9B2     		uxtb	r1, r1
 361              	.LVL18:
 362              		.loc 1 407 0
 363 0012 08B9     		cbnz	r0, .L21
 364              		.loc 1 407 0 is_stmt 0 discriminator 1
 365 0014 8B42     		cmp	r3, r1
 366 0016 0ED0     		beq	.L22
 367              	.L21:
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 368              		.loc 1 409 0 is_stmt 1
 369 0018 0C49     		ldr	r1, .L28+8
 370              	.LVL19:
 371 001a C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 15


 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 372              		.loc 1 410 0
 373 001c 0133     		adds	r3, r3, #1
 374              	.LVL20:
 375 001e DBB2     		uxtb	r3, r3
 376              	.LVL21:
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 377              		.loc 1 414 0
 378 0020 082B     		cmp	r3, #8
 379 0022 28BF     		it	cs
 380 0024 0023     		movcs	r3, #0
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 381              		.loc 1 417 0
 382 0026 9370     		strb	r3, [r2, #2]
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 383              		.loc 1 419 0
 384 0028 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 409:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 385              		.loc 1 409 0
 386 002a C0B2     		uxtb	r0, r0
 387              	.LVL22:
 388              		.loc 1 419 0
 389 002c 33B1     		cbz	r3, .L24
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 390              		.loc 1 421 0
 391 002e 064B     		ldr	r3, .L28+4
 392 0030 0022     		movs	r2, #0
 393 0032 1A71     		strb	r2, [r3, #4]
 394 0034 02E0     		b	.L24
 395              	.LVL23:
 396              	.L22:
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 16


 397              		.loc 1 440 0
 398 0036 064B     		ldr	r3, .L28+12
 399              	.LVL24:
 400 0038 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 401 003a C0B2     		uxtb	r0, r0
 402              	.LVL25:
 403              	.L24:
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 404              		.loc 1 443 0
 405 003c 054B     		ldr	r3, .L28+16
 406 003e 0222     		movs	r2, #2
 407 0040 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 408              		.loc 1 453 0
 409 0042 7047     		bx	lr
 410              	.L29:
 411              		.align	2
 412              	.L28:
 413 0044 80E100E0 		.word	-536813184
 414 0048 00000000 		.word	.LANCHOR0
 415 004c 00000000 		.word	UART_rxBuffer
 416 0050 48650040 		.word	1073767752
 417 0054 00E100E0 		.word	-536813312
 418              		.cfi_endproc
 419              	.LFE7:
 420              		.size	UART_ReadRxData, .-UART_ReadRxData
 421              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 422              		.align	1
 423              		.global	UART_ReadRxStatus
 424              		.thumb
 425              		.thumb_func
 426              		.type	UART_ReadRxStatus, %function
 427              	UART_ReadRxStatus:
 428              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 17


 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 429              		.loc 1 486 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 434              		.loc 1 489 0
 435 0000 054B     		ldr	r3, .L35
 436 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 437              		.loc 1 492 0
 438 0004 054B     		ldr	r3, .L35+4
 489:Generated_Source\PSoC5/UART.c **** 
 439              		.loc 1 489 0
 440 0006 00F07F00 		and	r0, r0, #127
 441              	.LVL26:
 442              		.loc 1 492 0
 443 000a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 444 000c 1AB1     		cbz	r2, .L31
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 445              		.loc 1 495 0
 446 000e 0022     		movs	r2, #0
 494:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 447              		.loc 1 494 0
 448 0010 40F08000 		orr	r0, r0, #128
 449              	.LVL27:
 450              		.loc 1 495 0
 451 0014 5A71     		strb	r2, [r3, #5]
 452              	.L31:
 496:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 18


 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 453              		.loc 1 500 0
 454 0016 7047     		bx	lr
 455              	.L36:
 456              		.align	2
 457              	.L35:
 458 0018 69650040 		.word	1073767785
 459 001c 00000000 		.word	.LANCHOR0
 460              		.cfi_endproc
 461              	.LFE8:
 462              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 463              		.section	.text.UART_GetChar,"ax",%progbits
 464              		.align	1
 465              		.global	UART_GetChar
 466              		.thumb
 467              		.thumb_func
 468              		.type	UART_GetChar, %function
 469              	UART_GetChar:
 470              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 471              		.loc 1 533 0
 472              		.cfi_startproc
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 19


 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476              	.LVL28:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 477              		.loc 1 542 0
 478 0000 164B     		ldr	r3, .L47
 479 0002 0222     		movs	r2, #2
 480 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 481              		.loc 1 544 0
 482 0006 164A     		ldr	r2, .L47+4
 483 0008 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 484              		.loc 1 545 0
 485 000a D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 486              		.loc 1 547 0
 487 000c 1079     		ldrb	r0, [r2, #4]	@ zero_extendqisi2
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 488              		.loc 1 544 0
 489 000e DBB2     		uxtb	r3, r3
 490              	.LVL29:
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 491              		.loc 1 545 0
 492 0010 C9B2     		uxtb	r1, r1
 493              	.LVL30:
 494              		.loc 1 547 0
 495 0012 08B9     		cbnz	r0, .L38
 496              		.loc 1 547 0 is_stmt 0 discriminator 1
 497 0014 8B42     		cmp	r3, r1
 498 0016 0ED0     		beq	.L39
 499              	.L38:
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 500              		.loc 1 549 0 is_stmt 1
 501 0018 1249     		ldr	r1, .L47+8
 502              	.LVL31:
 503 001a C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 504              		.loc 1 550 0
 505 001c 0133     		adds	r3, r3, #1
 506              	.LVL32:
 507 001e DBB2     		uxtb	r3, r3
 508              	.LVL33:
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 20


 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 509              		.loc 1 553 0
 510 0020 082B     		cmp	r3, #8
 511 0022 28BF     		it	cs
 512 0024 0023     		movcs	r3, #0
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 513              		.loc 1 556 0
 514 0026 9370     		strb	r3, [r2, #2]
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 515              		.loc 1 558 0
 516 0028 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 549:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 517              		.loc 1 549 0
 518 002a C0B2     		uxtb	r0, r0
 519              	.LVL34:
 520              		.loc 1 558 0
 521 002c 8BB1     		cbz	r3, .L41
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 522              		.loc 1 560 0
 523 002e 0C4B     		ldr	r3, .L47+4
 524 0030 0022     		movs	r2, #0
 525 0032 1A71     		strb	r2, [r3, #4]
 526 0034 0DE0     		b	.L41
 527              	.LVL35:
 528              	.L39:
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 529              		.loc 1 579 0
 530 0036 0C4B     		ldr	r3, .L47+12
 531              	.LVL36:
 532 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 533 003a DBB2     		uxtb	r3, r3
 534              	.LVL37:
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 535              		.loc 1 580 0
 536 003c 03F02002 		and	r2, r3, #32
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 21


 537 0040 02F0FF00 		and	r0, r2, #255
 538 0044 2AB1     		cbz	r2, .L41
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 539              		.loc 1 582 0
 540 0046 094A     		ldr	r2, .L47+16
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 541              		.loc 1 587 0
 542 0048 13F01E0F 		tst	r3, #30
 582:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 543              		.loc 1 582 0
 544 004c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 545              	.LVL38:
 546              		.loc 1 587 0
 547 004e 18BF     		it	ne
 548 0050 0020     		movne	r0, #0
 549              	.LVL39:
 550              	.L41:
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 551              		.loc 1 592 0
 552 0052 074B     		ldr	r3, .L47+20
 553 0054 0222     		movs	r2, #2
 554 0056 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 555              		.loc 1 612 0
 556 0058 7047     		bx	lr
 557              	.L48:
 558 005a 00BF     		.align	2
 559              	.L47:
 560 005c 80E100E0 		.word	-536813184
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 22


 561 0060 00000000 		.word	.LANCHOR0
 562 0064 00000000 		.word	UART_rxBuffer
 563 0068 69650040 		.word	1073767785
 564 006c 48650040 		.word	1073767752
 565 0070 00E100E0 		.word	-536813312
 566              		.cfi_endproc
 567              	.LFE9:
 568              		.size	UART_GetChar, .-UART_GetChar
 569              		.section	.text.UART_GetByte,"ax",%progbits
 570              		.align	1
 571              		.global	UART_GetByte
 572              		.thumb
 573              		.thumb_func
 574              		.type	UART_GetByte, %function
 575              	UART_GetByte:
 576              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 577              		.loc 1 635 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 10B5     		push	{r4, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 4, -8
 584              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 585              		.loc 1 640 0
 586 0002 074A     		ldr	r2, .L50
 587 0004 0223     		movs	r3, #2
 588 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 23


 589              		.loc 1 641 0
 590 0008 064A     		ldr	r2, .L50+4
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 591              		.loc 1 642 0
 592 000a 0021     		movs	r1, #0
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 593              		.loc 1 641 0
 594 000c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 595              	.LVL40:
 596              		.loc 1 642 0
 597 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 598              		.loc 1 643 0
 599 0010 054A     		ldr	r2, .L50+8
 600 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 601              		.loc 1 644 0
 602 0014 FFF7FEFF 		bl	UART_ReadRxData
 603              	.LVL41:
 604 0018 40EA0420 		orr	r0, r0, r4, lsl #8
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 605              		.loc 1 649 0
 606 001c 80B2     		uxth	r0, r0
 607 001e 10BD     		pop	{r4, pc}
 608              	.LVL42:
 609              	.L51:
 610              		.align	2
 611              	.L50:
 612 0020 80E100E0 		.word	-536813184
 613 0024 00000000 		.word	.LANCHOR0
 614 0028 00E100E0 		.word	-536813312
 615              		.cfi_endproc
 616              	.LFE10:
 617              		.size	UART_GetByte, .-UART_GetByte
 618              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 619              		.align	1
 620              		.global	UART_GetRxBufferSize
 621              		.thumb
 622              		.thumb_func
 623              		.type	UART_GetRxBufferSize, %function
 624              	UART_GetRxBufferSize:
 625              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 24


 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 626              		.loc 1 685 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 631              		.loc 1 691 0
 632 0000 0F4B     		ldr	r3, .L58
 633 0002 0222     		movs	r2, #2
 634 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 635              		.loc 1 693 0
 636 0006 0F4A     		ldr	r2, .L58+4
 637 0008 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 638 000a D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 639 000c 9942     		cmp	r1, r3
 640 000e 05D1     		bne	.L53
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 641              		.loc 1 695 0
 642 0010 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 643 0012 002B     		cmp	r3, #0
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 25


 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 644              		.loc 1 701 0
 645 0014 14BF     		ite	ne
 646 0016 0820     		movne	r0, #8
 647 0018 0020     		moveq	r0, #0
 648 001a 0CE0     		b	.L54
 649              	.L53:
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 650              		.loc 1 704 0
 651 001c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 652 001e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 653 0020 9942     		cmp	r1, r3
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 654              		.loc 1 710 0
 655 0022 2BBF     		itete	cs
 656 0024 D078     		ldrbcs	r0, [r2, #3]	@ zero_extendqisi2
 706:Generated_Source\PSoC5/UART.c ****         }
 657              		.loc 1 706 0
 658 0026 D378     		ldrbcc	r3, [r2, #3]	@ zero_extendqisi2
 659              		.loc 1 710 0
 660 0028 9378     		ldrbcs	r3, [r2, #2]	@ zero_extendqisi2
 706:Generated_Source\PSoC5/UART.c ****         }
 661              		.loc 1 706 0
 662 002a 9078     		ldrbcc	r0, [r2, #2]	@ zero_extendqisi2
 663              		.loc 1 710 0
 664 002c 2ABF     		itet	cs
 665 002e 0830     		addcs	r0, r0, #8
 706:Generated_Source\PSoC5/UART.c ****         }
 666              		.loc 1 706 0
 667 0030 181A     		subcc	r0, r3, r0
 668              		.loc 1 710 0
 669 0032 C01A     		subcs	r0, r0, r3
 670 0034 C0B2     		uxtb	r0, r0
 671              	.LVL43:
 672              	.L54:
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 673              		.loc 1 713 0
 674 0036 044B     		ldr	r3, .L58+8
 675 0038 0222     		movs	r2, #2
 676 003a 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 26


 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 677              		.loc 1 723 0
 678 003c 7047     		bx	lr
 679              	.L59:
 680 003e 00BF     		.align	2
 681              	.L58:
 682 0040 80E100E0 		.word	-536813184
 683 0044 00000000 		.word	.LANCHOR0
 684 0048 00E100E0 		.word	-536813312
 685              		.cfi_endproc
 686              	.LFE11:
 687              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 688              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 689              		.align	1
 690              		.global	UART_ClearRxBuffer
 691              		.thumb
 692              		.thumb_func
 693              		.type	UART_ClearRxBuffer, %function
 694              	UART_ClearRxBuffer:
 695              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 27


 696              		.loc 1 758 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700 0000 08B5     		push	{r3, lr}
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 3, -8
 703              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 704              		.loc 1 762 0
 705 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 706              	.LVL44:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 707              		.loc 1 763 0
 708 0006 0B4B     		ldr	r3, .L61
 709 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 710 000a 42F00102 		orr	r2, r2, #1
 711 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 712              		.loc 1 764 0
 713 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 714 0012 02F0FE02 		and	r2, r2, #254
 715 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 716              		.loc 1 765 0
 717 0018 FFF7FEFF 		bl	CyExitCriticalSection
 718              	.LVL45:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 719              		.loc 1 770 0
 720 001c 064B     		ldr	r3, .L61+4
 721 001e 0221     		movs	r1, #2
 722 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 723              		.loc 1 772 0
 724 0022 064B     		ldr	r3, .L61+8
 725 0024 0022     		movs	r2, #0
 726 0026 9A70     		strb	r2, [r3, #2]
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 727              		.loc 1 773 0
 728 0028 DA70     		strb	r2, [r3, #3]
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 729              		.loc 1 774 0
 730 002a 1A71     		strb	r2, [r3, #4]
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 731              		.loc 1 775 0
 732 002c 5A71     		strb	r2, [r3, #5]
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 733              		.loc 1 777 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 28


 734 002e 044B     		ldr	r3, .L61+12
 735 0030 1960     		str	r1, [r3]
 736 0032 08BD     		pop	{r3, pc}
 737              	.L62:
 738              		.align	2
 739              	.L61:
 740 0034 98650040 		.word	1073767832
 741 0038 80E100E0 		.word	-536813184
 742 003c 00000000 		.word	.LANCHOR0
 743 0040 00E100E0 		.word	-536813312
 744              		.cfi_endproc
 745              	.LFE12:
 746              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 747              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 748              		.align	1
 749              		.global	UART_SetRxAddressMode
 750              		.thumb
 751              		.thumb_func
 752              		.type	UART_SetRxAddressMode, %function
 753              	UART_SetRxAddressMode:
 754              	.LFB28:
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759 0000 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE28:
 762              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 763              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 764              		.align	1
 765              		.global	UART_SetRxAddress1
 766              		.thumb
 767              		.thumb_func
 768              		.type	UART_SetRxAddress1, %function
 769              	UART_SetRxAddress1:
 770              	.LFB14:
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 29


 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 30


 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 771              		.loc 1 858 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776              	.LVL46:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 777              		.loc 1 859 0
 778 0000 014B     		ldr	r3, .L65
 779 0002 1870     		strb	r0, [r3]
 780 0004 7047     		bx	lr
 781              	.L66:
 782 0006 00BF     		.align	2
 783              	.L65:
 784 0008 28650040 		.word	1073767720
 785              		.cfi_endproc
 786              	.LFE14:
 787              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 788              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 789              		.align	1
 790              		.global	UART_SetRxAddress2
 791              		.thumb
 792              		.thumb_func
 793              		.type	UART_SetRxAddress2, %function
 794              	UART_SetRxAddress2:
 795              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 796              		.loc 1 878 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL47:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 802              		.loc 1 879 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 31


 803 0000 014B     		ldr	r3, .L68
 804 0002 1870     		strb	r0, [r3]
 805 0004 7047     		bx	lr
 806              	.L69:
 807 0006 00BF     		.align	2
 808              	.L68:
 809 0008 38650040 		.word	1073767736
 810              		.cfi_endproc
 811              	.LFE15:
 812              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 813              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 814              		.align	1
 815              		.global	UART_SetTxInterruptMode
 816              		.thumb
 817              		.thumb_func
 818              		.type	UART_SetTxInterruptMode, %function
 819              	UART_SetTxInterruptMode:
 820              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 821              		.loc 1 909 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826              	.LVL48:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 827              		.loc 1 910 0
 828 0000 014B     		ldr	r3, .L71
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 32


 829 0002 1870     		strb	r0, [r3]
 830 0004 7047     		bx	lr
 831              	.L72:
 832 0006 00BF     		.align	2
 833              	.L71:
 834 0008 8B650040 		.word	1073767819
 835              		.cfi_endproc
 836              	.LFE16:
 837              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 838              		.section	.text.UART_WriteTxData,"ax",%progbits
 839              		.align	1
 840              		.global	UART_WriteTxData
 841              		.thumb
 842              		.thumb_func
 843              		.type	UART_WriteTxData, %function
 844              	UART_WriteTxData:
 845              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 846              		.loc 1 943 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              	.LVL49:
 851 0000 10B5     		push	{r4, lr}
 852              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 33


 853              		.cfi_offset 4, -8
 854              		.cfi_offset 14, -4
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 855              		.loc 1 945 0
 856 0002 0F4B     		ldr	r3, .L81
 857 0004 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 858 0006 1A46     		mov	r2, r3
 859 0008 C9B1     		cbz	r1, .L73
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 860              		.loc 1 950 0
 861 000a 0E49     		ldr	r1, .L81+4
 862 000c 0424     		movs	r4, #4
 863 000e 0C60     		str	r4, [r1]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 864              		.loc 1 952 0
 865 0010 9979     		ldrb	r1, [r3, #6]	@ zero_extendqisi2
 866 0012 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 867 0014 9942     		cmp	r1, r3
 868 0016 06D1     		bne	.L75
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 869              		.loc 1 953 0 discriminator 1
 870 0018 0B49     		ldr	r1, .L81+8
 871 001a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 872              		.loc 1 952 0 discriminator 1
 873 001c 4907     		lsls	r1, r1, #29
 874 001e 02D4     		bmi	.L75
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 875              		.loc 1 956 0
 876 0020 0A4B     		ldr	r3, .L81+12
 877 0022 1870     		strb	r0, [r3]
 878 0024 08E0     		b	.L76
 879              	.L75:
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 880              		.loc 1 960 0
 881 0026 072B     		cmp	r3, #7
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 882              		.loc 1 962 0
 883 0028 84BF     		itt	hi
 884 002a 0023     		movhi	r3, #0
 885 002c D371     		strbhi	r3, [r2, #7]
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 886              		.loc 1 965 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 34


 887 002e D379     		ldrb	r3, [r2, #7]	@ zero_extendqisi2
 888 0030 0749     		ldr	r1, .L81+16
 889 0032 C854     		strb	r0, [r1, r3]
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 890              		.loc 1 968 0
 891 0034 0133     		adds	r3, r3, #1
 892 0036 D371     		strb	r3, [r2, #7]
 893              	.L76:
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 894              		.loc 1 971 0
 895 0038 064B     		ldr	r3, .L81+20
 896 003a 0422     		movs	r2, #4
 897 003c 1A60     		str	r2, [r3]
 898              	.L73:
 899 003e 10BD     		pop	{r4, pc}
 900              	.L82:
 901              		.align	2
 902              	.L81:
 903 0040 00000000 		.word	.LANCHOR0
 904 0044 80E100E0 		.word	-536813184
 905 0048 6B650040 		.word	1073767787
 906 004c 4B650040 		.word	1073767755
 907 0050 00000000 		.word	UART_txBuffer
 908 0054 00E100E0 		.word	-536813312
 909              		.cfi_endproc
 910              	.LFE17:
 911              		.size	UART_WriteTxData, .-UART_WriteTxData
 912              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 913              		.align	1
 914              		.global	UART_ReadTxStatus
 915              		.thumb
 916              		.thumb_func
 917              		.type	UART_ReadTxStatus, %function
 918              	UART_ReadTxStatus:
 919              	.LFB18:
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 35


 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 920              		.loc 1 1004 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 925              		.loc 1 1005 0
 926 0000 014B     		ldr	r3, .L84
 927 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 928              		.loc 1 1006 0
 929 0004 7047     		bx	lr
 930              	.L85:
 931 0006 00BF     		.align	2
 932              	.L84:
 933 0008 6B650040 		.word	1073767787
 934              		.cfi_endproc
 935              	.LFE18:
 936              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 937              		.section	.text.UART_PutChar,"ax",%progbits
 938              		.align	1
 939              		.global	UART_PutChar
 940              		.thumb
 941              		.thumb_func
 942              		.type	UART_PutChar, %function
 943              	UART_PutChar:
 944              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 36


1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 945              		.loc 1 1042 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              	.LVL50:
 950 0000 10B5     		push	{r4, lr}
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 4, -8
 953              		.cfi_offset 14, -4
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 954              		.loc 1 1059 0
 955 0002 134C     		ldr	r4, .L98
 956 0004 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 957              	.L89:
 958              	.LVL51:
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 959              		.loc 1 1060 0
 960 0006 A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 961 0008 D2B2     		uxtb	r2, r2
 962              	.LVL52:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 37


1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 963              		.loc 1 1067 0
 964 000a 9342     		cmp	r3, r2
 965 000c 02D2     		bcs	.L87
 966              		.loc 1 1067 0 is_stmt 0 discriminator 1
 967 000e 511E     		subs	r1, r2, #1
 968 0010 9942     		cmp	r1, r3
 969 0012 01E0     		b	.L97
 970              	.L87:
 971              		.loc 1 1067 0 discriminator 2
 972 0014 991A     		subs	r1, r3, r2
 973 0016 0729     		cmp	r1, #7
 974              	.L97:
 975 0018 14BF     		ite	ne
 976 001a 0021     		movne	r1, #0
 977 001c 0121     		moveq	r1, #1
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 978              		.loc 1 1069 0 is_stmt 1 discriminator 2
 979 001e 0029     		cmp	r1, #0
 980 0020 F1D1     		bne	.L89
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 981              		.loc 1 1071 0
 982 0022 9342     		cmp	r3, r2
 983 0024 0B4A     		ldr	r2, .L98+4
 984              	.LVL53:
 985 0026 05D1     		bne	.L90
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 986              		.loc 1 1072 0 discriminator 1
 987 0028 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 988              		.loc 1 1071 0 discriminator 1
 989 002a 4907     		lsls	r1, r1, #29
 990 002c 02D4     		bmi	.L90
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 991              		.loc 1 1075 0
 992 002e 0A4B     		ldr	r3, .L98+8
 993 0030 1870     		strb	r0, [r3]
 994              	.LVL54:
 995 0032 10BD     		pop	{r4, pc}
 996              	.LVL55:
 997              	.L90:
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 38


 998              		.loc 1 1081 0
 999 0034 082B     		cmp	r3, #8
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 1000              		.loc 1 1084 0
 1001 0036 0949     		ldr	r1, .L98+12
1081:Generated_Source\PSoC5/UART.c ****             }
 1002              		.loc 1 1081 0
 1003 0038 28BF     		it	cs
 1004 003a 0023     		movcs	r3, #0
 1005              	.LVL56:
 1006              		.loc 1 1084 0
 1007 003c C854     		strb	r0, [r1, r3]
 1008              	.LVL57:
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
 1009              		.loc 1 1092 0
 1010 003e 0133     		adds	r3, r3, #1
 1011              	.LVL58:
 1012 0040 E371     		strb	r3, [r4, #7]
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 1013              		.loc 1 1098 0
 1014 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1015              	.LVL59:
 1016 0044 9B07     		lsls	r3, r3, #30
 1017              	.LVL60:
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
 1018              		.loc 1 1101 0
 1019 0046 42BF     		ittt	mi
 1020 0048 054B     		ldrmi	r3, .L98+16
 1021 004a 0422     		movmi	r2, #4
 1022 004c 1A60     		strmi	r2, [r3]
 1023 004e 10BD     		pop	{r4, pc}
 1024              	.L99:
 1025              		.align	2
 1026              	.L98:
 1027 0050 00000000 		.word	.LANCHOR0
 1028 0054 6B650040 		.word	1073767787
 1029 0058 4B650040 		.word	1073767755
 1030 005c 00000000 		.word	UART_txBuffer
 1031 0060 00E200E0 		.word	-536813056
 1032              		.cfi_endproc
 1033              	.LFE19:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 39


 1034              		.size	UART_PutChar, .-UART_PutChar
 1035              		.section	.text.UART_PutString,"ax",%progbits
 1036              		.align	1
 1037              		.global	UART_PutString
 1038              		.thumb
 1039              		.thumb_func
 1040              		.type	UART_PutString, %function
 1041              	UART_PutString:
 1042              	.LFB20:
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 1043              		.loc 1 1146 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 40


 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              	.LVL61:
 1048 0000 38B5     		push	{r3, r4, r5, lr}
 1049              		.cfi_def_cfa_offset 16
 1050              		.cfi_offset 3, -16
 1051              		.cfi_offset 4, -12
 1052              		.cfi_offset 5, -8
 1053              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1054              		.loc 1 1150 0
 1055 0002 064B     		ldr	r3, .L107
1146:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 1056              		.loc 1 1146 0
 1057 0004 0546     		mov	r5, r0
 1058              		.loc 1 1150 0
 1059 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1060 0008 3BB1     		cbz	r3, .L100
 1061 000a 0024     		movs	r4, #0
 1062              	.LVL62:
 1063              	.L102:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 1064              		.loc 1 1153 0
 1065 000c A3B2     		uxth	r3, r4
 1066              	.LVL63:
 1067 000e E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 1068 0010 0134     		adds	r4, r4, #1
 1069 0012 10B1     		cbz	r0, .L100
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 1070              		.loc 1 1155 0
 1071 0014 FFF7FEFF 		bl	UART_PutChar
 1072              	.LVL64:
 1073 0018 F8E7     		b	.L102
 1074              	.LVL65:
 1075              	.L100:
 1076 001a 38BD     		pop	{r3, r4, r5, pc}
 1077              	.LVL66:
 1078              	.L108:
 1079              		.align	2
 1080              	.L107:
 1081 001c 00000000 		.word	.LANCHOR0
 1082              		.cfi_endproc
 1083              	.LFE20:
 1084              		.size	UART_PutString, .-UART_PutString
 1085              		.section	.text.UART_PutArray,"ax",%progbits
 1086              		.align	1
 1087              		.global	UART_PutArray
 1088              		.thumb
 1089              		.thumb_func
 1090              		.type	UART_PutArray, %function
 1091              	UART_PutArray:
 1092              	.LFB21:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 41


1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 1093              		.loc 1 1193 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              	.LVL67:
 1098 0000 38B5     		push	{r3, r4, r5, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 3, -16
 1101              		.cfi_offset 4, -12
 1102              		.cfi_offset 5, -8
 1103              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1104              		.loc 1 1197 0
 1105 0002 074B     		ldr	r3, .L114
 1106 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1107 0006 4BB1     		cbz	r3, .L109
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 42


 1108 0008 0139     		subs	r1, r1, #1
 1109              	.LVL68:
 1110 000a 451E     		subs	r5, r0, #1
 1111 000c 4418     		adds	r4, r0, r1
 1112              	.LVL69:
 1113              	.L111:
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 1114              		.loc 1 1199 0
 1115 000e A542     		cmp	r5, r4
 1116 0010 04D0     		beq	.L109
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 1117              		.loc 1 1201 0
 1118 0012 15F8010F 		ldrb	r0, [r5, #1]!	@ zero_extendqisi2
 1119              	.LVL70:
 1120 0016 FFF7FEFF 		bl	UART_PutChar
 1121              	.LVL71:
 1122 001a F8E7     		b	.L111
 1123              	.LVL72:
 1124              	.L109:
 1125 001c 38BD     		pop	{r3, r4, r5, pc}
 1126              	.L115:
 1127 001e 00BF     		.align	2
 1128              	.L114:
 1129 0020 00000000 		.word	.LANCHOR0
 1130              		.cfi_endproc
 1131              	.LFE21:
 1132              		.size	UART_PutArray, .-UART_PutArray
 1133              		.section	.text.UART_PutCRLF,"ax",%progbits
 1134              		.align	1
 1135              		.global	UART_PutCRLF
 1136              		.thumb
 1137              		.thumb_func
 1138              		.type	UART_PutCRLF, %function
 1139              	UART_PutCRLF:
 1140              	.LFB22:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 43


1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 1141              		.loc 1 1231 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL73:
 1146 0000 08B5     		push	{r3, lr}
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 3, -8
 1149              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1150              		.loc 1 1233 0
 1151 0002 074B     		ldr	r3, .L118
 1152 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1153 0006 4BB1     		cbz	r3, .L116
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1154              		.loc 1 1235 0
 1155 0008 FFF7FEFF 		bl	UART_PutChar
 1156              	.LVL74:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1157              		.loc 1 1236 0
 1158 000c 0D20     		movs	r0, #13
 1159 000e FFF7FEFF 		bl	UART_PutChar
 1160              	.LVL75:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
 1161              		.loc 1 1239 0
 1162 0012 BDE80840 		pop	{r3, lr}
 1163              		.cfi_remember_state
 1164              		.cfi_restore 14
 1165              		.cfi_restore 3
 1166              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1167              		.loc 1 1237 0
 1168 0016 0A20     		movs	r0, #10
 1169 0018 FFF7FEBF 		b	UART_PutChar
 1170              	.LVL76:
 1171              	.L116:
 1172              		.cfi_restore_state
 1173 001c 08BD     		pop	{r3, pc}
 1174              	.L119:
 1175 001e 00BF     		.align	2
 1176              	.L118:
 1177 0020 00000000 		.word	.LANCHOR0
 1178              		.cfi_endproc
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 44


 1179              	.LFE22:
 1180              		.size	UART_PutCRLF, .-UART_PutCRLF
 1181              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1182              		.align	1
 1183              		.global	UART_GetTxBufferSize
 1184              		.thumb
 1185              		.thumb_func
 1186              		.type	UART_GetTxBufferSize, %function
 1187              	UART_GetTxBufferSize:
 1188              	.LFB23:
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 1189              		.loc 1 1275 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 0, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 45


 1194              		.loc 1 1281 0
 1195 0000 0A4B     		ldr	r3, .L125
 1196 0002 0422     		movs	r2, #4
 1197 0004 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1198              		.loc 1 1283 0
 1199 0006 0A4A     		ldr	r2, .L125+4
 1200 0008 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
 1201 000a D379     		ldrb	r3, [r2, #7]	@ zero_extendqisi2
 1202 000c 9942     		cmp	r1, r3
 1203 000e 07D0     		beq	.L123
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1204              		.loc 1 1287 0
 1205 0010 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1206              		.loc 1 1289 0
 1207 0012 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
1287:Generated_Source\PSoC5/UART.c ****         {
 1208              		.loc 1 1287 0
 1209 0014 8B42     		cmp	r3, r1
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1210              		.loc 1 1293 0
 1211 0016 98BF     		it	ls
 1212 0018 0833     		addls	r3, r3, #8
 1213 001a 181A     		subs	r0, r3, r0
 1214 001c C0B2     		uxtb	r0, r0
 1215              	.LVL77:
 1216 001e 00E0     		b	.L121
 1217              	.LVL78:
 1218              	.L123:
1285:Generated_Source\PSoC5/UART.c ****         }
 1219              		.loc 1 1285 0
 1220 0020 0020     		movs	r0, #0
 1221              	.L121:
 1222              	.LVL79:
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1223              		.loc 1 1297 0
 1224 0022 044B     		ldr	r3, .L125+8
 1225 0024 0422     		movs	r2, #4
 1226 0026 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 46


1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 1227              		.loc 1 1321 0
 1228 0028 7047     		bx	lr
 1229              	.L126:
 1230 002a 00BF     		.align	2
 1231              	.L125:
 1232 002c 80E100E0 		.word	-536813184
 1233 0030 00000000 		.word	.LANCHOR0
 1234 0034 00E100E0 		.word	-536813312
 1235              		.cfi_endproc
 1236              	.LFE23:
 1237              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1238              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1239              		.align	1
 1240              		.global	UART_ClearTxBuffer
 1241              		.thumb
 1242              		.thumb_func
 1243              		.type	UART_ClearTxBuffer, %function
 1244              	UART_ClearTxBuffer:
 1245              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 47


1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1246              		.loc 1 1355 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 0, uses_anonymous_args = 0
 1250 0000 08B5     		push	{r3, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 3, -8
 1253              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1254              		.loc 1 1358 0
 1255 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1256              	.LVL80:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1257              		.loc 1 1360 0
 1258 0006 0A4B     		ldr	r3, .L128
 1259 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1260 000a 42F00102 		orr	r2, r2, #1
 1261 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1262              		.loc 1 1361 0
 1263 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1264 0012 02F0FE02 		and	r2, r2, #254
 1265 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1266              		.loc 1 1362 0
 1267 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1268              	.LVL81:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1269              		.loc 1 1367 0
 1270 001c 054A     		ldr	r2, .L128+4
 1271 001e 0423     		movs	r3, #4
 1272 0020 1360     		str	r3, [r2]
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1273              		.loc 1 1369 0
 1274 0022 054A     		ldr	r2, .L128+8
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 48


 1275 0024 0021     		movs	r1, #0
 1276 0026 9171     		strb	r1, [r2, #6]
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1277              		.loc 1 1370 0
 1278 0028 D171     		strb	r1, [r2, #7]
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1279              		.loc 1 1373 0
 1280 002a 044A     		ldr	r2, .L128+12
 1281 002c 1360     		str	r3, [r2]
 1282 002e 08BD     		pop	{r3, pc}
 1283              	.L129:
 1284              		.align	2
 1285              	.L128:
 1286 0030 9B650040 		.word	1073767835
 1287 0034 80E100E0 		.word	-536813184
 1288 0038 00000000 		.word	.LANCHOR0
 1289 003c 00E100E0 		.word	-536813312
 1290              		.cfi_endproc
 1291              	.LFE24:
 1292              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1293              		.section	.text.UART_SendBreak,"ax",%progbits
 1294              		.align	1
 1295              		.global	UART_SendBreak
 1296              		.thumb
 1297              		.thumb_func
 1298              		.type	UART_SendBreak, %function
 1299              	UART_SendBreak:
 1300              	.LFB25:
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 49


1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1301              		.loc 1 1441 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              	.LVL82:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1307              		.loc 1 1444 0
 1308 0000 124B     		ldr	r3, .L153
 1309 0002 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1310 0004 02B3     		cbz	r2, .L130
 1311              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 50


1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1312              		.loc 1 1490 0
 1313 0006 08B1     		cbz	r0, .L133
 1314              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1315 0008 0328     		cmp	r0, #3
 1316 000a 1BD1     		bne	.L134
 1317              	.L133:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 51


1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1318              		.loc 1 1501 0 is_stmt 1
 1319 000c 104A     		ldr	r2, .L153+4
 1320 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1321 0010 1972     		strb	r1, [r3, #8]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1322              		.loc 1 1502 0
 1323 0012 6721     		movs	r1, #103
 1324 0014 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1325              		.loc 1 1509 0
 1326 0016 0021     		movs	r1, #0
 1327 0018 5174     		strb	r1, [r2, #17]
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1328              		.loc 1 1513 0
 1329 001a 0E49     		ldr	r1, .L153+8
 1330              	.L135:
 1331              		.loc 1 1513 0 is_stmt 0 discriminator 1
 1332 001c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1333              	.LVL83:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1334              		.loc 1 1515 0 is_stmt 1 discriminator 1
 1335 001e 9207     		lsls	r2, r2, #30
 1336              	.LVL84:
 1337 0020 FCD4     		bmi	.L135
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1338              		.loc 1 1518 0
 1339 0022 00F0FD02 		and	r2, r0, #253
 1340 0026 012A     		cmp	r2, #1
 1341              	.L152:
 1342 0028 03D0     		beq	.L136
 1343              	.L140:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 52


 1344              		.loc 1 1528 0
 1345 002a 0138     		subs	r0, r0, #1
 1346              	.LVL85:
 1347 002c 0228     		cmp	r0, #2
 1348 002e 05D9     		bls	.L137
 1349 0030 7047     		bx	lr
 1350              	.LVL86:
 1351              	.L136:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1352              		.loc 1 1523 0
 1353 0032 0849     		ldr	r1, .L153+8
 1354              	.L139:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1355              		.loc 1 1523 0 is_stmt 0 discriminator 1
 1356 0034 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1357              	.LVL87:
1525:Generated_Source\PSoC5/UART.c ****             }
 1358              		.loc 1 1525 0 is_stmt 1 discriminator 1
 1359 0036 D207     		lsls	r2, r2, #31
 1360              	.LVL88:
 1361 0038 FCD5     		bpl	.L139
 1362 003a F6E7     		b	.L140
 1363              	.LVL89:
 1364              	.L137:
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1365              		.loc 1 1534 0
 1366 003c 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1367 003e 044B     		ldr	r3, .L153+4
 1368 0040 1A70     		strb	r2, [r3]
 1369              	.LBE2:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 1370              		.loc 1 1547 0
 1371 0042 7047     		bx	lr
 1372              	.LVL90:
 1373              	.L134:
 1374              	.LBB3:
1518:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
 1375              		.loc 1 1518 0
 1376 0044 0128     		cmp	r0, #1
 1377 0046 EFE7     		b	.L152
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 53


 1378              	.L130:
 1379 0048 7047     		bx	lr
 1380              	.L154:
 1381 004a 00BF     		.align	2
 1382              	.L153:
 1383 004c 00000000 		.word	.LANCHOR0
 1384 0050 3A650040 		.word	1073767738
 1385 0054 6B650040 		.word	1073767787
 1386              	.LBE3:
 1387              		.cfi_endproc
 1388              	.LFE25:
 1389              		.size	UART_SendBreak, .-UART_SendBreak
 1390              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1391              		.align	1
 1392              		.global	UART_SetTxAddressMode
 1393              		.thumb
 1394              		.thumb_func
 1395              		.type	UART_SetTxAddressMode, %function
 1396              	UART_SetTxAddressMode:
 1397              	.LFB26:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1398              		.loc 1 1573 0
 1399              		.cfi_startproc
 1400              		@ args = 0, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              		@ link register save eliminated.
 1403              	.LVL91:
 1404 0000 7047     		bx	lr
 1405              		.cfi_endproc
 1406              	.LFE26:
 1407              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1408              		.global	UART_rxBufferOverflow
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 54


 1409              		.global	UART_rxBufferLoopDetect
 1410              		.global	UART_rxBufferWrite
 1411              		.global	UART_rxBufferRead
 1412              		.comm	UART_rxBuffer,8,1
 1413              		.global	UART_errorStatus
 1414              		.global	UART_txBufferWrite
 1415              		.global	UART_txBufferRead
 1416              		.comm	UART_txBuffer,8,1
 1417              		.global	UART_initVar
 1418              		.bss
 1419              		.set	.LANCHOR0,. + 0
 1420              		.type	UART_errorStatus, %object
 1421              		.size	UART_errorStatus, 1
 1422              	UART_errorStatus:
 1423 0000 00       		.space	1
 1424              		.type	UART_initVar, %object
 1425              		.size	UART_initVar, 1
 1426              	UART_initVar:
 1427 0001 00       		.space	1
 1428              		.type	UART_rxBufferRead, %object
 1429              		.size	UART_rxBufferRead, 1
 1430              	UART_rxBufferRead:
 1431 0002 00       		.space	1
 1432              		.type	UART_rxBufferWrite, %object
 1433              		.size	UART_rxBufferWrite, 1
 1434              	UART_rxBufferWrite:
 1435 0003 00       		.space	1
 1436              		.type	UART_rxBufferLoopDetect, %object
 1437              		.size	UART_rxBufferLoopDetect, 1
 1438              	UART_rxBufferLoopDetect:
 1439 0004 00       		.space	1
 1440              		.type	UART_rxBufferOverflow, %object
 1441              		.size	UART_rxBufferOverflow, 1
 1442              	UART_rxBufferOverflow:
 1443 0005 00       		.space	1
 1444              		.type	UART_txBufferRead, %object
 1445              		.size	UART_txBufferRead, 1
 1446              	UART_txBufferRead:
 1447 0006 00       		.space	1
 1448              		.type	UART_txBufferWrite, %object
 1449              		.size	UART_txBufferWrite, 1
 1450              	UART_txBufferWrite:
 1451 0007 00       		.space	1
 1452              		.type	txPeriod.5150, %object
 1453              		.size	txPeriod.5150, 1
 1454              	txPeriod.5150:
 1455 0008 00       		.space	1
 1456              		.text
 1457              	.Letext0:
 1458              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1459              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1460              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1461              		.section	.debug_info,"",%progbits
 1462              	.Ldebug_info0:
 1463 0000 62070000 		.4byte	0x762
 1464 0004 0400     		.2byte	0x4
 1465 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 55


 1466 000a 04       		.byte	0x4
 1467 000b 01       		.uleb128 0x1
 1468 000c BE000000 		.4byte	.LASF79
 1469 0010 0C       		.byte	0xc
 1470 0011 0A040000 		.4byte	.LASF80
 1471 0015 9A010000 		.4byte	.LASF81
 1472 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1473 001d 00000000 		.4byte	0
 1474 0021 00000000 		.4byte	.Ldebug_line0
 1475 0025 02       		.uleb128 0x2
 1476 0026 01       		.byte	0x1
 1477 0027 06       		.byte	0x6
 1478 0028 B2000000 		.4byte	.LASF0
 1479 002c 02       		.uleb128 0x2
 1480 002d 01       		.byte	0x1
 1481 002e 08       		.byte	0x8
 1482 002f 42040000 		.4byte	.LASF1
 1483 0033 02       		.uleb128 0x2
 1484 0034 02       		.byte	0x2
 1485 0035 05       		.byte	0x5
 1486 0036 61040000 		.4byte	.LASF2
 1487 003a 02       		.uleb128 0x2
 1488 003b 02       		.byte	0x2
 1489 003c 07       		.byte	0x7
 1490 003d F9020000 		.4byte	.LASF3
 1491 0041 02       		.uleb128 0x2
 1492 0042 04       		.byte	0x4
 1493 0043 05       		.byte	0x5
 1494 0044 55010000 		.4byte	.LASF4
 1495 0048 02       		.uleb128 0x2
 1496 0049 04       		.byte	0x4
 1497 004a 07       		.byte	0x7
 1498 004b 94020000 		.4byte	.LASF5
 1499 004f 02       		.uleb128 0x2
 1500 0050 08       		.byte	0x8
 1501 0051 05       		.byte	0x5
 1502 0052 A4000000 		.4byte	.LASF6
 1503 0056 02       		.uleb128 0x2
 1504 0057 08       		.byte	0x8
 1505 0058 07       		.byte	0x7
 1506 0059 42000000 		.4byte	.LASF7
 1507 005d 03       		.uleb128 0x3
 1508 005e 04       		.byte	0x4
 1509 005f 05       		.byte	0x5
 1510 0060 696E7400 		.ascii	"int\000"
 1511 0064 02       		.uleb128 0x2
 1512 0065 04       		.byte	0x4
 1513 0066 07       		.byte	0x7
 1514 0067 58020000 		.4byte	.LASF8
 1515 006b 04       		.uleb128 0x4
 1516 006c 7B010000 		.4byte	.LASF9
 1517 0070 02       		.byte	0x2
 1518 0071 E401     		.2byte	0x1e4
 1519 0073 2C000000 		.4byte	0x2c
 1520 0077 04       		.uleb128 0x4
 1521 0078 00000000 		.4byte	.LASF10
 1522 007c 02       		.byte	0x2
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 56


 1523 007d E501     		.2byte	0x1e5
 1524 007f 3A000000 		.4byte	0x3a
 1525 0083 04       		.uleb128 0x4
 1526 0084 05020000 		.4byte	.LASF11
 1527 0088 02       		.byte	0x2
 1528 0089 E601     		.2byte	0x1e6
 1529 008b 48000000 		.4byte	0x48
 1530 008f 02       		.uleb128 0x2
 1531 0090 04       		.byte	0x4
 1532 0091 04       		.byte	0x4
 1533 0092 3B050000 		.4byte	.LASF12
 1534 0096 02       		.uleb128 0x2
 1535 0097 08       		.byte	0x8
 1536 0098 04       		.byte	0x4
 1537 0099 63050000 		.4byte	.LASF13
 1538 009d 04       		.uleb128 0x4
 1539 009e AE040000 		.4byte	.LASF14
 1540 00a2 02       		.byte	0x2
 1541 00a3 F501     		.2byte	0x1f5
 1542 00a5 A9000000 		.4byte	0xa9
 1543 00a9 02       		.uleb128 0x2
 1544 00aa 01       		.byte	0x1
 1545 00ab 08       		.byte	0x8
 1546 00ac A9040000 		.4byte	.LASF15
 1547 00b0 04       		.uleb128 0x4
 1548 00b1 3D040000 		.4byte	.LASF16
 1549 00b5 02       		.byte	0x2
 1550 00b6 8E02     		.2byte	0x28e
 1551 00b8 BC000000 		.4byte	0xbc
 1552 00bc 05       		.uleb128 0x5
 1553 00bd 6B000000 		.4byte	0x6b
 1554 00c1 04       		.uleb128 0x4
 1555 00c2 6A030000 		.4byte	.LASF17
 1556 00c6 02       		.byte	0x2
 1557 00c7 9002     		.2byte	0x290
 1558 00c9 CD000000 		.4byte	0xcd
 1559 00cd 05       		.uleb128 0x5
 1560 00ce 83000000 		.4byte	0x83
 1561 00d2 02       		.uleb128 0x2
 1562 00d3 08       		.byte	0x8
 1563 00d4 04       		.byte	0x4
 1564 00d5 81030000 		.4byte	.LASF18
 1565 00d9 02       		.uleb128 0x2
 1566 00da 04       		.byte	0x4
 1567 00db 07       		.byte	0x7
 1568 00dc 78030000 		.4byte	.LASF19
 1569 00e0 06       		.uleb128 0x6
 1570 00e1 2B020000 		.4byte	.LASF20
 1571 00e5 01       		.byte	0x1
 1572 00e6 6A       		.byte	0x6a
 1573 00e7 00000000 		.4byte	.LFB1
 1574 00eb 58000000 		.4byte	.LFE1-.LFB1
 1575 00ef 01       		.uleb128 0x1
 1576 00f0 9C       		.byte	0x9c
 1577 00f1 48010000 		.4byte	0x148
 1578 00f5 07       		.uleb128 0x7
 1579 00f6 0A000000 		.4byte	.LVL0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 57


 1580 00fa 23070000 		.4byte	0x723
 1581 00fe 08010000 		.4byte	0x108
 1582 0102 08       		.uleb128 0x8
 1583 0103 01       		.uleb128 0x1
 1584 0104 50       		.byte	0x50
 1585 0105 01       		.uleb128 0x1
 1586 0106 31       		.byte	0x31
 1587 0107 00       		.byte	0
 1588 0108 07       		.uleb128 0x7
 1589 0109 12000000 		.4byte	.LVL1
 1590 010d 2E070000 		.4byte	0x72e
 1591 0111 20010000 		.4byte	0x120
 1592 0115 08       		.uleb128 0x8
 1593 0116 01       		.uleb128 0x1
 1594 0117 50       		.byte	0x50
 1595 0118 01       		.uleb128 0x1
 1596 0119 31       		.byte	0x31
 1597 011a 08       		.uleb128 0x8
 1598 011b 01       		.uleb128 0x1
 1599 011c 51       		.byte	0x51
 1600 011d 01       		.uleb128 0x1
 1601 011e 37       		.byte	0x37
 1602 011f 00       		.byte	0
 1603 0120 07       		.uleb128 0x7
 1604 0121 2A000000 		.4byte	.LVL2
 1605 0125 23070000 		.4byte	0x723
 1606 0129 33010000 		.4byte	0x133
 1607 012d 08       		.uleb128 0x8
 1608 012e 01       		.uleb128 0x1
 1609 012f 50       		.byte	0x50
 1610 0130 01       		.uleb128 0x1
 1611 0131 32       		.byte	0x32
 1612 0132 00       		.byte	0
 1613 0133 09       		.uleb128 0x9
 1614 0134 32000000 		.4byte	.LVL3
 1615 0138 2E070000 		.4byte	0x72e
 1616 013c 08       		.uleb128 0x8
 1617 013d 01       		.uleb128 0x1
 1618 013e 50       		.byte	0x50
 1619 013f 01       		.uleb128 0x1
 1620 0140 32       		.byte	0x32
 1621 0141 08       		.uleb128 0x8
 1622 0142 01       		.uleb128 0x1
 1623 0143 51       		.byte	0x51
 1624 0144 01       		.uleb128 0x1
 1625 0145 37       		.byte	0x37
 1626 0146 00       		.byte	0
 1627 0147 00       		.byte	0
 1628 0148 06       		.uleb128 0x6
 1629 0149 8B040000 		.4byte	.LASF21
 1630 014d 01       		.byte	0x1
 1631 014e B7       		.byte	0xb7
 1632 014f 00000000 		.4byte	.LFB2
 1633 0153 50000000 		.4byte	.LFE2-.LFB2
 1634 0157 01       		.uleb128 0x1
 1635 0158 9C       		.byte	0x9c
 1636 0159 88010000 		.4byte	0x188
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 58


 1637 015d 0A       		.uleb128 0xa
 1638 015e E9040000 		.4byte	.LASF24
 1639 0162 01       		.byte	0x1
 1640 0163 B9       		.byte	0xb9
 1641 0164 6B000000 		.4byte	0x6b
 1642 0168 00000000 		.4byte	.LLST0
 1643 016c 0B       		.uleb128 0xb
 1644 016d 06000000 		.4byte	.LVL4
 1645 0171 39070000 		.4byte	0x739
 1646 0175 0B       		.uleb128 0xb
 1647 0176 36000000 		.4byte	.LVL6
 1648 017a 44070000 		.4byte	0x744
 1649 017e 0C       		.uleb128 0xc
 1650 017f 40000000 		.4byte	.LVL8
 1651 0183 4F070000 		.4byte	0x74f
 1652 0187 00       		.byte	0
 1653 0188 06       		.uleb128 0x6
 1654 0189 59000000 		.4byte	.LASF22
 1655 018d 01       		.byte	0x1
 1656 018e 4C       		.byte	0x4c
 1657 018f 00000000 		.4byte	.LFB0
 1658 0193 1C000000 		.4byte	.LFE0-.LFB0
 1659 0197 01       		.uleb128 0x1
 1660 0198 9C       		.byte	0x9c
 1661 0199 B0010000 		.4byte	0x1b0
 1662 019d 0B       		.uleb128 0xb
 1663 019e 0C000000 		.4byte	.LVL9
 1664 01a2 E0000000 		.4byte	0xe0
 1665 01a6 0C       		.uleb128 0xc
 1666 01a7 18000000 		.4byte	.LVL10
 1667 01ab 48010000 		.4byte	0x148
 1668 01af 00       		.byte	0
 1669 01b0 06       		.uleb128 0x6
 1670 01b1 23050000 		.4byte	.LASF23
 1671 01b5 01       		.byte	0x1
 1672 01b6 F0       		.byte	0xf0
 1673 01b7 00000000 		.4byte	.LFB3
 1674 01bb 50000000 		.4byte	.LFE3-.LFB3
 1675 01bf 01       		.uleb128 0x1
 1676 01c0 9C       		.byte	0x9c
 1677 01c1 F0010000 		.4byte	0x1f0
 1678 01c5 0A       		.uleb128 0xa
 1679 01c6 E9040000 		.4byte	.LASF24
 1680 01ca 01       		.byte	0x1
 1681 01cb F2       		.byte	0xf2
 1682 01cc 6B000000 		.4byte	0x6b
 1683 01d0 13000000 		.4byte	.LLST1
 1684 01d4 0B       		.uleb128 0xb
 1685 01d5 06000000 		.4byte	.LVL11
 1686 01d9 39070000 		.4byte	0x739
 1687 01dd 0B       		.uleb128 0xb
 1688 01de 16000000 		.4byte	.LVL13
 1689 01e2 5A070000 		.4byte	0x75a
 1690 01e6 0C       		.uleb128 0xc
 1691 01e7 3E000000 		.4byte	.LVL15
 1692 01eb 4F070000 		.4byte	0x74f
 1693 01ef 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 59


 1694 01f0 0D       		.uleb128 0xd
 1695 01f1 81010000 		.4byte	.LASF46
 1696 01f5 01       		.byte	0x1
 1697 01f6 2701     		.2byte	0x127
 1698 01f8 6B000000 		.4byte	0x6b
 1699 01fc 00000000 		.4byte	.LFB4
 1700 0200 04000000 		.4byte	.LFE4-.LFB4
 1701 0204 01       		.uleb128 0x1
 1702 0205 9C       		.byte	0x9c
 1703 0206 0E       		.uleb128 0xe
 1704 0207 B4040000 		.4byte	.LASF25
 1705 020b 01       		.byte	0x1
 1706 020c 6701     		.2byte	0x167
 1707 020e 00000000 		.4byte	.LFB6
 1708 0212 0C000000 		.4byte	.LFE6-.LFB6
 1709 0216 01       		.uleb128 0x1
 1710 0217 9C       		.byte	0x9c
 1711 0218 2B020000 		.4byte	0x22b
 1712 021c 0F       		.uleb128 0xf
 1713 021d 27030000 		.4byte	.LASF40
 1714 0221 01       		.byte	0x1
 1715 0222 6701     		.2byte	0x167
 1716 0224 6B000000 		.4byte	0x6b
 1717 0228 01       		.uleb128 0x1
 1718 0229 50       		.byte	0x50
 1719 022a 00       		.byte	0
 1720 022b 10       		.uleb128 0x10
 1721 022c 6B010000 		.4byte	.LASF29
 1722 0230 01       		.byte	0x1
 1723 0231 8801     		.2byte	0x188
 1724 0233 6B000000 		.4byte	0x6b
 1725 0237 00000000 		.4byte	.LFB7
 1726 023b 58000000 		.4byte	.LFE7-.LFB7
 1727 023f 01       		.uleb128 0x1
 1728 0240 9C       		.byte	0x9c
 1729 0241 76020000 		.4byte	0x276
 1730 0245 11       		.uleb128 0x11
 1731 0246 84040000 		.4byte	.LASF26
 1732 024a 01       		.byte	0x1
 1733 024b 8A01     		.2byte	0x18a
 1734 024d 6B000000 		.4byte	0x6b
 1735 0251 26000000 		.4byte	.LLST2
 1736 0255 11       		.uleb128 0x11
 1737 0256 D9040000 		.4byte	.LASF27
 1738 025a 01       		.byte	0x1
 1739 025b 8E01     		.2byte	0x18e
 1740 025d 6B000000 		.4byte	0x6b
 1741 0261 44000000 		.4byte	.LLST3
 1742 0265 11       		.uleb128 0x11
 1743 0266 BB030000 		.4byte	.LASF28
 1744 026a 01       		.byte	0x1
 1745 026b 8F01     		.2byte	0x18f
 1746 026d 6B000000 		.4byte	0x6b
 1747 0271 6F000000 		.4byte	.LLST4
 1748 0275 00       		.byte	0
 1749 0276 10       		.uleb128 0x10
 1750 0277 97040000 		.4byte	.LASF30
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 60


 1751 027b 01       		.byte	0x1
 1752 027c E501     		.2byte	0x1e5
 1753 027e 6B000000 		.4byte	0x6b
 1754 0282 00000000 		.4byte	.LFB8
 1755 0286 20000000 		.4byte	.LFE8-.LFB8
 1756 028a 01       		.uleb128 0x1
 1757 028b 9C       		.byte	0x9c
 1758 028c 9F020000 		.4byte	0x29f
 1759 0290 12       		.uleb128 0x12
 1760 0291 1C050000 		.4byte	.LASF31
 1761 0295 01       		.byte	0x1
 1762 0296 E701     		.2byte	0x1e7
 1763 0298 6B000000 		.4byte	0x6b
 1764 029c 01       		.uleb128 0x1
 1765 029d 50       		.byte	0x50
 1766 029e 00       		.byte	0
 1767 029f 10       		.uleb128 0x10
 1768 02a0 CC040000 		.4byte	.LASF32
 1769 02a4 01       		.byte	0x1
 1770 02a5 1402     		.2byte	0x214
 1771 02a7 6B000000 		.4byte	0x6b
 1772 02ab 00000000 		.4byte	.LFB9
 1773 02af 74000000 		.4byte	.LFE9-.LFB9
 1774 02b3 01       		.uleb128 0x1
 1775 02b4 9C       		.byte	0x9c
 1776 02b5 FA020000 		.4byte	0x2fa
 1777 02b9 11       		.uleb128 0x11
 1778 02ba 84040000 		.4byte	.LASF26
 1779 02be 01       		.byte	0x1
 1780 02bf 1602     		.2byte	0x216
 1781 02c1 6B000000 		.4byte	0x6b
 1782 02c5 8D000000 		.4byte	.LLST5
 1783 02c9 11       		.uleb128 0x11
 1784 02ca CC030000 		.4byte	.LASF33
 1785 02ce 01       		.byte	0x1
 1786 02cf 1702     		.2byte	0x217
 1787 02d1 6B000000 		.4byte	0x6b
 1788 02d5 C3000000 		.4byte	.LLST6
 1789 02d9 11       		.uleb128 0x11
 1790 02da D9040000 		.4byte	.LASF27
 1791 02de 01       		.byte	0x1
 1792 02df 1A02     		.2byte	0x21a
 1793 02e1 6B000000 		.4byte	0x6b
 1794 02e5 D6000000 		.4byte	.LLST7
 1795 02e9 11       		.uleb128 0x11
 1796 02ea BB030000 		.4byte	.LASF28
 1797 02ee 01       		.byte	0x1
 1798 02ef 1B02     		.2byte	0x21b
 1799 02f1 6B000000 		.4byte	0x6b
 1800 02f5 01010000 		.4byte	.LLST8
 1801 02f9 00       		.byte	0
 1802 02fa 10       		.uleb128 0x10
 1803 02fb 4B020000 		.4byte	.LASF34
 1804 02ff 01       		.byte	0x1
 1805 0300 7A02     		.2byte	0x27a
 1806 0302 77000000 		.4byte	0x77
 1807 0306 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 61


 1808 030a 2C000000 		.4byte	.LFE10-.LFB10
 1809 030e 01       		.uleb128 0x1
 1810 030f 9C       		.byte	0x9c
 1811 0310 2E030000 		.4byte	0x32e
 1812 0314 11       		.uleb128 0x11
 1813 0315 85020000 		.4byte	.LASF35
 1814 0319 01       		.byte	0x1
 1815 031a 7E02     		.2byte	0x27e
 1816 031c 77000000 		.4byte	0x77
 1817 0320 1F010000 		.4byte	.LLST9
 1818 0324 0B       		.uleb128 0xb
 1819 0325 18000000 		.4byte	.LVL41
 1820 0329 2B020000 		.4byte	0x22b
 1821 032d 00       		.byte	0
 1822 032e 10       		.uleb128 0x10
 1823 032f 07050000 		.4byte	.LASF36
 1824 0333 01       		.byte	0x1
 1825 0334 AB02     		.2byte	0x2ab
 1826 0336 6B000000 		.4byte	0x6b
 1827 033a 00000000 		.4byte	.LFB11
 1828 033e 4C000000 		.4byte	.LFE11-.LFB11
 1829 0342 01       		.uleb128 0x1
 1830 0343 9C       		.byte	0x9c
 1831 0344 57030000 		.4byte	0x357
 1832 0348 12       		.uleb128 0x12
 1833 0349 F4020000 		.4byte	.LASF37
 1834 034d 01       		.byte	0x1
 1835 034e AE02     		.2byte	0x2ae
 1836 0350 6B000000 		.4byte	0x6b
 1837 0354 01       		.uleb128 0x1
 1838 0355 50       		.byte	0x50
 1839 0356 00       		.byte	0
 1840 0357 0E       		.uleb128 0xe
 1841 0358 50050000 		.4byte	.LASF38
 1842 035c 01       		.byte	0x1
 1843 035d F502     		.2byte	0x2f5
 1844 035f 00000000 		.4byte	.LFB12
 1845 0363 44000000 		.4byte	.LFE12-.LFB12
 1846 0367 01       		.uleb128 0x1
 1847 0368 9C       		.byte	0x9c
 1848 0369 90030000 		.4byte	0x390
 1849 036d 11       		.uleb128 0x11
 1850 036e E9040000 		.4byte	.LASF24
 1851 0372 01       		.byte	0x1
 1852 0373 F702     		.2byte	0x2f7
 1853 0375 6B000000 		.4byte	0x6b
 1854 0379 32010000 		.4byte	.LLST10
 1855 037d 0B       		.uleb128 0xb
 1856 037e 06000000 		.4byte	.LVL44
 1857 0382 39070000 		.4byte	0x739
 1858 0386 0B       		.uleb128 0xb
 1859 0387 1C000000 		.4byte	.LVL45
 1860 038b 4F070000 		.4byte	0x74f
 1861 038f 00       		.byte	0
 1862 0390 0E       		.uleb128 0xe
 1863 0391 95030000 		.4byte	.LASF39
 1864 0395 01       		.byte	0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 62


 1865 0396 5903     		.2byte	0x359
 1866 0398 00000000 		.4byte	.LFB14
 1867 039c 0C000000 		.4byte	.LFE14-.LFB14
 1868 03a0 01       		.uleb128 0x1
 1869 03a1 9C       		.byte	0x9c
 1870 03a2 B5030000 		.4byte	0x3b5
 1871 03a6 0F       		.uleb128 0xf
 1872 03a7 8D030000 		.4byte	.LASF41
 1873 03ab 01       		.byte	0x1
 1874 03ac 5903     		.2byte	0x359
 1875 03ae 6B000000 		.4byte	0x6b
 1876 03b2 01       		.uleb128 0x1
 1877 03b3 50       		.byte	0x50
 1878 03b4 00       		.byte	0
 1879 03b5 0E       		.uleb128 0xe
 1880 03b6 A8030000 		.4byte	.LASF42
 1881 03ba 01       		.byte	0x1
 1882 03bb 6D03     		.2byte	0x36d
 1883 03bd 00000000 		.4byte	.LFB15
 1884 03c1 0C000000 		.4byte	.LFE15-.LFB15
 1885 03c5 01       		.uleb128 0x1
 1886 03c6 9C       		.byte	0x9c
 1887 03c7 DA030000 		.4byte	0x3da
 1888 03cb 0F       		.uleb128 0xf
 1889 03cc 8D030000 		.4byte	.LASF41
 1890 03d0 01       		.byte	0x1
 1891 03d1 6D03     		.2byte	0x36d
 1892 03d3 6B000000 		.4byte	0x6b
 1893 03d7 01       		.uleb128 0x1
 1894 03d8 50       		.byte	0x50
 1895 03d9 00       		.byte	0
 1896 03da 0E       		.uleb128 0xe
 1897 03db 64000000 		.4byte	.LASF43
 1898 03df 01       		.byte	0x1
 1899 03e0 8C03     		.2byte	0x38c
 1900 03e2 00000000 		.4byte	.LFB16
 1901 03e6 0C000000 		.4byte	.LFE16-.LFB16
 1902 03ea 01       		.uleb128 0x1
 1903 03eb 9C       		.byte	0x9c
 1904 03ec FF030000 		.4byte	0x3ff
 1905 03f0 0F       		.uleb128 0xf
 1906 03f1 27030000 		.4byte	.LASF40
 1907 03f5 01       		.byte	0x1
 1908 03f6 8C03     		.2byte	0x38c
 1909 03f8 6B000000 		.4byte	0x6b
 1910 03fc 01       		.uleb128 0x1
 1911 03fd 50       		.byte	0x50
 1912 03fe 00       		.byte	0
 1913 03ff 0E       		.uleb128 0xe
 1914 0400 50040000 		.4byte	.LASF44
 1915 0404 01       		.byte	0x1
 1916 0405 AE03     		.2byte	0x3ae
 1917 0407 00000000 		.4byte	.LFB17
 1918 040b 58000000 		.4byte	.LFE17-.LFB17
 1919 040f 01       		.uleb128 0x1
 1920 0410 9C       		.byte	0x9c
 1921 0411 24040000 		.4byte	0x424
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 63


 1922 0415 0F       		.uleb128 0xf
 1923 0416 1D000000 		.4byte	.LASF45
 1924 041a 01       		.byte	0x1
 1925 041b AE03     		.2byte	0x3ae
 1926 041d 6B000000 		.4byte	0x6b
 1927 0421 01       		.uleb128 0x1
 1928 0422 50       		.byte	0x50
 1929 0423 00       		.byte	0
 1930 0424 0D       		.uleb128 0xd
 1931 0425 44030000 		.4byte	.LASF47
 1932 0429 01       		.byte	0x1
 1933 042a EB03     		.2byte	0x3eb
 1934 042c 6B000000 		.4byte	0x6b
 1935 0430 00000000 		.4byte	.LFB18
 1936 0434 0C000000 		.4byte	.LFE18-.LFB18
 1937 0438 01       		.uleb128 0x1
 1938 0439 9C       		.byte	0x9c
 1939 043a 0E       		.uleb128 0xe
 1940 043b 5E010000 		.4byte	.LASF48
 1941 043f 01       		.byte	0x1
 1942 0440 1104     		.2byte	0x411
 1943 0442 00000000 		.4byte	.LFB19
 1944 0446 64000000 		.4byte	.LFE19-.LFB19
 1945 044a 01       		.uleb128 0x1
 1946 044b 9C       		.byte	0x9c
 1947 044c 7F040000 		.4byte	0x47f
 1948 0450 0F       		.uleb128 0xf
 1949 0451 1D000000 		.4byte	.LASF45
 1950 0455 01       		.byte	0x1
 1951 0456 1104     		.2byte	0x411
 1952 0458 6B000000 		.4byte	0x6b
 1953 045c 01       		.uleb128 0x1
 1954 045d 50       		.byte	0x50
 1955 045e 11       		.uleb128 0x11
 1956 045f A6020000 		.4byte	.LASF49
 1957 0463 01       		.byte	0x1
 1958 0464 1804     		.2byte	0x418
 1959 0466 6B000000 		.4byte	0x6b
 1960 046a 45010000 		.4byte	.LLST11
 1961 046e 11       		.uleb128 0x11
 1962 046f 1B020000 		.4byte	.LASF50
 1963 0473 01       		.byte	0x1
 1964 0474 1904     		.2byte	0x419
 1965 0476 6B000000 		.4byte	0x6b
 1966 047a C1010000 		.4byte	.LLST12
 1967 047e 00       		.byte	0
 1968 047f 0E       		.uleb128 0xe
 1969 0480 41050000 		.4byte	.LASF51
 1970 0484 01       		.byte	0x1
 1971 0485 7904     		.2byte	0x479
 1972 0487 00000000 		.4byte	.LFB20
 1973 048b 20000000 		.4byte	.LFE20-.LFB20
 1974 048f 01       		.uleb128 0x1
 1975 0490 9C       		.byte	0x9c
 1976 0491 BF040000 		.4byte	0x4bf
 1977 0495 13       		.uleb128 0x13
 1978 0496 3B000000 		.4byte	.LASF52
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 64


 1979 049a 01       		.byte	0x1
 1980 049b 7904     		.2byte	0x479
 1981 049d BF040000 		.4byte	0x4bf
 1982 04a1 D4010000 		.4byte	.LLST13
 1983 04a5 11       		.uleb128 0x11
 1984 04a6 1E030000 		.4byte	.LASF53
 1985 04aa 01       		.byte	0x1
 1986 04ab 7B04     		.2byte	0x47b
 1987 04ad 77000000 		.4byte	0x77
 1988 04b1 00020000 		.4byte	.LLST14
 1989 04b5 0B       		.uleb128 0xb
 1990 04b6 18000000 		.4byte	.LVL64
 1991 04ba 3A040000 		.4byte	0x43a
 1992 04be 00       		.byte	0
 1993 04bf 14       		.uleb128 0x14
 1994 04c0 04       		.byte	0x4
 1995 04c1 C5040000 		.4byte	0x4c5
 1996 04c5 15       		.uleb128 0x15
 1997 04c6 9D000000 		.4byte	0x9d
 1998 04ca 0E       		.uleb128 0xe
 1999 04cb B7020000 		.4byte	.LASF54
 2000 04cf 01       		.byte	0x1
 2001 04d0 A704     		.2byte	0x4a7
 2002 04d2 00000000 		.4byte	.LFB21
 2003 04d6 24000000 		.4byte	.LFE21-.LFB21
 2004 04da 01       		.uleb128 0x1
 2005 04db 9C       		.byte	0x9c
 2006 04dc 1A050000 		.4byte	0x51a
 2007 04e0 13       		.uleb128 0x13
 2008 04e1 3B000000 		.4byte	.LASF52
 2009 04e5 01       		.byte	0x1
 2010 04e6 A704     		.2byte	0x4a7
 2011 04e8 1A050000 		.4byte	0x51a
 2012 04ec 35020000 		.4byte	.LLST15
 2013 04f0 13       		.uleb128 0x13
 2014 04f1 7A040000 		.4byte	.LASF55
 2015 04f5 01       		.byte	0x1
 2016 04f6 A704     		.2byte	0x4a7
 2017 04f8 6B000000 		.4byte	0x6b
 2018 04fc 56020000 		.4byte	.LLST16
 2019 0500 11       		.uleb128 0x11
 2020 0501 1E030000 		.4byte	.LASF53
 2021 0505 01       		.byte	0x1
 2022 0506 AA04     		.2byte	0x4aa
 2023 0508 6B000000 		.4byte	0x6b
 2024 050c 77020000 		.4byte	.LLST17
 2025 0510 0B       		.uleb128 0xb
 2026 0511 1A000000 		.4byte	.LVL71
 2027 0515 3A040000 		.4byte	0x43a
 2028 0519 00       		.byte	0
 2029 051a 14       		.uleb128 0x14
 2030 051b 04       		.byte	0x4
 2031 051c 20050000 		.4byte	0x520
 2032 0520 15       		.uleb128 0x15
 2033 0521 6B000000 		.4byte	0x6b
 2034 0525 0E       		.uleb128 0xe
 2035 0526 78020000 		.4byte	.LASF56
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 65


 2036 052a 01       		.byte	0x1
 2037 052b CE04     		.2byte	0x4ce
 2038 052d 00000000 		.4byte	.LFB22
 2039 0531 24000000 		.4byte	.LFE22-.LFB22
 2040 0535 01       		.uleb128 0x1
 2041 0536 9C       		.byte	0x9c
 2042 0537 77050000 		.4byte	0x577
 2043 053b 13       		.uleb128 0x13
 2044 053c 1D000000 		.4byte	.LASF45
 2045 0540 01       		.byte	0x1
 2046 0541 CE04     		.2byte	0x4ce
 2047 0543 6B000000 		.4byte	0x6b
 2048 0547 B1020000 		.4byte	.LLST18
 2049 054b 0B       		.uleb128 0xb
 2050 054c 0C000000 		.4byte	.LVL74
 2051 0550 3A040000 		.4byte	0x43a
 2052 0554 07       		.uleb128 0x7
 2053 0555 12000000 		.4byte	.LVL75
 2054 0559 3A040000 		.4byte	0x43a
 2055 055d 67050000 		.4byte	0x567
 2056 0561 08       		.uleb128 0x8
 2057 0562 01       		.uleb128 0x1
 2058 0563 50       		.byte	0x50
 2059 0564 01       		.uleb128 0x1
 2060 0565 3D       		.byte	0x3d
 2061 0566 00       		.byte	0
 2062 0567 16       		.uleb128 0x16
 2063 0568 1C000000 		.4byte	.LVL76
 2064 056c 3A040000 		.4byte	0x43a
 2065 0570 08       		.uleb128 0x8
 2066 0571 01       		.uleb128 0x1
 2067 0572 50       		.byte	0x50
 2068 0573 01       		.uleb128 0x1
 2069 0574 3A       		.byte	0x3a
 2070 0575 00       		.byte	0
 2071 0576 00       		.byte	0
 2072 0577 10       		.uleb128 0x10
 2073 0578 28040000 		.4byte	.LASF57
 2074 057c 01       		.byte	0x1
 2075 057d F904     		.2byte	0x4f9
 2076 057f 6B000000 		.4byte	0x6b
 2077 0583 00000000 		.4byte	.LFB23
 2078 0587 38000000 		.4byte	.LFE23-.LFB23
 2079 058b 01       		.uleb128 0x1
 2080 058c 9C       		.byte	0x9c
 2081 058d A2050000 		.4byte	0x5a2
 2082 0591 11       		.uleb128 0x11
 2083 0592 F4020000 		.4byte	.LASF37
 2084 0596 01       		.byte	0x1
 2085 0597 FC04     		.2byte	0x4fc
 2086 0599 6B000000 		.4byte	0x6b
 2087 059d DD020000 		.4byte	.LLST19
 2088 05a1 00       		.byte	0
 2089 05a2 0E       		.uleb128 0xe
 2090 05a3 65020000 		.4byte	.LASF58
 2091 05a7 01       		.byte	0x1
 2092 05a8 4A05     		.2byte	0x54a
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 66


 2093 05aa 00000000 		.4byte	.LFB24
 2094 05ae 40000000 		.4byte	.LFE24-.LFB24
 2095 05b2 01       		.uleb128 0x1
 2096 05b3 9C       		.byte	0x9c
 2097 05b4 DB050000 		.4byte	0x5db
 2098 05b8 11       		.uleb128 0x11
 2099 05b9 E9040000 		.4byte	.LASF24
 2100 05bd 01       		.byte	0x1
 2101 05be 4C05     		.2byte	0x54c
 2102 05c0 6B000000 		.4byte	0x6b
 2103 05c4 FB020000 		.4byte	.LLST20
 2104 05c8 0B       		.uleb128 0xb
 2105 05c9 06000000 		.4byte	.LVL80
 2106 05cd 39070000 		.4byte	0x739
 2107 05d1 0B       		.uleb128 0xb
 2108 05d2 1C000000 		.4byte	.LVL81
 2109 05d6 4F070000 		.4byte	0x74f
 2110 05da 00       		.byte	0
 2111 05db 0E       		.uleb128 0xe
 2112 05dc 6B040000 		.4byte	.LASF59
 2113 05e0 01       		.byte	0x1
 2114 05e1 A005     		.2byte	0x5a0
 2115 05e3 00000000 		.4byte	.LFB25
 2116 05e7 58000000 		.4byte	.LFE25-.LFB25
 2117 05eb 01       		.uleb128 0x1
 2118 05ec 9C       		.byte	0x9c
 2119 05ed 2A060000 		.4byte	0x62a
 2120 05f1 13       		.uleb128 0x13
 2121 05f2 43020000 		.4byte	.LASF60
 2122 05f6 01       		.byte	0x1
 2123 05f7 A005     		.2byte	0x5a0
 2124 05f9 6B000000 		.4byte	0x6b
 2125 05fd 0E030000 		.4byte	.LLST21
 2126 0601 17       		.uleb128 0x17
 2127 0602 00000000 		.4byte	.Ldebug_ranges0+0
 2128 0606 11       		.uleb128 0x11
 2129 0607 70030000 		.4byte	.LASF61
 2130 060b 01       		.byte	0x1
 2131 060c A805     		.2byte	0x5a8
 2132 060e 6B000000 		.4byte	0x6b
 2133 0612 53030000 		.4byte	.LLST22
 2134 0616 12       		.uleb128 0x12
 2135 0617 4C010000 		.4byte	.LASF62
 2136 061b 01       		.byte	0x1
 2137 061c D005     		.2byte	0x5d0
 2138 061e 6B000000 		.4byte	0x6b
 2139 0622 05       		.uleb128 0x5
 2140 0623 03       		.byte	0x3
 2141 0624 08000000 		.4byte	txPeriod.5150
 2142 0628 00       		.byte	0
 2143 0629 00       		.byte	0
 2144 062a 18       		.uleb128 0x18
 2145 062b 2E030000 		.4byte	.LASF82
 2146 062f 01       		.byte	0x1
 2147 0630 2406     		.2byte	0x624
 2148 0632 01       		.byte	0x1
 2149 0633 44060000 		.4byte	0x644
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 67


 2150 0637 19       		.uleb128 0x19
 2151 0638 E6010000 		.4byte	.LASF83
 2152 063c 01       		.byte	0x1
 2153 063d 2406     		.2byte	0x624
 2154 063f 6B000000 		.4byte	0x6b
 2155 0643 00       		.byte	0
 2156 0644 1A       		.uleb128 0x1a
 2157 0645 2A060000 		.4byte	0x62a
 2158 0649 00000000 		.4byte	.LFB26
 2159 064d 02000000 		.4byte	.LFE26-.LFB26
 2160 0651 01       		.uleb128 0x1
 2161 0652 9C       		.byte	0x9c
 2162 0653 5F060000 		.4byte	0x65f
 2163 0657 1B       		.uleb128 0x1b
 2164 0658 37060000 		.4byte	0x637
 2165 065c 01       		.uleb128 0x1
 2166 065d 50       		.byte	0x50
 2167 065e 00       		.byte	0
 2168 065f 1C       		.uleb128 0x1c
 2169 0660 FA040000 		.4byte	.LASF63
 2170 0664 01       		.byte	0x1
 2171 0665 1B       		.byte	0x1b
 2172 0666 6B000000 		.4byte	0x6b
 2173 066a 05       		.uleb128 0x5
 2174 066b 03       		.byte	0x3
 2175 066c 00000000 		.4byte	UART_initVar
 2176 0670 1D       		.uleb128 0x1d
 2177 0671 BC000000 		.4byte	0xbc
 2178 0675 80060000 		.4byte	0x680
 2179 0679 1E       		.uleb128 0x1e
 2180 067a D9000000 		.4byte	0xd9
 2181 067e 07       		.byte	0x7
 2182 067f 00       		.byte	0
 2183 0680 1C       		.uleb128 0x1c
 2184 0681 35020000 		.4byte	.LASF64
 2185 0685 01       		.byte	0x1
 2186 0686 1E       		.byte	0x1e
 2187 0687 91060000 		.4byte	0x691
 2188 068b 05       		.uleb128 0x5
 2189 068c 03       		.byte	0x3
 2190 068d 00000000 		.4byte	UART_txBuffer
 2191 0691 05       		.uleb128 0x5
 2192 0692 70060000 		.4byte	0x670
 2193 0696 1C       		.uleb128 0x1c
 2194 0697 92000000 		.4byte	.LASF65
 2195 069b 01       		.byte	0x1
 2196 069c 1F       		.byte	0x1f
 2197 069d BC000000 		.4byte	0xbc
 2198 06a1 05       		.uleb128 0x5
 2199 06a2 03       		.byte	0x3
 2200 06a3 00000000 		.4byte	UART_txBufferRead
 2201 06a7 1C       		.uleb128 0x1c
 2202 06a8 28000000 		.4byte	.LASF66
 2203 06ac 01       		.byte	0x1
 2204 06ad 20       		.byte	0x20
 2205 06ae 6B000000 		.4byte	0x6b
 2206 06b2 05       		.uleb128 0x5
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 68


 2207 06b3 03       		.byte	0x3
 2208 06b4 00000000 		.4byte	UART_txBufferWrite
 2209 06b8 1C       		.uleb128 0x1c
 2210 06b9 F9030000 		.4byte	.LASF67
 2211 06bd 01       		.byte	0x1
 2212 06be 24       		.byte	0x24
 2213 06bf 6B000000 		.4byte	0x6b
 2214 06c3 05       		.uleb128 0x5
 2215 06c4 03       		.byte	0x3
 2216 06c5 00000000 		.4byte	UART_errorStatus
 2217 06c9 1C       		.uleb128 0x1c
 2218 06ca 2D050000 		.4byte	.LASF68
 2219 06ce 01       		.byte	0x1
 2220 06cf 25       		.byte	0x25
 2221 06d0 DA060000 		.4byte	0x6da
 2222 06d4 05       		.uleb128 0x5
 2223 06d5 03       		.byte	0x3
 2224 06d6 00000000 		.4byte	UART_rxBuffer
 2225 06da 05       		.uleb128 0x5
 2226 06db 70060000 		.4byte	0x670
 2227 06df 1C       		.uleb128 0x1c
 2228 06e0 0C030000 		.4byte	.LASF69
 2229 06e4 01       		.byte	0x1
 2230 06e5 26       		.byte	0x26
 2231 06e6 BC000000 		.4byte	0xbc
 2232 06ea 05       		.uleb128 0x5
 2233 06eb 03       		.byte	0x3
 2234 06ec 00000000 		.4byte	UART_rxBufferRead
 2235 06f0 1C       		.uleb128 0x1c
 2236 06f1 F2010000 		.4byte	.LASF70
 2237 06f5 01       		.byte	0x1
 2238 06f6 27       		.byte	0x27
 2239 06f7 BC000000 		.4byte	0xbc
 2240 06fb 05       		.uleb128 0x5
 2241 06fc 03       		.byte	0x3
 2242 06fd 00000000 		.4byte	UART_rxBufferWrite
 2243 0701 1C       		.uleb128 0x1c
 2244 0702 DC020000 		.4byte	.LASF71
 2245 0706 01       		.byte	0x1
 2246 0707 28       		.byte	0x28
 2247 0708 BC000000 		.4byte	0xbc
 2248 070c 05       		.uleb128 0x5
 2249 070d 03       		.byte	0x3
 2250 070e 00000000 		.4byte	UART_rxBufferLoopDetect
 2251 0712 1C       		.uleb128 0x1c
 2252 0713 7C000000 		.4byte	.LASF72
 2253 0717 01       		.byte	0x1
 2254 0718 29       		.byte	0x29
 2255 0719 BC000000 		.4byte	0xbc
 2256 071d 05       		.uleb128 0x5
 2257 071e 03       		.byte	0x3
 2258 071f 00000000 		.4byte	UART_rxBufferOverflow
 2259 0723 1F       		.uleb128 0x1f
 2260 0724 0C020000 		.4byte	.LASF73
 2261 0728 0C020000 		.4byte	.LASF73
 2262 072c 03       		.byte	0x3
 2263 072d 88       		.byte	0x88
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 69


 2264 072e 1F       		.uleb128 0x1f
 2265 072f E8030000 		.4byte	.LASF74
 2266 0733 E8030000 		.4byte	.LASF74
 2267 0737 03       		.byte	0x3
 2268 0738 8B       		.byte	0x8b
 2269 0739 1F       		.uleb128 0x1f
 2270 073a C5020000 		.4byte	.LASF75
 2271 073e C5020000 		.4byte	.LASF75
 2272 0742 03       		.byte	0x3
 2273 0743 7D       		.byte	0x7d
 2274 0744 1F       		.uleb128 0x1f
 2275 0745 56030000 		.4byte	.LASF76
 2276 0749 56030000 		.4byte	.LASF76
 2277 074d 04       		.byte	0x4
 2278 074e 27       		.byte	0x27
 2279 074f 1F       		.uleb128 0x1f
 2280 0750 07000000 		.4byte	.LASF77
 2281 0754 07000000 		.4byte	.LASF77
 2282 0758 03       		.byte	0x3
 2283 0759 7E       		.byte	0x7e
 2284 075a 1F       		.uleb128 0x1f
 2285 075b D5030000 		.4byte	.LASF78
 2286 075f D5030000 		.4byte	.LASF78
 2287 0763 04       		.byte	0x4
 2288 0764 28       		.byte	0x28
 2289 0765 00       		.byte	0
 2290              		.section	.debug_abbrev,"",%progbits
 2291              	.Ldebug_abbrev0:
 2292 0000 01       		.uleb128 0x1
 2293 0001 11       		.uleb128 0x11
 2294 0002 01       		.byte	0x1
 2295 0003 25       		.uleb128 0x25
 2296 0004 0E       		.uleb128 0xe
 2297 0005 13       		.uleb128 0x13
 2298 0006 0B       		.uleb128 0xb
 2299 0007 03       		.uleb128 0x3
 2300 0008 0E       		.uleb128 0xe
 2301 0009 1B       		.uleb128 0x1b
 2302 000a 0E       		.uleb128 0xe
 2303 000b 55       		.uleb128 0x55
 2304 000c 17       		.uleb128 0x17
 2305 000d 11       		.uleb128 0x11
 2306 000e 01       		.uleb128 0x1
 2307 000f 10       		.uleb128 0x10
 2308 0010 17       		.uleb128 0x17
 2309 0011 00       		.byte	0
 2310 0012 00       		.byte	0
 2311 0013 02       		.uleb128 0x2
 2312 0014 24       		.uleb128 0x24
 2313 0015 00       		.byte	0
 2314 0016 0B       		.uleb128 0xb
 2315 0017 0B       		.uleb128 0xb
 2316 0018 3E       		.uleb128 0x3e
 2317 0019 0B       		.uleb128 0xb
 2318 001a 03       		.uleb128 0x3
 2319 001b 0E       		.uleb128 0xe
 2320 001c 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 70


 2321 001d 00       		.byte	0
 2322 001e 03       		.uleb128 0x3
 2323 001f 24       		.uleb128 0x24
 2324 0020 00       		.byte	0
 2325 0021 0B       		.uleb128 0xb
 2326 0022 0B       		.uleb128 0xb
 2327 0023 3E       		.uleb128 0x3e
 2328 0024 0B       		.uleb128 0xb
 2329 0025 03       		.uleb128 0x3
 2330 0026 08       		.uleb128 0x8
 2331 0027 00       		.byte	0
 2332 0028 00       		.byte	0
 2333 0029 04       		.uleb128 0x4
 2334 002a 16       		.uleb128 0x16
 2335 002b 00       		.byte	0
 2336 002c 03       		.uleb128 0x3
 2337 002d 0E       		.uleb128 0xe
 2338 002e 3A       		.uleb128 0x3a
 2339 002f 0B       		.uleb128 0xb
 2340 0030 3B       		.uleb128 0x3b
 2341 0031 05       		.uleb128 0x5
 2342 0032 49       		.uleb128 0x49
 2343 0033 13       		.uleb128 0x13
 2344 0034 00       		.byte	0
 2345 0035 00       		.byte	0
 2346 0036 05       		.uleb128 0x5
 2347 0037 35       		.uleb128 0x35
 2348 0038 00       		.byte	0
 2349 0039 49       		.uleb128 0x49
 2350 003a 13       		.uleb128 0x13
 2351 003b 00       		.byte	0
 2352 003c 00       		.byte	0
 2353 003d 06       		.uleb128 0x6
 2354 003e 2E       		.uleb128 0x2e
 2355 003f 01       		.byte	0x1
 2356 0040 3F       		.uleb128 0x3f
 2357 0041 19       		.uleb128 0x19
 2358 0042 03       		.uleb128 0x3
 2359 0043 0E       		.uleb128 0xe
 2360 0044 3A       		.uleb128 0x3a
 2361 0045 0B       		.uleb128 0xb
 2362 0046 3B       		.uleb128 0x3b
 2363 0047 0B       		.uleb128 0xb
 2364 0048 27       		.uleb128 0x27
 2365 0049 19       		.uleb128 0x19
 2366 004a 11       		.uleb128 0x11
 2367 004b 01       		.uleb128 0x1
 2368 004c 12       		.uleb128 0x12
 2369 004d 06       		.uleb128 0x6
 2370 004e 40       		.uleb128 0x40
 2371 004f 18       		.uleb128 0x18
 2372 0050 9742     		.uleb128 0x2117
 2373 0052 19       		.uleb128 0x19
 2374 0053 01       		.uleb128 0x1
 2375 0054 13       		.uleb128 0x13
 2376 0055 00       		.byte	0
 2377 0056 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 71


 2378 0057 07       		.uleb128 0x7
 2379 0058 898201   		.uleb128 0x4109
 2380 005b 01       		.byte	0x1
 2381 005c 11       		.uleb128 0x11
 2382 005d 01       		.uleb128 0x1
 2383 005e 31       		.uleb128 0x31
 2384 005f 13       		.uleb128 0x13
 2385 0060 01       		.uleb128 0x1
 2386 0061 13       		.uleb128 0x13
 2387 0062 00       		.byte	0
 2388 0063 00       		.byte	0
 2389 0064 08       		.uleb128 0x8
 2390 0065 8A8201   		.uleb128 0x410a
 2391 0068 00       		.byte	0
 2392 0069 02       		.uleb128 0x2
 2393 006a 18       		.uleb128 0x18
 2394 006b 9142     		.uleb128 0x2111
 2395 006d 18       		.uleb128 0x18
 2396 006e 00       		.byte	0
 2397 006f 00       		.byte	0
 2398 0070 09       		.uleb128 0x9
 2399 0071 898201   		.uleb128 0x4109
 2400 0074 01       		.byte	0x1
 2401 0075 11       		.uleb128 0x11
 2402 0076 01       		.uleb128 0x1
 2403 0077 31       		.uleb128 0x31
 2404 0078 13       		.uleb128 0x13
 2405 0079 00       		.byte	0
 2406 007a 00       		.byte	0
 2407 007b 0A       		.uleb128 0xa
 2408 007c 34       		.uleb128 0x34
 2409 007d 00       		.byte	0
 2410 007e 03       		.uleb128 0x3
 2411 007f 0E       		.uleb128 0xe
 2412 0080 3A       		.uleb128 0x3a
 2413 0081 0B       		.uleb128 0xb
 2414 0082 3B       		.uleb128 0x3b
 2415 0083 0B       		.uleb128 0xb
 2416 0084 49       		.uleb128 0x49
 2417 0085 13       		.uleb128 0x13
 2418 0086 02       		.uleb128 0x2
 2419 0087 17       		.uleb128 0x17
 2420 0088 00       		.byte	0
 2421 0089 00       		.byte	0
 2422 008a 0B       		.uleb128 0xb
 2423 008b 898201   		.uleb128 0x4109
 2424 008e 00       		.byte	0
 2425 008f 11       		.uleb128 0x11
 2426 0090 01       		.uleb128 0x1
 2427 0091 31       		.uleb128 0x31
 2428 0092 13       		.uleb128 0x13
 2429 0093 00       		.byte	0
 2430 0094 00       		.byte	0
 2431 0095 0C       		.uleb128 0xc
 2432 0096 898201   		.uleb128 0x4109
 2433 0099 00       		.byte	0
 2434 009a 11       		.uleb128 0x11
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 72


 2435 009b 01       		.uleb128 0x1
 2436 009c 9542     		.uleb128 0x2115
 2437 009e 19       		.uleb128 0x19
 2438 009f 31       		.uleb128 0x31
 2439 00a0 13       		.uleb128 0x13
 2440 00a1 00       		.byte	0
 2441 00a2 00       		.byte	0
 2442 00a3 0D       		.uleb128 0xd
 2443 00a4 2E       		.uleb128 0x2e
 2444 00a5 00       		.byte	0
 2445 00a6 3F       		.uleb128 0x3f
 2446 00a7 19       		.uleb128 0x19
 2447 00a8 03       		.uleb128 0x3
 2448 00a9 0E       		.uleb128 0xe
 2449 00aa 3A       		.uleb128 0x3a
 2450 00ab 0B       		.uleb128 0xb
 2451 00ac 3B       		.uleb128 0x3b
 2452 00ad 05       		.uleb128 0x5
 2453 00ae 27       		.uleb128 0x27
 2454 00af 19       		.uleb128 0x19
 2455 00b0 49       		.uleb128 0x49
 2456 00b1 13       		.uleb128 0x13
 2457 00b2 11       		.uleb128 0x11
 2458 00b3 01       		.uleb128 0x1
 2459 00b4 12       		.uleb128 0x12
 2460 00b5 06       		.uleb128 0x6
 2461 00b6 40       		.uleb128 0x40
 2462 00b7 18       		.uleb128 0x18
 2463 00b8 9742     		.uleb128 0x2117
 2464 00ba 19       		.uleb128 0x19
 2465 00bb 00       		.byte	0
 2466 00bc 00       		.byte	0
 2467 00bd 0E       		.uleb128 0xe
 2468 00be 2E       		.uleb128 0x2e
 2469 00bf 01       		.byte	0x1
 2470 00c0 3F       		.uleb128 0x3f
 2471 00c1 19       		.uleb128 0x19
 2472 00c2 03       		.uleb128 0x3
 2473 00c3 0E       		.uleb128 0xe
 2474 00c4 3A       		.uleb128 0x3a
 2475 00c5 0B       		.uleb128 0xb
 2476 00c6 3B       		.uleb128 0x3b
 2477 00c7 05       		.uleb128 0x5
 2478 00c8 27       		.uleb128 0x27
 2479 00c9 19       		.uleb128 0x19
 2480 00ca 11       		.uleb128 0x11
 2481 00cb 01       		.uleb128 0x1
 2482 00cc 12       		.uleb128 0x12
 2483 00cd 06       		.uleb128 0x6
 2484 00ce 40       		.uleb128 0x40
 2485 00cf 18       		.uleb128 0x18
 2486 00d0 9742     		.uleb128 0x2117
 2487 00d2 19       		.uleb128 0x19
 2488 00d3 01       		.uleb128 0x1
 2489 00d4 13       		.uleb128 0x13
 2490 00d5 00       		.byte	0
 2491 00d6 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 73


 2492 00d7 0F       		.uleb128 0xf
 2493 00d8 05       		.uleb128 0x5
 2494 00d9 00       		.byte	0
 2495 00da 03       		.uleb128 0x3
 2496 00db 0E       		.uleb128 0xe
 2497 00dc 3A       		.uleb128 0x3a
 2498 00dd 0B       		.uleb128 0xb
 2499 00de 3B       		.uleb128 0x3b
 2500 00df 05       		.uleb128 0x5
 2501 00e0 49       		.uleb128 0x49
 2502 00e1 13       		.uleb128 0x13
 2503 00e2 02       		.uleb128 0x2
 2504 00e3 18       		.uleb128 0x18
 2505 00e4 00       		.byte	0
 2506 00e5 00       		.byte	0
 2507 00e6 10       		.uleb128 0x10
 2508 00e7 2E       		.uleb128 0x2e
 2509 00e8 01       		.byte	0x1
 2510 00e9 3F       		.uleb128 0x3f
 2511 00ea 19       		.uleb128 0x19
 2512 00eb 03       		.uleb128 0x3
 2513 00ec 0E       		.uleb128 0xe
 2514 00ed 3A       		.uleb128 0x3a
 2515 00ee 0B       		.uleb128 0xb
 2516 00ef 3B       		.uleb128 0x3b
 2517 00f0 05       		.uleb128 0x5
 2518 00f1 27       		.uleb128 0x27
 2519 00f2 19       		.uleb128 0x19
 2520 00f3 49       		.uleb128 0x49
 2521 00f4 13       		.uleb128 0x13
 2522 00f5 11       		.uleb128 0x11
 2523 00f6 01       		.uleb128 0x1
 2524 00f7 12       		.uleb128 0x12
 2525 00f8 06       		.uleb128 0x6
 2526 00f9 40       		.uleb128 0x40
 2527 00fa 18       		.uleb128 0x18
 2528 00fb 9742     		.uleb128 0x2117
 2529 00fd 19       		.uleb128 0x19
 2530 00fe 01       		.uleb128 0x1
 2531 00ff 13       		.uleb128 0x13
 2532 0100 00       		.byte	0
 2533 0101 00       		.byte	0
 2534 0102 11       		.uleb128 0x11
 2535 0103 34       		.uleb128 0x34
 2536 0104 00       		.byte	0
 2537 0105 03       		.uleb128 0x3
 2538 0106 0E       		.uleb128 0xe
 2539 0107 3A       		.uleb128 0x3a
 2540 0108 0B       		.uleb128 0xb
 2541 0109 3B       		.uleb128 0x3b
 2542 010a 05       		.uleb128 0x5
 2543 010b 49       		.uleb128 0x49
 2544 010c 13       		.uleb128 0x13
 2545 010d 02       		.uleb128 0x2
 2546 010e 17       		.uleb128 0x17
 2547 010f 00       		.byte	0
 2548 0110 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 74


 2549 0111 12       		.uleb128 0x12
 2550 0112 34       		.uleb128 0x34
 2551 0113 00       		.byte	0
 2552 0114 03       		.uleb128 0x3
 2553 0115 0E       		.uleb128 0xe
 2554 0116 3A       		.uleb128 0x3a
 2555 0117 0B       		.uleb128 0xb
 2556 0118 3B       		.uleb128 0x3b
 2557 0119 05       		.uleb128 0x5
 2558 011a 49       		.uleb128 0x49
 2559 011b 13       		.uleb128 0x13
 2560 011c 02       		.uleb128 0x2
 2561 011d 18       		.uleb128 0x18
 2562 011e 00       		.byte	0
 2563 011f 00       		.byte	0
 2564 0120 13       		.uleb128 0x13
 2565 0121 05       		.uleb128 0x5
 2566 0122 00       		.byte	0
 2567 0123 03       		.uleb128 0x3
 2568 0124 0E       		.uleb128 0xe
 2569 0125 3A       		.uleb128 0x3a
 2570 0126 0B       		.uleb128 0xb
 2571 0127 3B       		.uleb128 0x3b
 2572 0128 05       		.uleb128 0x5
 2573 0129 49       		.uleb128 0x49
 2574 012a 13       		.uleb128 0x13
 2575 012b 02       		.uleb128 0x2
 2576 012c 17       		.uleb128 0x17
 2577 012d 00       		.byte	0
 2578 012e 00       		.byte	0
 2579 012f 14       		.uleb128 0x14
 2580 0130 0F       		.uleb128 0xf
 2581 0131 00       		.byte	0
 2582 0132 0B       		.uleb128 0xb
 2583 0133 0B       		.uleb128 0xb
 2584 0134 49       		.uleb128 0x49
 2585 0135 13       		.uleb128 0x13
 2586 0136 00       		.byte	0
 2587 0137 00       		.byte	0
 2588 0138 15       		.uleb128 0x15
 2589 0139 26       		.uleb128 0x26
 2590 013a 00       		.byte	0
 2591 013b 49       		.uleb128 0x49
 2592 013c 13       		.uleb128 0x13
 2593 013d 00       		.byte	0
 2594 013e 00       		.byte	0
 2595 013f 16       		.uleb128 0x16
 2596 0140 898201   		.uleb128 0x4109
 2597 0143 01       		.byte	0x1
 2598 0144 11       		.uleb128 0x11
 2599 0145 01       		.uleb128 0x1
 2600 0146 9542     		.uleb128 0x2115
 2601 0148 19       		.uleb128 0x19
 2602 0149 31       		.uleb128 0x31
 2603 014a 13       		.uleb128 0x13
 2604 014b 00       		.byte	0
 2605 014c 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 75


 2606 014d 17       		.uleb128 0x17
 2607 014e 0B       		.uleb128 0xb
 2608 014f 01       		.byte	0x1
 2609 0150 55       		.uleb128 0x55
 2610 0151 17       		.uleb128 0x17
 2611 0152 00       		.byte	0
 2612 0153 00       		.byte	0
 2613 0154 18       		.uleb128 0x18
 2614 0155 2E       		.uleb128 0x2e
 2615 0156 01       		.byte	0x1
 2616 0157 3F       		.uleb128 0x3f
 2617 0158 19       		.uleb128 0x19
 2618 0159 03       		.uleb128 0x3
 2619 015a 0E       		.uleb128 0xe
 2620 015b 3A       		.uleb128 0x3a
 2621 015c 0B       		.uleb128 0xb
 2622 015d 3B       		.uleb128 0x3b
 2623 015e 05       		.uleb128 0x5
 2624 015f 27       		.uleb128 0x27
 2625 0160 19       		.uleb128 0x19
 2626 0161 20       		.uleb128 0x20
 2627 0162 0B       		.uleb128 0xb
 2628 0163 01       		.uleb128 0x1
 2629 0164 13       		.uleb128 0x13
 2630 0165 00       		.byte	0
 2631 0166 00       		.byte	0
 2632 0167 19       		.uleb128 0x19
 2633 0168 05       		.uleb128 0x5
 2634 0169 00       		.byte	0
 2635 016a 03       		.uleb128 0x3
 2636 016b 0E       		.uleb128 0xe
 2637 016c 3A       		.uleb128 0x3a
 2638 016d 0B       		.uleb128 0xb
 2639 016e 3B       		.uleb128 0x3b
 2640 016f 05       		.uleb128 0x5
 2641 0170 49       		.uleb128 0x49
 2642 0171 13       		.uleb128 0x13
 2643 0172 00       		.byte	0
 2644 0173 00       		.byte	0
 2645 0174 1A       		.uleb128 0x1a
 2646 0175 2E       		.uleb128 0x2e
 2647 0176 01       		.byte	0x1
 2648 0177 31       		.uleb128 0x31
 2649 0178 13       		.uleb128 0x13
 2650 0179 11       		.uleb128 0x11
 2651 017a 01       		.uleb128 0x1
 2652 017b 12       		.uleb128 0x12
 2653 017c 06       		.uleb128 0x6
 2654 017d 40       		.uleb128 0x40
 2655 017e 18       		.uleb128 0x18
 2656 017f 9742     		.uleb128 0x2117
 2657 0181 19       		.uleb128 0x19
 2658 0182 01       		.uleb128 0x1
 2659 0183 13       		.uleb128 0x13
 2660 0184 00       		.byte	0
 2661 0185 00       		.byte	0
 2662 0186 1B       		.uleb128 0x1b
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 76


 2663 0187 05       		.uleb128 0x5
 2664 0188 00       		.byte	0
 2665 0189 31       		.uleb128 0x31
 2666 018a 13       		.uleb128 0x13
 2667 018b 02       		.uleb128 0x2
 2668 018c 18       		.uleb128 0x18
 2669 018d 00       		.byte	0
 2670 018e 00       		.byte	0
 2671 018f 1C       		.uleb128 0x1c
 2672 0190 34       		.uleb128 0x34
 2673 0191 00       		.byte	0
 2674 0192 03       		.uleb128 0x3
 2675 0193 0E       		.uleb128 0xe
 2676 0194 3A       		.uleb128 0x3a
 2677 0195 0B       		.uleb128 0xb
 2678 0196 3B       		.uleb128 0x3b
 2679 0197 0B       		.uleb128 0xb
 2680 0198 49       		.uleb128 0x49
 2681 0199 13       		.uleb128 0x13
 2682 019a 3F       		.uleb128 0x3f
 2683 019b 19       		.uleb128 0x19
 2684 019c 02       		.uleb128 0x2
 2685 019d 18       		.uleb128 0x18
 2686 019e 00       		.byte	0
 2687 019f 00       		.byte	0
 2688 01a0 1D       		.uleb128 0x1d
 2689 01a1 01       		.uleb128 0x1
 2690 01a2 01       		.byte	0x1
 2691 01a3 49       		.uleb128 0x49
 2692 01a4 13       		.uleb128 0x13
 2693 01a5 01       		.uleb128 0x1
 2694 01a6 13       		.uleb128 0x13
 2695 01a7 00       		.byte	0
 2696 01a8 00       		.byte	0
 2697 01a9 1E       		.uleb128 0x1e
 2698 01aa 21       		.uleb128 0x21
 2699 01ab 00       		.byte	0
 2700 01ac 49       		.uleb128 0x49
 2701 01ad 13       		.uleb128 0x13
 2702 01ae 2F       		.uleb128 0x2f
 2703 01af 0B       		.uleb128 0xb
 2704 01b0 00       		.byte	0
 2705 01b1 00       		.byte	0
 2706 01b2 1F       		.uleb128 0x1f
 2707 01b3 2E       		.uleb128 0x2e
 2708 01b4 00       		.byte	0
 2709 01b5 3F       		.uleb128 0x3f
 2710 01b6 19       		.uleb128 0x19
 2711 01b7 3C       		.uleb128 0x3c
 2712 01b8 19       		.uleb128 0x19
 2713 01b9 6E       		.uleb128 0x6e
 2714 01ba 0E       		.uleb128 0xe
 2715 01bb 03       		.uleb128 0x3
 2716 01bc 0E       		.uleb128 0xe
 2717 01bd 3A       		.uleb128 0x3a
 2718 01be 0B       		.uleb128 0xb
 2719 01bf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 77


 2720 01c0 0B       		.uleb128 0xb
 2721 01c1 00       		.byte	0
 2722 01c2 00       		.byte	0
 2723 01c3 00       		.byte	0
 2724              		.section	.debug_loc,"",%progbits
 2725              	.Ldebug_loc0:
 2726              	.LLST0:
 2727 0000 08000000 		.4byte	.LVL5
 2728 0004 3C000000 		.4byte	.LVL7
 2729 0008 0100     		.2byte	0x1
 2730 000a 54       		.byte	0x54
 2731 000b 00000000 		.4byte	0
 2732 000f 00000000 		.4byte	0
 2733              	.LLST1:
 2734 0013 08000000 		.4byte	.LVL12
 2735 0017 3A000000 		.4byte	.LVL14
 2736 001b 0100     		.2byte	0x1
 2737 001d 54       		.byte	0x54
 2738 001e 00000000 		.4byte	0
 2739 0022 00000000 		.4byte	0
 2740              	.LLST2:
 2741 0026 2C000000 		.4byte	.LVL22
 2742 002a 36000000 		.4byte	.LVL23
 2743 002e 0100     		.2byte	0x1
 2744 0030 50       		.byte	0x50
 2745 0031 3C000000 		.4byte	.LVL25
 2746 0035 58000000 		.4byte	.LFE7
 2747 0039 0100     		.2byte	0x1
 2748 003b 50       		.byte	0x50
 2749 003c 00000000 		.4byte	0
 2750 0040 00000000 		.4byte	0
 2751              	.LLST3:
 2752 0044 10000000 		.4byte	.LVL17
 2753 0048 1E000000 		.4byte	.LVL20
 2754 004c 0100     		.2byte	0x1
 2755 004e 53       		.byte	0x53
 2756 004f 1E000000 		.4byte	.LVL20
 2757 0053 20000000 		.4byte	.LVL21
 2758 0057 0300     		.2byte	0x3
 2759 0059 73       		.byte	0x73
 2760 005a 7F       		.sleb128 -1
 2761 005b 9F       		.byte	0x9f
 2762 005c 36000000 		.4byte	.LVL23
 2763 0060 38000000 		.4byte	.LVL24
 2764 0064 0100     		.2byte	0x1
 2765 0066 53       		.byte	0x53
 2766 0067 00000000 		.4byte	0
 2767 006b 00000000 		.4byte	0
 2768              	.LLST4:
 2769 006f 12000000 		.4byte	.LVL18
 2770 0073 1A000000 		.4byte	.LVL19
 2771 0077 0100     		.2byte	0x1
 2772 0079 51       		.byte	0x51
 2773 007a 36000000 		.4byte	.LVL23
 2774 007e 3C000000 		.4byte	.LVL25
 2775 0082 0100     		.2byte	0x1
 2776 0084 51       		.byte	0x51
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 78


 2777 0085 00000000 		.4byte	0
 2778 0089 00000000 		.4byte	0
 2779              	.LLST5:
 2780 008d 00000000 		.4byte	.LVL28
 2781 0091 2C000000 		.4byte	.LVL34
 2782 0095 0200     		.2byte	0x2
 2783 0097 30       		.byte	0x30
 2784 0098 9F       		.byte	0x9f
 2785 0099 2C000000 		.4byte	.LVL34
 2786 009d 36000000 		.4byte	.LVL35
 2787 00a1 0100     		.2byte	0x1
 2788 00a3 50       		.byte	0x50
 2789 00a4 36000000 		.4byte	.LVL35
 2790 00a8 4E000000 		.4byte	.LVL38
 2791 00ac 0200     		.2byte	0x2
 2792 00ae 30       		.byte	0x30
 2793 00af 9F       		.byte	0x9f
 2794 00b0 4E000000 		.4byte	.LVL38
 2795 00b4 74000000 		.4byte	.LFE9
 2796 00b8 0100     		.2byte	0x1
 2797 00ba 50       		.byte	0x50
 2798 00bb 00000000 		.4byte	0
 2799 00bf 00000000 		.4byte	0
 2800              	.LLST6:
 2801 00c3 3C000000 		.4byte	.LVL37
 2802 00c7 52000000 		.4byte	.LVL39
 2803 00cb 0100     		.2byte	0x1
 2804 00cd 53       		.byte	0x53
 2805 00ce 00000000 		.4byte	0
 2806 00d2 00000000 		.4byte	0
 2807              	.LLST7:
 2808 00d6 10000000 		.4byte	.LVL29
 2809 00da 1E000000 		.4byte	.LVL32
 2810 00de 0100     		.2byte	0x1
 2811 00e0 53       		.byte	0x53
 2812 00e1 1E000000 		.4byte	.LVL32
 2813 00e5 20000000 		.4byte	.LVL33
 2814 00e9 0300     		.2byte	0x3
 2815 00eb 73       		.byte	0x73
 2816 00ec 7F       		.sleb128 -1
 2817 00ed 9F       		.byte	0x9f
 2818 00ee 36000000 		.4byte	.LVL35
 2819 00f2 38000000 		.4byte	.LVL36
 2820 00f6 0100     		.2byte	0x1
 2821 00f8 53       		.byte	0x53
 2822 00f9 00000000 		.4byte	0
 2823 00fd 00000000 		.4byte	0
 2824              	.LLST8:
 2825 0101 12000000 		.4byte	.LVL30
 2826 0105 1A000000 		.4byte	.LVL31
 2827 0109 0100     		.2byte	0x1
 2828 010b 51       		.byte	0x51
 2829 010c 36000000 		.4byte	.LVL35
 2830 0110 52000000 		.4byte	.LVL39
 2831 0114 0100     		.2byte	0x1
 2832 0116 51       		.byte	0x51
 2833 0117 00000000 		.4byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 79


 2834 011b 00000000 		.4byte	0
 2835              	.LLST9:
 2836 011f 0E000000 		.4byte	.LVL40
 2837 0123 20000000 		.4byte	.LVL42
 2838 0127 0100     		.2byte	0x1
 2839 0129 54       		.byte	0x54
 2840 012a 00000000 		.4byte	0
 2841 012e 00000000 		.4byte	0
 2842              	.LLST10:
 2843 0132 06000000 		.4byte	.LVL44
 2844 0136 1B000000 		.4byte	.LVL45-1
 2845 013a 0100     		.2byte	0x1
 2846 013c 50       		.byte	0x50
 2847 013d 00000000 		.4byte	0
 2848 0141 00000000 		.4byte	0
 2849              	.LLST11:
 2850 0145 06000000 		.4byte	.LVL51
 2851 0149 32000000 		.4byte	.LVL54
 2852 014d 0500     		.2byte	0x5
 2853 014f 03       		.byte	0x3
 2854 0150 00000000 		.4byte	UART_txBufferWrite
 2855 0154 34000000 		.4byte	.LVL55
 2856 0158 3C000000 		.4byte	.LVL56
 2857 015c 0500     		.2byte	0x5
 2858 015e 03       		.byte	0x3
 2859 015f 00000000 		.4byte	UART_txBufferWrite
 2860 0163 3C000000 		.4byte	.LVL56
 2861 0167 3E000000 		.4byte	.LVL57
 2862 016b 0100     		.2byte	0x1
 2863 016d 53       		.byte	0x53
 2864 016e 3E000000 		.4byte	.LVL57
 2865 0172 40000000 		.4byte	.LVL58
 2866 0176 0300     		.2byte	0x3
 2867 0178 73       		.byte	0x73
 2868 0179 01       		.sleb128 1
 2869 017a 9F       		.byte	0x9f
 2870 017b 40000000 		.4byte	.LVL58
 2871 017f 44000000 		.4byte	.LVL59
 2872 0183 0300     		.2byte	0x3
 2873 0185 73       		.byte	0x73
 2874 0186 00       		.sleb128 0
 2875 0187 9F       		.byte	0x9f
 2876 0188 46000000 		.4byte	.LVL60
 2877 018c 64000000 		.4byte	.LFE19
 2878 0190 2700     		.2byte	0x27
 2879 0192 30       		.byte	0x30
 2880 0193 03       		.byte	0x3
 2881 0194 00000000 		.4byte	UART_txBufferWrite
 2882 0198 94       		.byte	0x94
 2883 0199 01       		.byte	0x1
 2884 019a 08       		.byte	0x8
 2885 019b FF       		.byte	0xff
 2886 019c 1A       		.byte	0x1a
 2887 019d 03       		.byte	0x3
 2888 019e 00000000 		.4byte	UART_txBufferWrite
 2889 01a2 94       		.byte	0x94
 2890 01a3 01       		.byte	0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 80


 2891 01a4 08       		.byte	0x8
 2892 01a5 FF       		.byte	0xff
 2893 01a6 1A       		.byte	0x1a
 2894 01a7 40       		.byte	0x40
 2895 01a8 4B       		.byte	0x4b
 2896 01a9 24       		.byte	0x24
 2897 01aa 22       		.byte	0x22
 2898 01ab 0C       		.byte	0xc
 2899 01ac 08000080 		.4byte	0x80000008
 2900 01b0 2A       		.byte	0x2a
 2901 01b1 28       		.byte	0x28
 2902 01b2 0100     		.2byte	0x1
 2903 01b4 16       		.byte	0x16
 2904 01b5 13       		.byte	0x13
 2905 01b6 23       		.byte	0x23
 2906 01b7 01       		.uleb128 0x1
 2907 01b8 9F       		.byte	0x9f
 2908 01b9 00000000 		.4byte	0
 2909 01bd 00000000 		.4byte	0
 2910              	.LLST12:
 2911 01c1 0A000000 		.4byte	.LVL52
 2912 01c5 26000000 		.4byte	.LVL53
 2913 01c9 0100     		.2byte	0x1
 2914 01cb 52       		.byte	0x52
 2915 01cc 00000000 		.4byte	0
 2916 01d0 00000000 		.4byte	0
 2917              	.LLST13:
 2918 01d4 00000000 		.4byte	.LVL61
 2919 01d8 0C000000 		.4byte	.LVL62
 2920 01dc 0100     		.2byte	0x1
 2921 01de 50       		.byte	0x50
 2922 01df 0C000000 		.4byte	.LVL62
 2923 01e3 1C000000 		.4byte	.LVL66
 2924 01e7 0100     		.2byte	0x1
 2925 01e9 55       		.byte	0x55
 2926 01ea 1C000000 		.4byte	.LVL66
 2927 01ee 20000000 		.4byte	.LFE20
 2928 01f2 0400     		.2byte	0x4
 2929 01f4 F3       		.byte	0xf3
 2930 01f5 01       		.uleb128 0x1
 2931 01f6 50       		.byte	0x50
 2932 01f7 9F       		.byte	0x9f
 2933 01f8 00000000 		.4byte	0
 2934 01fc 00000000 		.4byte	0
 2935              	.LLST14:
 2936 0200 00000000 		.4byte	.LVL61
 2937 0204 0C000000 		.4byte	.LVL62
 2938 0208 0200     		.2byte	0x2
 2939 020a 30       		.byte	0x30
 2940 020b 9F       		.byte	0x9f
 2941 020c 0C000000 		.4byte	.LVL62
 2942 0210 0E000000 		.4byte	.LVL63
 2943 0214 0100     		.2byte	0x1
 2944 0216 54       		.byte	0x54
 2945 0217 0E000000 		.4byte	.LVL63
 2946 021b 17000000 		.4byte	.LVL64-1
 2947 021f 0100     		.2byte	0x1
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 81


 2948 0221 53       		.byte	0x53
 2949 0222 18000000 		.4byte	.LVL64
 2950 0226 1A000000 		.4byte	.LVL65
 2951 022a 0100     		.2byte	0x1
 2952 022c 54       		.byte	0x54
 2953 022d 00000000 		.4byte	0
 2954 0231 00000000 		.4byte	0
 2955              	.LLST15:
 2956 0235 00000000 		.4byte	.LVL67
 2957 0239 0E000000 		.4byte	.LVL69
 2958 023d 0100     		.2byte	0x1
 2959 023f 50       		.byte	0x50
 2960 0240 0E000000 		.4byte	.LVL69
 2961 0244 24000000 		.4byte	.LFE21
 2962 0248 0400     		.2byte	0x4
 2963 024a F3       		.byte	0xf3
 2964 024b 01       		.uleb128 0x1
 2965 024c 50       		.byte	0x50
 2966 024d 9F       		.byte	0x9f
 2967 024e 00000000 		.4byte	0
 2968 0252 00000000 		.4byte	0
 2969              	.LLST16:
 2970 0256 00000000 		.4byte	.LVL67
 2971 025a 0A000000 		.4byte	.LVL68
 2972 025e 0100     		.2byte	0x1
 2973 0260 51       		.byte	0x51
 2974 0261 0A000000 		.4byte	.LVL68
 2975 0265 24000000 		.4byte	.LFE21
 2976 0269 0400     		.2byte	0x4
 2977 026b F3       		.byte	0xf3
 2978 026c 01       		.uleb128 0x1
 2979 026d 51       		.byte	0x51
 2980 026e 9F       		.byte	0x9f
 2981 026f 00000000 		.4byte	0
 2982 0273 00000000 		.4byte	0
 2983              	.LLST17:
 2984 0277 00000000 		.4byte	.LVL67
 2985 027b 0E000000 		.4byte	.LVL69
 2986 027f 0200     		.2byte	0x2
 2987 0281 30       		.byte	0x30
 2988 0282 9F       		.byte	0x9f
 2989 0283 0E000000 		.4byte	.LVL69
 2990 0287 16000000 		.4byte	.LVL70
 2991 028b 0900     		.2byte	0x9
 2992 028d 75       		.byte	0x75
 2993 028e 00       		.sleb128 0
 2994 028f F3       		.byte	0xf3
 2995 0290 01       		.uleb128 0x1
 2996 0291 50       		.byte	0x50
 2997 0292 31       		.byte	0x31
 2998 0293 1C       		.byte	0x1c
 2999 0294 1C       		.byte	0x1c
 3000 0295 9F       		.byte	0x9f
 3001 0296 1A000000 		.4byte	.LVL71
 3002 029a 1C000000 		.4byte	.LVL72
 3003 029e 0900     		.2byte	0x9
 3004 02a0 75       		.byte	0x75
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 82


 3005 02a1 00       		.sleb128 0
 3006 02a2 F3       		.byte	0xf3
 3007 02a3 01       		.uleb128 0x1
 3008 02a4 50       		.byte	0x50
 3009 02a5 31       		.byte	0x31
 3010 02a6 1C       		.byte	0x1c
 3011 02a7 1C       		.byte	0x1c
 3012 02a8 9F       		.byte	0x9f
 3013 02a9 00000000 		.4byte	0
 3014 02ad 00000000 		.4byte	0
 3015              	.LLST18:
 3016 02b1 00000000 		.4byte	.LVL73
 3017 02b5 0B000000 		.4byte	.LVL74-1
 3018 02b9 0100     		.2byte	0x1
 3019 02bb 50       		.byte	0x50
 3020 02bc 0B000000 		.4byte	.LVL74-1
 3021 02c0 1C000000 		.4byte	.LVL76
 3022 02c4 0400     		.2byte	0x4
 3023 02c6 F3       		.byte	0xf3
 3024 02c7 01       		.uleb128 0x1
 3025 02c8 50       		.byte	0x50
 3026 02c9 9F       		.byte	0x9f
 3027 02ca 1C000000 		.4byte	.LVL76
 3028 02ce 24000000 		.4byte	.LFE22
 3029 02d2 0100     		.2byte	0x1
 3030 02d4 50       		.byte	0x50
 3031 02d5 00000000 		.4byte	0
 3032 02d9 00000000 		.4byte	0
 3033              	.LLST19:
 3034 02dd 1E000000 		.4byte	.LVL77
 3035 02e1 20000000 		.4byte	.LVL78
 3036 02e5 0100     		.2byte	0x1
 3037 02e7 50       		.byte	0x50
 3038 02e8 22000000 		.4byte	.LVL79
 3039 02ec 38000000 		.4byte	.LFE23
 3040 02f0 0100     		.2byte	0x1
 3041 02f2 50       		.byte	0x50
 3042 02f3 00000000 		.4byte	0
 3043 02f7 00000000 		.4byte	0
 3044              	.LLST20:
 3045 02fb 06000000 		.4byte	.LVL80
 3046 02ff 1B000000 		.4byte	.LVL81-1
 3047 0303 0100     		.2byte	0x1
 3048 0305 50       		.byte	0x50
 3049 0306 00000000 		.4byte	0
 3050 030a 00000000 		.4byte	0
 3051              	.LLST21:
 3052 030e 00000000 		.4byte	.LVL82
 3053 0312 2C000000 		.4byte	.LVL85
 3054 0316 0100     		.2byte	0x1
 3055 0318 50       		.byte	0x50
 3056 0319 2C000000 		.4byte	.LVL85
 3057 031d 32000000 		.4byte	.LVL86
 3058 0321 0400     		.2byte	0x4
 3059 0323 F3       		.byte	0xf3
 3060 0324 01       		.uleb128 0x1
 3061 0325 50       		.byte	0x50
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 83


 3062 0326 9F       		.byte	0x9f
 3063 0327 32000000 		.4byte	.LVL86
 3064 032b 3C000000 		.4byte	.LVL89
 3065 032f 0100     		.2byte	0x1
 3066 0331 50       		.byte	0x50
 3067 0332 3C000000 		.4byte	.LVL89
 3068 0336 44000000 		.4byte	.LVL90
 3069 033a 0400     		.2byte	0x4
 3070 033c F3       		.byte	0xf3
 3071 033d 01       		.uleb128 0x1
 3072 033e 50       		.byte	0x50
 3073 033f 9F       		.byte	0x9f
 3074 0340 44000000 		.4byte	.LVL90
 3075 0344 58000000 		.4byte	.LFE25
 3076 0348 0100     		.2byte	0x1
 3077 034a 50       		.byte	0x50
 3078 034b 00000000 		.4byte	0
 3079 034f 00000000 		.4byte	0
 3080              	.LLST22:
 3081 0353 1E000000 		.4byte	.LVL83
 3082 0357 20000000 		.4byte	.LVL84
 3083 035b 0100     		.2byte	0x1
 3084 035d 52       		.byte	0x52
 3085 035e 36000000 		.4byte	.LVL87
 3086 0362 38000000 		.4byte	.LVL88
 3087 0366 0100     		.2byte	0x1
 3088 0368 52       		.byte	0x52
 3089 0369 00000000 		.4byte	0
 3090 036d 00000000 		.4byte	0
 3091              		.section	.debug_aranges,"",%progbits
 3092 0000 DC000000 		.4byte	0xdc
 3093 0004 0200     		.2byte	0x2
 3094 0006 00000000 		.4byte	.Ldebug_info0
 3095 000a 04       		.byte	0x4
 3096 000b 00       		.byte	0
 3097 000c 0000     		.2byte	0
 3098 000e 0000     		.2byte	0
 3099 0010 00000000 		.4byte	.LFB1
 3100 0014 58000000 		.4byte	.LFE1-.LFB1
 3101 0018 00000000 		.4byte	.LFB2
 3102 001c 50000000 		.4byte	.LFE2-.LFB2
 3103 0020 00000000 		.4byte	.LFB0
 3104 0024 1C000000 		.4byte	.LFE0-.LFB0
 3105 0028 00000000 		.4byte	.LFB3
 3106 002c 50000000 		.4byte	.LFE3-.LFB3
 3107 0030 00000000 		.4byte	.LFB4
 3108 0034 04000000 		.4byte	.LFE4-.LFB4
 3109 0038 00000000 		.4byte	.LFB6
 3110 003c 0C000000 		.4byte	.LFE6-.LFB6
 3111 0040 00000000 		.4byte	.LFB7
 3112 0044 58000000 		.4byte	.LFE7-.LFB7
 3113 0048 00000000 		.4byte	.LFB8
 3114 004c 20000000 		.4byte	.LFE8-.LFB8
 3115 0050 00000000 		.4byte	.LFB9
 3116 0054 74000000 		.4byte	.LFE9-.LFB9
 3117 0058 00000000 		.4byte	.LFB10
 3118 005c 2C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 84


 3119 0060 00000000 		.4byte	.LFB11
 3120 0064 4C000000 		.4byte	.LFE11-.LFB11
 3121 0068 00000000 		.4byte	.LFB12
 3122 006c 44000000 		.4byte	.LFE12-.LFB12
 3123 0070 00000000 		.4byte	.LFB14
 3124 0074 0C000000 		.4byte	.LFE14-.LFB14
 3125 0078 00000000 		.4byte	.LFB15
 3126 007c 0C000000 		.4byte	.LFE15-.LFB15
 3127 0080 00000000 		.4byte	.LFB16
 3128 0084 0C000000 		.4byte	.LFE16-.LFB16
 3129 0088 00000000 		.4byte	.LFB17
 3130 008c 58000000 		.4byte	.LFE17-.LFB17
 3131 0090 00000000 		.4byte	.LFB18
 3132 0094 0C000000 		.4byte	.LFE18-.LFB18
 3133 0098 00000000 		.4byte	.LFB19
 3134 009c 64000000 		.4byte	.LFE19-.LFB19
 3135 00a0 00000000 		.4byte	.LFB20
 3136 00a4 20000000 		.4byte	.LFE20-.LFB20
 3137 00a8 00000000 		.4byte	.LFB21
 3138 00ac 24000000 		.4byte	.LFE21-.LFB21
 3139 00b0 00000000 		.4byte	.LFB22
 3140 00b4 24000000 		.4byte	.LFE22-.LFB22
 3141 00b8 00000000 		.4byte	.LFB23
 3142 00bc 38000000 		.4byte	.LFE23-.LFB23
 3143 00c0 00000000 		.4byte	.LFB24
 3144 00c4 40000000 		.4byte	.LFE24-.LFB24
 3145 00c8 00000000 		.4byte	.LFB25
 3146 00cc 58000000 		.4byte	.LFE25-.LFB25
 3147 00d0 00000000 		.4byte	.LFB26
 3148 00d4 02000000 		.4byte	.LFE26-.LFB26
 3149 00d8 00000000 		.4byte	0
 3150 00dc 00000000 		.4byte	0
 3151              		.section	.debug_ranges,"",%progbits
 3152              	.Ldebug_ranges0:
 3153 0000 06000000 		.4byte	.LBB2
 3154 0004 42000000 		.4byte	.LBE2
 3155 0008 44000000 		.4byte	.LBB3
 3156 000c 58000000 		.4byte	.LBE3
 3157 0010 00000000 		.4byte	0
 3158 0014 00000000 		.4byte	0
 3159 0018 00000000 		.4byte	.LFB1
 3160 001c 58000000 		.4byte	.LFE1
 3161 0020 00000000 		.4byte	.LFB2
 3162 0024 50000000 		.4byte	.LFE2
 3163 0028 00000000 		.4byte	.LFB0
 3164 002c 1C000000 		.4byte	.LFE0
 3165 0030 00000000 		.4byte	.LFB3
 3166 0034 50000000 		.4byte	.LFE3
 3167 0038 00000000 		.4byte	.LFB4
 3168 003c 04000000 		.4byte	.LFE4
 3169 0040 00000000 		.4byte	.LFB6
 3170 0044 0C000000 		.4byte	.LFE6
 3171 0048 00000000 		.4byte	.LFB7
 3172 004c 58000000 		.4byte	.LFE7
 3173 0050 00000000 		.4byte	.LFB8
 3174 0054 20000000 		.4byte	.LFE8
 3175 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 85


 3176 005c 74000000 		.4byte	.LFE9
 3177 0060 00000000 		.4byte	.LFB10
 3178 0064 2C000000 		.4byte	.LFE10
 3179 0068 00000000 		.4byte	.LFB11
 3180 006c 4C000000 		.4byte	.LFE11
 3181 0070 00000000 		.4byte	.LFB12
 3182 0074 44000000 		.4byte	.LFE12
 3183 0078 00000000 		.4byte	.LFB14
 3184 007c 0C000000 		.4byte	.LFE14
 3185 0080 00000000 		.4byte	.LFB15
 3186 0084 0C000000 		.4byte	.LFE15
 3187 0088 00000000 		.4byte	.LFB16
 3188 008c 0C000000 		.4byte	.LFE16
 3189 0090 00000000 		.4byte	.LFB17
 3190 0094 58000000 		.4byte	.LFE17
 3191 0098 00000000 		.4byte	.LFB18
 3192 009c 0C000000 		.4byte	.LFE18
 3193 00a0 00000000 		.4byte	.LFB19
 3194 00a4 64000000 		.4byte	.LFE19
 3195 00a8 00000000 		.4byte	.LFB20
 3196 00ac 20000000 		.4byte	.LFE20
 3197 00b0 00000000 		.4byte	.LFB21
 3198 00b4 24000000 		.4byte	.LFE21
 3199 00b8 00000000 		.4byte	.LFB22
 3200 00bc 24000000 		.4byte	.LFE22
 3201 00c0 00000000 		.4byte	.LFB23
 3202 00c4 38000000 		.4byte	.LFE23
 3203 00c8 00000000 		.4byte	.LFB24
 3204 00cc 40000000 		.4byte	.LFE24
 3205 00d0 00000000 		.4byte	.LFB25
 3206 00d4 58000000 		.4byte	.LFE25
 3207 00d8 00000000 		.4byte	.LFB26
 3208 00dc 02000000 		.4byte	.LFE26
 3209 00e0 00000000 		.4byte	0
 3210 00e4 00000000 		.4byte	0
 3211              		.section	.debug_line,"",%progbits
 3212              	.Ldebug_line0:
 3213 0000 43030000 		.section	.debug_str,"MS",%progbits,1
 3213      02005F00 
 3213      00000201 
 3213      FB0E0D00 
 3213      01010101 
 3214              	.LASF10:
 3215 0000 75696E74 		.ascii	"uint16\000"
 3215      313600
 3216              	.LASF77:
 3217 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3217      69744372 
 3217      69746963 
 3217      616C5365 
 3217      6374696F 
 3218              	.LASF45:
 3219 001d 74784461 		.ascii	"txDataByte\000"
 3219      74614279 
 3219      746500
 3220              	.LASF66:
 3221 0028 55415254 		.ascii	"UART_txBufferWrite\000"
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 86


 3221      5F747842 
 3221      75666665 
 3221      72577269 
 3221      746500
 3222              	.LASF52:
 3223 003b 73747269 		.ascii	"string\000"
 3223      6E6700
 3224              	.LASF7:
 3225 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 3225      206C6F6E 
 3225      6720756E 
 3225      7369676E 
 3225      65642069 
 3226              	.LASF22:
 3227 0059 55415254 		.ascii	"UART_Start\000"
 3227      5F537461 
 3227      727400
 3228              	.LASF43:
 3229 0064 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3229      5F536574 
 3229      5478496E 
 3229      74657272 
 3229      7570744D 
 3230              	.LASF72:
 3231 007c 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3231      5F727842 
 3231      75666665 
 3231      724F7665 
 3231      72666C6F 
 3232              	.LASF65:
 3233 0092 55415254 		.ascii	"UART_txBufferRead\000"
 3233      5F747842 
 3233      75666665 
 3233      72526561 
 3233      6400
 3234              	.LASF6:
 3235 00a4 6C6F6E67 		.ascii	"long long int\000"
 3235      206C6F6E 
 3235      6720696E 
 3235      7400
 3236              	.LASF0:
 3237 00b2 7369676E 		.ascii	"signed char\000"
 3237      65642063 
 3237      68617200 
 3238              	.LASF79:
 3239 00be 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3239      43313120 
 3239      352E342E 
 3239      31203230 
 3239      31363036 
 3240 00f1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3240      20726576 
 3240      6973696F 
 3240      6E203233 
 3240      37373135 
 3241 0124 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3241      66756E63 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 87


 3241      74696F6E 
 3241      2D736563 
 3241      74696F6E 
 3242              	.LASF62:
 3243 014c 74785065 		.ascii	"txPeriod\000"
 3243      72696F64 
 3243      00
 3244              	.LASF4:
 3245 0155 6C6F6E67 		.ascii	"long int\000"
 3245      20696E74 
 3245      00
 3246              	.LASF48:
 3247 015e 55415254 		.ascii	"UART_PutChar\000"
 3247      5F507574 
 3247      43686172 
 3247      00
 3248              	.LASF29:
 3249 016b 55415254 		.ascii	"UART_ReadRxData\000"
 3249      5F526561 
 3249      64527844 
 3249      61746100 
 3250              	.LASF9:
 3251 017b 75696E74 		.ascii	"uint8\000"
 3251      3800
 3252              	.LASF46:
 3253 0181 55415254 		.ascii	"UART_ReadControlRegister\000"
 3253      5F526561 
 3253      64436F6E 
 3253      74726F6C 
 3253      52656769 
 3254              	.LASF81:
 3255 019a 433A5C55 		.ascii	"C:\\Users\\valer\\Desktop\\Other Projects\\RoboArm\\"
 3255      73657273 
 3255      5C76616C 
 3255      65725C44 
 3255      65736B74 
 3256 01c8 526F626F 		.ascii	"RoboarmTest\\RoboArmTest.cydsn\000"
 3256      61726D54 
 3256      6573745C 
 3256      526F626F 
 3256      41726D54 
 3257              	.LASF83:
 3258 01e6 61646472 		.ascii	"addressMode\000"
 3258      6573734D 
 3258      6F646500 
 3259              	.LASF70:
 3260 01f2 55415254 		.ascii	"UART_rxBufferWrite\000"
 3260      5F727842 
 3260      75666665 
 3260      72577269 
 3260      746500
 3261              	.LASF11:
 3262 0205 75696E74 		.ascii	"uint32\000"
 3262      333200
 3263              	.LASF73:
 3264 020c 4379496E 		.ascii	"CyIntSetVector\000"
 3264      74536574 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 88


 3264      56656374 
 3264      6F7200
 3265              	.LASF50:
 3266 021b 6C6F6354 		.ascii	"locTxBufferRead\000"
 3266      78427566 
 3266      66657252 
 3266      65616400 
 3267              	.LASF20:
 3268 022b 55415254 		.ascii	"UART_Init\000"
 3268      5F496E69 
 3268      7400
 3269              	.LASF64:
 3270 0235 55415254 		.ascii	"UART_txBuffer\000"
 3270      5F747842 
 3270      75666665 
 3270      7200
 3271              	.LASF60:
 3272 0243 7265744D 		.ascii	"retMode\000"
 3272      6F646500 
 3273              	.LASF34:
 3274 024b 55415254 		.ascii	"UART_GetByte\000"
 3274      5F476574 
 3274      42797465 
 3274      00
 3275              	.LASF8:
 3276 0258 756E7369 		.ascii	"unsigned int\000"
 3276      676E6564 
 3276      20696E74 
 3276      00
 3277              	.LASF58:
 3278 0265 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3278      5F436C65 
 3278      61725478 
 3278      42756666 
 3278      657200
 3279              	.LASF56:
 3280 0278 55415254 		.ascii	"UART_PutCRLF\000"
 3280      5F507574 
 3280      43524C46 
 3280      00
 3281              	.LASF35:
 3282 0285 6C6F6345 		.ascii	"locErrorStatus\000"
 3282      72726F72 
 3282      53746174 
 3282      757300
 3283              	.LASF5:
 3284 0294 6C6F6E67 		.ascii	"long unsigned int\000"
 3284      20756E73 
 3284      69676E65 
 3284      6420696E 
 3284      7400
 3285              	.LASF49:
 3286 02a6 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3286      78427566 
 3286      66657257 
 3286      72697465 
 3286      00
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 89


 3287              	.LASF54:
 3288 02b7 55415254 		.ascii	"UART_PutArray\000"
 3288      5F507574 
 3288      41727261 
 3288      7900
 3289              	.LASF75:
 3290 02c5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3290      74657243 
 3290      72697469 
 3290      63616C53 
 3290      65637469 
 3291              	.LASF71:
 3292 02dc 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3292      5F727842 
 3292      75666665 
 3292      724C6F6F 
 3292      70446574 
 3293              	.LASF37:
 3294 02f4 73697A65 		.ascii	"size\000"
 3294      00
 3295              	.LASF3:
 3296 02f9 73686F72 		.ascii	"short unsigned int\000"
 3296      7420756E 
 3296      7369676E 
 3296      65642069 
 3296      6E7400
 3297              	.LASF69:
 3298 030c 55415254 		.ascii	"UART_rxBufferRead\000"
 3298      5F727842 
 3298      75666665 
 3298      72526561 
 3298      6400
 3299              	.LASF53:
 3300 031e 62756649 		.ascii	"bufIndex\000"
 3300      6E646578 
 3300      00
 3301              	.LASF40:
 3302 0327 696E7453 		.ascii	"intSrc\000"
 3302      726300
 3303              	.LASF82:
 3304 032e 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3304      5F536574 
 3304      54784164 
 3304      64726573 
 3304      734D6F64 
 3305              	.LASF47:
 3306 0344 55415254 		.ascii	"UART_ReadTxStatus\000"
 3306      5F526561 
 3306      64547853 
 3306      74617475 
 3306      7300
 3307              	.LASF76:
 3308 0356 55415254 		.ascii	"UART_IntClock_Start\000"
 3308      5F496E74 
 3308      436C6F63 
 3308      6B5F5374 
 3308      61727400 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 90


 3309              	.LASF17:
 3310 036a 72656733 		.ascii	"reg32\000"
 3310      3200
 3311              	.LASF61:
 3312 0370 746D7053 		.ascii	"tmpStat\000"
 3312      74617400 
 3313              	.LASF19:
 3314 0378 73697A65 		.ascii	"sizetype\000"
 3314      74797065 
 3314      00
 3315              	.LASF18:
 3316 0381 6C6F6E67 		.ascii	"long double\000"
 3316      20646F75 
 3316      626C6500 
 3317              	.LASF41:
 3318 038d 61646472 		.ascii	"address\000"
 3318      65737300 
 3319              	.LASF39:
 3320 0395 55415254 		.ascii	"UART_SetRxAddress1\000"
 3320      5F536574 
 3320      52784164 
 3320      64726573 
 3320      733100
 3321              	.LASF42:
 3322 03a8 55415254 		.ascii	"UART_SetRxAddress2\000"
 3322      5F536574 
 3322      52784164 
 3322      64726573 
 3322      733200
 3323              	.LASF28:
 3324 03bb 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3324      78427566 
 3324      66657257 
 3324      72697465 
 3324      00
 3325              	.LASF33:
 3326 03cc 72785374 		.ascii	"rxStatus\000"
 3326      61747573 
 3326      00
 3327              	.LASF78:
 3328 03d5 55415254 		.ascii	"UART_IntClock_Stop\000"
 3328      5F496E74 
 3328      436C6F63 
 3328      6B5F5374 
 3328      6F7000
 3329              	.LASF74:
 3330 03e8 4379496E 		.ascii	"CyIntSetPriority\000"
 3330      74536574 
 3330      5072696F 
 3330      72697479 
 3330      00
 3331              	.LASF67:
 3332 03f9 55415254 		.ascii	"UART_errorStatus\000"
 3332      5F657272 
 3332      6F725374 
 3332      61747573 
 3332      00
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 91


 3333              	.LASF80:
 3334 040a 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 3334      72617465 
 3334      645F536F 
 3334      75726365 
 3334      5C50536F 
 3335              	.LASF57:
 3336 0428 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3336      5F476574 
 3336      54784275 
 3336      66666572 
 3336      53697A65 
 3337              	.LASF16:
 3338 043d 72656738 		.ascii	"reg8\000"
 3338      00
 3339              	.LASF1:
 3340 0442 756E7369 		.ascii	"unsigned char\000"
 3340      676E6564 
 3340      20636861 
 3340      7200
 3341              	.LASF44:
 3342 0450 55415254 		.ascii	"UART_WriteTxData\000"
 3342      5F577269 
 3342      74655478 
 3342      44617461 
 3342      00
 3343              	.LASF2:
 3344 0461 73686F72 		.ascii	"short int\000"
 3344      7420696E 
 3344      7400
 3345              	.LASF59:
 3346 046b 55415254 		.ascii	"UART_SendBreak\000"
 3346      5F53656E 
 3346      64427265 
 3346      616B00
 3347              	.LASF55:
 3348 047a 62797465 		.ascii	"byteCount\000"
 3348      436F756E 
 3348      7400
 3349              	.LASF26:
 3350 0484 72784461 		.ascii	"rxData\000"
 3350      746100
 3351              	.LASF21:
 3352 048b 55415254 		.ascii	"UART_Enable\000"
 3352      5F456E61 
 3352      626C6500 
 3353              	.LASF30:
 3354 0497 55415254 		.ascii	"UART_ReadRxStatus\000"
 3354      5F526561 
 3354      64527853 
 3354      74617475 
 3354      7300
 3355              	.LASF15:
 3356 04a9 63686172 		.ascii	"char\000"
 3356      00
 3357              	.LASF14:
 3358 04ae 63686172 		.ascii	"char8\000"
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 92


 3358      3800
 3359              	.LASF25:
 3360 04b4 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3360      5F536574 
 3360      5278496E 
 3360      74657272 
 3360      7570744D 
 3361              	.LASF32:
 3362 04cc 55415254 		.ascii	"UART_GetChar\000"
 3362      5F476574 
 3362      43686172 
 3362      00
 3363              	.LASF27:
 3364 04d9 6C6F6352 		.ascii	"locRxBufferRead\000"
 3364      78427566 
 3364      66657252 
 3364      65616400 
 3365              	.LASF24:
 3366 04e9 656E6162 		.ascii	"enableInterrupts\000"
 3366      6C65496E 
 3366      74657272 
 3366      75707473 
 3366      00
 3367              	.LASF63:
 3368 04fa 55415254 		.ascii	"UART_initVar\000"
 3368      5F696E69 
 3368      74566172 
 3368      00
 3369              	.LASF36:
 3370 0507 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3370      5F476574 
 3370      52784275 
 3370      66666572 
 3370      53697A65 
 3371              	.LASF31:
 3372 051c 73746174 		.ascii	"status\000"
 3372      757300
 3373              	.LASF23:
 3374 0523 55415254 		.ascii	"UART_Stop\000"
 3374      5F53746F 
 3374      7000
 3375              	.LASF68:
 3376 052d 55415254 		.ascii	"UART_rxBuffer\000"
 3376      5F727842 
 3376      75666665 
 3376      7200
 3377              	.LASF12:
 3378 053b 666C6F61 		.ascii	"float\000"
 3378      7400
 3379              	.LASF51:
 3380 0541 55415254 		.ascii	"UART_PutString\000"
 3380      5F507574 
 3380      53747269 
 3380      6E6700
 3381              	.LASF38:
 3382 0550 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3382      5F436C65 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccsjZDIz.s 			page 93


 3382      61725278 
 3382      42756666 
 3382      657200
 3383              	.LASF13:
 3384 0563 646F7562 		.ascii	"double\000"
 3384      6C6500
 3385              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_RXISR,"ax",%progbits
  20              		.align	1
  21              		.global	UART_RXISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_RXISR, %function
  25              	UART_RXISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_INT.c"
   1:Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_INT.c **** * File Name: UARTINT.c
   3:Generated_Source\PSoC5/UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_INT.c **** *
   5:Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/UART_INT.c **** *
   8:Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/UART_INT.c **** 
  15:Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  16:Generated_Source\PSoC5/UART_INT.c **** #include "cyapicallbacks.h"
  17:Generated_Source\PSoC5/UART_INT.c **** 
  18:Generated_Source\PSoC5/UART_INT.c **** 
  19:Generated_Source\PSoC5/UART_INT.c **** /***************************************
  20:Generated_Source\PSoC5/UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/UART_INT.c **** 
  24:Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/UART_INT.c **** 
  26:Generated_Source\PSoC5/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  27:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  29:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/UART_INT.c ****     *
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 2


  31:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
  32:Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/UART_INT.c ****     *
  34:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  36:Generated_Source\PSoC5/UART_INT.c ****     *
  37:Generated_Source\PSoC5/UART_INT.c ****     * Return:
  38:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  39:Generated_Source\PSoC5/UART_INT.c ****     *
  40:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  49:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  52:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/UART_INT.c ****     *
  58:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  60:Generated_Source\PSoC5/UART_INT.c ****     {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  61:Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  64:Generated_Source\PSoC5/UART_INT.c **** 
  65:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/UART_INT.c **** 
  69:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/UART_INT.c **** 
  73:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 3


  74:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  75:Generated_Source\PSoC5/UART_INT.c **** 
  76:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/UART_INT.c **** 
  78:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/UART_INT.c **** 
  83:Generated_Source\PSoC5/UART_INT.c ****         do
  84:Generated_Source\PSoC5/UART_INT.c ****         {
  85:Generated_Source\PSoC5/UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  87:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/UART_INT.c ****             */
  90:Generated_Source\PSoC5/UART_INT.c ****             readData = readStatus;
  91:Generated_Source\PSoC5/UART_INT.c **** 
  92:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  96:Generated_Source\PSoC5/UART_INT.c ****             {
  97:Generated_Source\PSoC5/UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  99:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
 103:Generated_Source\PSoC5/UART_INT.c **** 
 104:Generated_Source\PSoC5/UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/UART_INT.c ****                 
 106:Generated_Source\PSoC5/UART_INT.c ****             #ifdef UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/UART_INT.c ****                 UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/UART_INT.c ****             #endif /* UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/UART_INT.c ****             }
 110:Generated_Source\PSoC5/UART_INT.c ****             
 111:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 112:Generated_Source\PSoC5/UART_INT.c ****             {
 113:Generated_Source\PSoC5/UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
 115:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/UART_INT.c ****                 {
 118:Generated_Source\PSoC5/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/UART_INT.c ****                     {
 120:Generated_Source\PSoC5/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/UART_INT.c ****                         {
 122:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/UART_INT.c ****                         }
 124:Generated_Source\PSoC5/UART_INT.c ****                         else
 125:Generated_Source\PSoC5/UART_INT.c ****                         {
 126:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/UART_INT.c ****                         }
 128:Generated_Source\PSoC5/UART_INT.c ****                     }
 129:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Store only addressed data */
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 4


 131:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/UART_INT.c ****                     }
 134:Generated_Source\PSoC5/UART_INT.c ****                 }
 135:Generated_Source\PSoC5/UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/UART_INT.c ****                 {
 137:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/UART_INT.c ****                 }
 140:Generated_Source\PSoC5/UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
  42              		.loc 1 141 0
  43 0004 1C49     		ldr	r1, .L15
 142:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
 143:Generated_Source\PSoC5/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/UART_INT.c **** 
 145:Generated_Source\PSoC5/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/UART_INT.c ****                 if(increment_pointer != 0u)
 147:Generated_Source\PSoC5/UART_INT.c ****                 {
 148:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
  44              		.loc 1 148 0
  45 0006 1D4C     		ldr	r4, .L15+4
  46 0008 0A46     		mov	r2, r1
  47 000a 2546     		mov	r5, r4
  86:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  48              		.loc 1 86 0
  49 000c 1C4E     		ldr	r6, .L15+8
  98:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
  50              		.loc 1 98 0
  51 000e 1D48     		ldr	r0, .L15+12
 114:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
  52              		.loc 1 114 0
  53 0010 1D4F     		ldr	r7, .L15+16
 141:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
  54              		.loc 1 141 0
  55 0012 DFF87CE0 		ldr	lr, .L15+24
 149:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
  56              		.loc 1 150 0
  57 0016 DFF87CC0 		ldr	ip, .L15+28
  58              	.LVL1:
  59              	.L7:
  86:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  60              		.loc 1 86 0
  61 001a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
  62 001c DBB2     		uxtb	r3, r3
  63              	.LVL2:
  92:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  64              		.loc 1 92 0
  65 001e 13F01E09 		ands	r9, r3, #30
  98:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
  66              		.loc 1 98 0
  67 0022 1EBF     		ittt	ne
  68 0024 90F80080 		ldrbne	r8, [r0]	@ zero_extendqisi2
  69 0028 49EA0808 		orrne	r8, r9, r8
  70 002c 80F80080 		strbne	r8, [r0]
 111:Generated_Source\PSoC5/UART_INT.c ****             {
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 5


  71              		.loc 1 111 0
  72 0030 9B06     		lsls	r3, r3, #26
  73              	.LVL3:
  74 0032 1ED5     		bpl	.L1
 114:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
  75              		.loc 1 114 0
  76 0034 97F80080 		ldrb	r8, [r7]	@ zero_extendqisi2
 141:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
  77              		.loc 1 141 0
  78 0038 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 114:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
  79              		.loc 1 114 0
  80 003a 5FFA88F8 		uxtb	r8, r8
  81              	.LVL4:
 141:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
  82              		.loc 1 141 0
  83 003e DBB2     		uxtb	r3, r3
  84 0040 0EF80380 		strb	r8, [lr, r3]
  85              	.LVL5:
 148:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
  86              		.loc 1 148 0
  87 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  88 0046 13B1     		cbz	r3, .L4
  89              		.loc 1 150 0
  90 0048 0123     		movs	r3, #1
  91 004a 8CF80030 		strb	r3, [ip]
  92              	.L4:
 151:Generated_Source\PSoC5/UART_INT.c ****                     }
 152:Generated_Source\PSoC5/UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
  93              		.loc 1 153 0
  94 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  95 0050 0133     		adds	r3, r3, #1
  96 0052 DBB2     		uxtb	r3, r3
  97 0054 1370     		strb	r3, [r2]
 154:Generated_Source\PSoC5/UART_INT.c **** 
 155:Generated_Source\PSoC5/UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
  98              		.loc 1 156 0
  99 0056 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 100 0058 072B     		cmp	r3, #7
 157:Generated_Source\PSoC5/UART_INT.c ****                     {
 158:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 101              		.loc 1 158 0
 102 005a 84BF     		itt	hi
 103 005c 0023     		movhi	r3, #0
 104 005e 0B70     		strbhi	r3, [r1]
 159:Generated_Source\PSoC5/UART_INT.c ****                     }
 160:Generated_Source\PSoC5/UART_INT.c **** 
 161:Generated_Source\PSoC5/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
 105              		.loc 1 162 0
 106 0060 0A4B     		ldr	r3, .L15+20
 107 0062 92F80080 		ldrb	r8, [r2]	@ zero_extendqisi2
 108              	.LVL6:
 109 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 110 0068 9845     		cmp	r8, r3
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 6


 111 006a D6D1     		bne	.L7
 163:Generated_Source\PSoC5/UART_INT.c ****                     {
 164:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
 112              		.loc 1 164 0
 113 006c 0123     		movs	r3, #1
 114 006e 2B70     		strb	r3, [r5]
 115 0070 D3E7     		b	.L7
 116              	.LVL7:
 117              	.L1:
 118 0072 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 119              	.L16:
 120 0076 00BF     		.align	2
 121              	.L15:
 122 0078 00000000 		.word	UART_rxBufferWrite
 123 007c 00000000 		.word	UART_rxBufferLoopDetect
 124 0080 69650040 		.word	1073767785
 125 0084 00000000 		.word	UART_errorStatus
 126 0088 48650040 		.word	1073767752
 127 008c 00000000 		.word	UART_rxBufferRead
 128 0090 00000000 		.word	UART_rxBuffer
 129 0094 00000000 		.word	UART_rxBufferOverflow
 130              		.cfi_endproc
 131              	.LFE0:
 132              		.size	UART_RXISR, .-UART_RXISR
 133              		.section	.text.UART_TXISR,"ax",%progbits
 134              		.align	1
 135              		.global	UART_TXISR
 136              		.thumb
 137              		.thumb_func
 138              		.type	UART_TXISR, %function
 139              	UART_TXISR:
 140              	.LFB1:
 165:Generated_Source\PSoC5/UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 170:Generated_Source\PSoC5/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/UART_INT.c ****                     }
 173:Generated_Source\PSoC5/UART_INT.c ****                 }
 174:Generated_Source\PSoC5/UART_INT.c ****             }
 175:Generated_Source\PSoC5/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 176:Generated_Source\PSoC5/UART_INT.c **** 
 177:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 179:Generated_Source\PSoC5/UART_INT.c **** 
 180:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/UART_INT.c **** 
 182:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/UART_INT.c **** 
 186:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/UART_INT.c ****     }
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 7


 190:Generated_Source\PSoC5/UART_INT.c ****     
 191:Generated_Source\PSoC5/UART_INT.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
 192:Generated_Source\PSoC5/UART_INT.c **** 
 193:Generated_Source\PSoC5/UART_INT.c **** 
 194:Generated_Source\PSoC5/UART_INT.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
 195:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_TXISR
 197:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/UART_INT.c ****     *
 199:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/UART_INT.c ****     *
 202:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 204:Generated_Source\PSoC5/UART_INT.c ****     *
 205:Generated_Source\PSoC5/UART_INT.c ****     * Return:
 206:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 207:Generated_Source\PSoC5/UART_INT.c ****     *
 208:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/UART_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/UART_INT.c ****     *
 215:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_TXISR)
 217:Generated_Source\PSoC5/UART_INT.c ****     {
 141              		.loc 1 217 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 218:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/UART_INT.c **** 
 222:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/UART_INT.c ****         UART_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/UART_INT.c **** 
 226:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_START` */
 228:Generated_Source\PSoC5/UART_INT.c **** 
 229:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/UART_INT.c **** 
 231:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/UART_INT.c **** 
 236:Generated_Source\PSoC5/UART_INT.c ****         while((UART_txBufferRead != UART_txBufferWrite) &&
 145              		.loc 1 236 0
 146 0000 0E4A     		ldr	r2, .L22
 217:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 147              		.loc 1 217 0
 148 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 149              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 8


 150              		.cfi_offset 4, -20
 151              		.cfi_offset 5, -16
 152              		.cfi_offset 6, -12
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0004 1146     		mov	r1, r2
 156              		.loc 1 236 0
 157 0006 0E4C     		ldr	r4, .L22+4
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 158              		.loc 1 237 0
 159 0008 0E48     		ldr	r0, .L22+8
 238:Generated_Source\PSoC5/UART_INT.c ****         {
 239:Generated_Source\PSoC5/UART_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/UART_INT.c ****             if(UART_txBufferRead >= UART_TX_BUFFER_SIZE)
 241:Generated_Source\PSoC5/UART_INT.c ****             {
 242:Generated_Source\PSoC5/UART_INT.c ****                 UART_txBufferRead = 0u;
 243:Generated_Source\PSoC5/UART_INT.c ****             }
 244:Generated_Source\PSoC5/UART_INT.c **** 
 245:Generated_Source\PSoC5/UART_INT.c ****             UART_TXDATA_REG = UART_txBuffer[UART_txBufferRead];
 160              		.loc 1 245 0
 161 000a 0F4D     		ldr	r5, .L22+12
 162 000c 0F4E     		ldr	r6, .L22+16
 163              	.L18:
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 164              		.loc 1 236 0
 165 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 166 0010 2778     		ldrb	r7, [r4]	@ zero_extendqisi2
 167 0012 9F42     		cmp	r7, r3
 168 0014 11D0     		beq	.L17
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 169              		.loc 1 237 0 discriminator 1
 170 0016 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 171              		.loc 1 236 0 discriminator 1
 172 0018 13F00403 		ands	r3, r3, #4
 173 001c 0DD1     		bne	.L17
 240:Generated_Source\PSoC5/UART_INT.c ****             {
 174              		.loc 1 240 0
 175 001e 1778     		ldrb	r7, [r2]	@ zero_extendqisi2
 176 0020 072F     		cmp	r7, #7
 242:Generated_Source\PSoC5/UART_INT.c ****             }
 177              		.loc 1 242 0
 178 0022 88BF     		it	hi
 179 0024 1370     		strbhi	r3, [r2]
 180              		.loc 1 245 0
 181 0026 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 182 0028 DBB2     		uxtb	r3, r3
 183 002a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 184 002c DBB2     		uxtb	r3, r3
 185 002e 3370     		strb	r3, [r6]
 246:Generated_Source\PSoC5/UART_INT.c **** 
 247:Generated_Source\PSoC5/UART_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/UART_INT.c ****             UART_txBufferRead++;
 186              		.loc 1 248 0
 187 0030 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 188 0032 0133     		adds	r3, r3, #1
 189 0034 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 9


 190 0036 0B70     		strb	r3, [r1]
 191 0038 E9E7     		b	.L18
 192              	.L17:
 193 003a F0BD     		pop	{r4, r5, r6, r7, pc}
 194              	.L23:
 195              		.align	2
 196              	.L22:
 197 003c 00000000 		.word	UART_txBufferRead
 198 0040 00000000 		.word	UART_txBufferWrite
 199 0044 6B650040 		.word	1073767787
 200 0048 00000000 		.word	UART_txBuffer
 201 004c 4B650040 		.word	1073767755
 202              		.cfi_endproc
 203              	.LFE1:
 204              		.size	UART_TXISR, .-UART_TXISR
 205              		.text
 206              	.Letext0:
 207              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 208              		.file 3 "Generated_Source\\PSoC5\\UART.h"
 209              		.section	.debug_info,"",%progbits
 210              	.Ldebug_info0:
 211 0000 82010000 		.4byte	0x182
 212 0004 0400     		.2byte	0x4
 213 0006 00000000 		.4byte	.Ldebug_abbrev0
 214 000a 04       		.byte	0x4
 215 000b 01       		.uleb128 0x1
 216 000c 69000000 		.4byte	.LASF28
 217 0010 0C       		.byte	0xc
 218 0011 68020000 		.4byte	.LASF29
 219 0015 87010000 		.4byte	.LASF30
 220 0019 00000000 		.4byte	.Ldebug_ranges0+0
 221 001d 00000000 		.4byte	0
 222 0021 00000000 		.4byte	.Ldebug_line0
 223 0025 02       		.uleb128 0x2
 224 0026 01       		.byte	0x1
 225 0027 06       		.byte	0x6
 226 0028 5C020000 		.4byte	.LASF0
 227 002c 02       		.uleb128 0x2
 228 002d 01       		.byte	0x1
 229 002e 08       		.byte	0x8
 230 002f 56000000 		.4byte	.LASF1
 231 0033 02       		.uleb128 0x2
 232 0034 02       		.byte	0x2
 233 0035 05       		.byte	0x5
 234 0036 1F020000 		.4byte	.LASF2
 235 003a 02       		.uleb128 0x2
 236 003b 02       		.byte	0x2
 237 003c 07       		.byte	0x7
 238 003d 26000000 		.4byte	.LASF3
 239 0041 02       		.uleb128 0x2
 240 0042 04       		.byte	0x4
 241 0043 05       		.byte	0x5
 242 0044 3C020000 		.4byte	.LASF4
 243 0048 02       		.uleb128 0x2
 244 0049 04       		.byte	0x4
 245 004a 07       		.byte	0x7
 246 004b 0B010000 		.4byte	.LASF5
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 10


 247 004f 02       		.uleb128 0x2
 248 0050 08       		.byte	0x8
 249 0051 05       		.byte	0x5
 250 0052 DC010000 		.4byte	.LASF6
 251 0056 02       		.uleb128 0x2
 252 0057 08       		.byte	0x8
 253 0058 07       		.byte	0x7
 254 0059 4E010000 		.4byte	.LASF7
 255 005d 03       		.uleb128 0x3
 256 005e 04       		.byte	0x4
 257 005f 05       		.byte	0x5
 258 0060 696E7400 		.ascii	"int\000"
 259 0064 02       		.uleb128 0x2
 260 0065 04       		.byte	0x4
 261 0066 07       		.byte	0x7
 262 0067 41010000 		.4byte	.LASF8
 263 006b 04       		.uleb128 0x4
 264 006c F7000000 		.4byte	.LASF12
 265 0070 02       		.byte	0x2
 266 0071 E401     		.2byte	0x1e4
 267 0073 2C000000 		.4byte	0x2c
 268 0077 02       		.uleb128 0x2
 269 0078 04       		.byte	0x4
 270 0079 04       		.byte	0x4
 271 007a 12000000 		.4byte	.LASF9
 272 007e 02       		.uleb128 0x2
 273 007f 08       		.byte	0x8
 274 0080 04       		.byte	0x4
 275 0081 39000000 		.4byte	.LASF10
 276 0085 02       		.uleb128 0x2
 277 0086 01       		.byte	0x1
 278 0087 08       		.byte	0x8
 279 0088 45020000 		.4byte	.LASF11
 280 008c 04       		.uleb128 0x4
 281 008d 64000000 		.4byte	.LASF13
 282 0091 02       		.byte	0x2
 283 0092 8E02     		.2byte	0x28e
 284 0094 98000000 		.4byte	0x98
 285 0098 05       		.uleb128 0x5
 286 0099 6B000000 		.4byte	0x6b
 287 009d 02       		.uleb128 0x2
 288 009e 08       		.byte	0x8
 289 009f 04       		.byte	0x4
 290 00a0 7B010000 		.4byte	.LASF14
 291 00a4 02       		.uleb128 0x2
 292 00a5 04       		.byte	0x4
 293 00a6 07       		.byte	0x7
 294 00a7 D3010000 		.4byte	.LASF15
 295 00ab 06       		.uleb128 0x6
 296 00ac 40000000 		.4byte	.LASF31
 297 00b0 01       		.byte	0x1
 298 00b1 3B       		.byte	0x3b
 299 00b2 00000000 		.4byte	.LFB0
 300 00b6 98000000 		.4byte	.LFE0-.LFB0
 301 00ba 01       		.uleb128 0x1
 302 00bb 9C       		.byte	0x9c
 303 00bc EE000000 		.4byte	0xee
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 11


 304 00c0 07       		.uleb128 0x7
 305 00c1 8A020000 		.4byte	.LASF16
 306 00c5 01       		.byte	0x1
 307 00c6 3D       		.byte	0x3d
 308 00c7 6B000000 		.4byte	0x6b
 309 00cb 00000000 		.4byte	.LLST0
 310 00cf 07       		.uleb128 0x7
 311 00d0 4B000000 		.4byte	.LASF17
 312 00d4 01       		.byte	0x1
 313 00d5 3E       		.byte	0x3e
 314 00d6 6B000000 		.4byte	0x6b
 315 00da 1E000000 		.4byte	.LLST1
 316 00de 07       		.uleb128 0x7
 317 00df F5010000 		.4byte	.LASF18
 318 00e3 01       		.byte	0x1
 319 00e4 3F       		.byte	0x3f
 320 00e5 6B000000 		.4byte	0x6b
 321 00e9 31000000 		.4byte	.LLST2
 322 00ed 00       		.byte	0
 323 00ee 08       		.uleb128 0x8
 324 00ef EA010000 		.4byte	.LASF32
 325 00f3 01       		.byte	0x1
 326 00f4 D8       		.byte	0xd8
 327 00f5 00000000 		.4byte	.LFB1
 328 00f9 50000000 		.4byte	.LFE1-.LFB1
 329 00fd 01       		.uleb128 0x1
 330 00fe 9C       		.byte	0x9c
 331 00ff 09       		.uleb128 0x9
 332 0100 98000000 		.4byte	0x98
 333 0104 0F010000 		.4byte	0x10f
 334 0108 0A       		.uleb128 0xa
 335 0109 A4000000 		.4byte	0xa4
 336 010d 07       		.byte	0x7
 337 010e 00       		.byte	0
 338 010f 0B       		.uleb128 0xb
 339 0110 18000000 		.4byte	.LASF19
 340 0114 03       		.byte	0x3
 341 0115 3801     		.2byte	0x138
 342 0117 1B010000 		.4byte	0x11b
 343 011b 05       		.uleb128 0x5
 344 011c FF000000 		.4byte	0xff
 345 0120 0B       		.uleb128 0xb
 346 0121 4A020000 		.4byte	.LASF20
 347 0125 03       		.byte	0x3
 348 0126 3901     		.2byte	0x139
 349 0128 98000000 		.4byte	0x98
 350 012c 0B       		.uleb128 0xb
 351 012d 29020000 		.4byte	.LASF21
 352 0131 03       		.byte	0x3
 353 0132 3A01     		.2byte	0x13a
 354 0134 6B000000 		.4byte	0x6b
 355 0138 0B       		.uleb128 0xb
 356 0139 1D010000 		.4byte	.LASF22
 357 013d 03       		.byte	0x3
 358 013e 3D01     		.2byte	0x13d
 359 0140 6B000000 		.4byte	0x6b
 360 0144 0B       		.uleb128 0xb
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 12


 361 0145 FD000000 		.4byte	.LASF23
 362 0149 03       		.byte	0x3
 363 014a 3E01     		.2byte	0x13e
 364 014c 50010000 		.4byte	0x150
 365 0150 05       		.uleb128 0x5
 366 0151 FF000000 		.4byte	0xff
 367 0155 0B       		.uleb128 0xb
 368 0156 00000000 		.4byte	.LASF24
 369 015a 03       		.byte	0x3
 370 015b 3F01     		.2byte	0x13f
 371 015d 98000000 		.4byte	0x98
 372 0161 0B       		.uleb128 0xb
 373 0162 2E010000 		.4byte	.LASF25
 374 0166 03       		.byte	0x3
 375 0167 4001     		.2byte	0x140
 376 0169 98000000 		.4byte	0x98
 377 016d 0B       		.uleb128 0xb
 378 016e 07020000 		.4byte	.LASF26
 379 0172 03       		.byte	0x3
 380 0173 4101     		.2byte	0x141
 381 0175 98000000 		.4byte	0x98
 382 0179 0B       		.uleb128 0xb
 383 017a 65010000 		.4byte	.LASF27
 384 017e 03       		.byte	0x3
 385 017f 4201     		.2byte	0x142
 386 0181 98000000 		.4byte	0x98
 387 0185 00       		.byte	0
 388              		.section	.debug_abbrev,"",%progbits
 389              	.Ldebug_abbrev0:
 390 0000 01       		.uleb128 0x1
 391 0001 11       		.uleb128 0x11
 392 0002 01       		.byte	0x1
 393 0003 25       		.uleb128 0x25
 394 0004 0E       		.uleb128 0xe
 395 0005 13       		.uleb128 0x13
 396 0006 0B       		.uleb128 0xb
 397 0007 03       		.uleb128 0x3
 398 0008 0E       		.uleb128 0xe
 399 0009 1B       		.uleb128 0x1b
 400 000a 0E       		.uleb128 0xe
 401 000b 55       		.uleb128 0x55
 402 000c 17       		.uleb128 0x17
 403 000d 11       		.uleb128 0x11
 404 000e 01       		.uleb128 0x1
 405 000f 10       		.uleb128 0x10
 406 0010 17       		.uleb128 0x17
 407 0011 00       		.byte	0
 408 0012 00       		.byte	0
 409 0013 02       		.uleb128 0x2
 410 0014 24       		.uleb128 0x24
 411 0015 00       		.byte	0
 412 0016 0B       		.uleb128 0xb
 413 0017 0B       		.uleb128 0xb
 414 0018 3E       		.uleb128 0x3e
 415 0019 0B       		.uleb128 0xb
 416 001a 03       		.uleb128 0x3
 417 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 13


 418 001c 00       		.byte	0
 419 001d 00       		.byte	0
 420 001e 03       		.uleb128 0x3
 421 001f 24       		.uleb128 0x24
 422 0020 00       		.byte	0
 423 0021 0B       		.uleb128 0xb
 424 0022 0B       		.uleb128 0xb
 425 0023 3E       		.uleb128 0x3e
 426 0024 0B       		.uleb128 0xb
 427 0025 03       		.uleb128 0x3
 428 0026 08       		.uleb128 0x8
 429 0027 00       		.byte	0
 430 0028 00       		.byte	0
 431 0029 04       		.uleb128 0x4
 432 002a 16       		.uleb128 0x16
 433 002b 00       		.byte	0
 434 002c 03       		.uleb128 0x3
 435 002d 0E       		.uleb128 0xe
 436 002e 3A       		.uleb128 0x3a
 437 002f 0B       		.uleb128 0xb
 438 0030 3B       		.uleb128 0x3b
 439 0031 05       		.uleb128 0x5
 440 0032 49       		.uleb128 0x49
 441 0033 13       		.uleb128 0x13
 442 0034 00       		.byte	0
 443 0035 00       		.byte	0
 444 0036 05       		.uleb128 0x5
 445 0037 35       		.uleb128 0x35
 446 0038 00       		.byte	0
 447 0039 49       		.uleb128 0x49
 448 003a 13       		.uleb128 0x13
 449 003b 00       		.byte	0
 450 003c 00       		.byte	0
 451 003d 06       		.uleb128 0x6
 452 003e 2E       		.uleb128 0x2e
 453 003f 01       		.byte	0x1
 454 0040 3F       		.uleb128 0x3f
 455 0041 19       		.uleb128 0x19
 456 0042 03       		.uleb128 0x3
 457 0043 0E       		.uleb128 0xe
 458 0044 3A       		.uleb128 0x3a
 459 0045 0B       		.uleb128 0xb
 460 0046 3B       		.uleb128 0x3b
 461 0047 0B       		.uleb128 0xb
 462 0048 27       		.uleb128 0x27
 463 0049 19       		.uleb128 0x19
 464 004a 11       		.uleb128 0x11
 465 004b 01       		.uleb128 0x1
 466 004c 12       		.uleb128 0x12
 467 004d 06       		.uleb128 0x6
 468 004e 40       		.uleb128 0x40
 469 004f 18       		.uleb128 0x18
 470 0050 9742     		.uleb128 0x2117
 471 0052 19       		.uleb128 0x19
 472 0053 01       		.uleb128 0x1
 473 0054 13       		.uleb128 0x13
 474 0055 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 14


 475 0056 00       		.byte	0
 476 0057 07       		.uleb128 0x7
 477 0058 34       		.uleb128 0x34
 478 0059 00       		.byte	0
 479 005a 03       		.uleb128 0x3
 480 005b 0E       		.uleb128 0xe
 481 005c 3A       		.uleb128 0x3a
 482 005d 0B       		.uleb128 0xb
 483 005e 3B       		.uleb128 0x3b
 484 005f 0B       		.uleb128 0xb
 485 0060 49       		.uleb128 0x49
 486 0061 13       		.uleb128 0x13
 487 0062 02       		.uleb128 0x2
 488 0063 17       		.uleb128 0x17
 489 0064 00       		.byte	0
 490 0065 00       		.byte	0
 491 0066 08       		.uleb128 0x8
 492 0067 2E       		.uleb128 0x2e
 493 0068 00       		.byte	0
 494 0069 3F       		.uleb128 0x3f
 495 006a 19       		.uleb128 0x19
 496 006b 03       		.uleb128 0x3
 497 006c 0E       		.uleb128 0xe
 498 006d 3A       		.uleb128 0x3a
 499 006e 0B       		.uleb128 0xb
 500 006f 3B       		.uleb128 0x3b
 501 0070 0B       		.uleb128 0xb
 502 0071 27       		.uleb128 0x27
 503 0072 19       		.uleb128 0x19
 504 0073 11       		.uleb128 0x11
 505 0074 01       		.uleb128 0x1
 506 0075 12       		.uleb128 0x12
 507 0076 06       		.uleb128 0x6
 508 0077 40       		.uleb128 0x40
 509 0078 18       		.uleb128 0x18
 510 0079 9742     		.uleb128 0x2117
 511 007b 19       		.uleb128 0x19
 512 007c 00       		.byte	0
 513 007d 00       		.byte	0
 514 007e 09       		.uleb128 0x9
 515 007f 01       		.uleb128 0x1
 516 0080 01       		.byte	0x1
 517 0081 49       		.uleb128 0x49
 518 0082 13       		.uleb128 0x13
 519 0083 01       		.uleb128 0x1
 520 0084 13       		.uleb128 0x13
 521 0085 00       		.byte	0
 522 0086 00       		.byte	0
 523 0087 0A       		.uleb128 0xa
 524 0088 21       		.uleb128 0x21
 525 0089 00       		.byte	0
 526 008a 49       		.uleb128 0x49
 527 008b 13       		.uleb128 0x13
 528 008c 2F       		.uleb128 0x2f
 529 008d 0B       		.uleb128 0xb
 530 008e 00       		.byte	0
 531 008f 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 15


 532 0090 0B       		.uleb128 0xb
 533 0091 34       		.uleb128 0x34
 534 0092 00       		.byte	0
 535 0093 03       		.uleb128 0x3
 536 0094 0E       		.uleb128 0xe
 537 0095 3A       		.uleb128 0x3a
 538 0096 0B       		.uleb128 0xb
 539 0097 3B       		.uleb128 0x3b
 540 0098 05       		.uleb128 0x5
 541 0099 49       		.uleb128 0x49
 542 009a 13       		.uleb128 0x13
 543 009b 3F       		.uleb128 0x3f
 544 009c 19       		.uleb128 0x19
 545 009d 3C       		.uleb128 0x3c
 546 009e 19       		.uleb128 0x19
 547 009f 00       		.byte	0
 548 00a0 00       		.byte	0
 549 00a1 00       		.byte	0
 550              		.section	.debug_loc,"",%progbits
 551              	.Ldebug_loc0:
 552              	.LLST0:
 553 0000 1E000000 		.4byte	.LVL2
 554 0004 32000000 		.4byte	.LVL3
 555 0008 0100     		.2byte	0x1
 556 000a 53       		.byte	0x53
 557 000b 3E000000 		.4byte	.LVL4
 558 000f 66000000 		.4byte	.LVL6
 559 0013 0100     		.2byte	0x1
 560 0015 58       		.byte	0x58
 561 0016 00000000 		.4byte	0
 562 001a 00000000 		.4byte	0
 563              	.LLST1:
 564 001e 1E000000 		.4byte	.LVL2
 565 0022 32000000 		.4byte	.LVL3
 566 0026 0100     		.2byte	0x1
 567 0028 53       		.byte	0x53
 568 0029 00000000 		.4byte	0
 569 002d 00000000 		.4byte	0
 570              	.LLST2:
 571 0031 00000000 		.4byte	.LVL0
 572 0035 1A000000 		.4byte	.LVL1
 573 0039 0200     		.2byte	0x2
 574 003b 30       		.byte	0x30
 575 003c 9F       		.byte	0x9f
 576 003d 44000000 		.4byte	.LVL5
 577 0041 72000000 		.4byte	.LVL7
 578 0045 0200     		.2byte	0x2
 579 0047 31       		.byte	0x31
 580 0048 9F       		.byte	0x9f
 581 0049 00000000 		.4byte	0
 582 004d 00000000 		.4byte	0
 583              		.section	.debug_aranges,"",%progbits
 584 0000 24000000 		.4byte	0x24
 585 0004 0200     		.2byte	0x2
 586 0006 00000000 		.4byte	.Ldebug_info0
 587 000a 04       		.byte	0x4
 588 000b 00       		.byte	0
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 16


 589 000c 0000     		.2byte	0
 590 000e 0000     		.2byte	0
 591 0010 00000000 		.4byte	.LFB0
 592 0014 98000000 		.4byte	.LFE0-.LFB0
 593 0018 00000000 		.4byte	.LFB1
 594 001c 50000000 		.4byte	.LFE1-.LFB1
 595 0020 00000000 		.4byte	0
 596 0024 00000000 		.4byte	0
 597              		.section	.debug_ranges,"",%progbits
 598              	.Ldebug_ranges0:
 599 0000 00000000 		.4byte	.LFB0
 600 0004 98000000 		.4byte	.LFE0
 601 0008 00000000 		.4byte	.LFB1
 602 000c 50000000 		.4byte	.LFE1
 603 0010 00000000 		.4byte	0
 604 0014 00000000 		.4byte	0
 605              		.section	.debug_line,"",%progbits
 606              	.Ldebug_line0:
 607 0000 BD000000 		.section	.debug_str,"MS",%progbits,1
 607      02004F00 
 607      00000201 
 607      FB0E0D00 
 607      01010101 
 608              	.LASF24:
 609 0000 55415254 		.ascii	"UART_rxBufferRead\000"
 609      5F727842 
 609      75666665 
 609      72526561 
 609      6400
 610              	.LASF9:
 611 0012 666C6F61 		.ascii	"float\000"
 611      7400
 612              	.LASF19:
 613 0018 55415254 		.ascii	"UART_txBuffer\000"
 613      5F747842 
 613      75666665 
 613      7200
 614              	.LASF3:
 615 0026 73686F72 		.ascii	"short unsigned int\000"
 615      7420756E 
 615      7369676E 
 615      65642069 
 615      6E7400
 616              	.LASF10:
 617 0039 646F7562 		.ascii	"double\000"
 617      6C6500
 618              	.LASF31:
 619 0040 55415254 		.ascii	"UART_RXISR\000"
 619      5F525849 
 619      535200
 620              	.LASF17:
 621 004b 72656164 		.ascii	"readStatus\000"
 621      53746174 
 621      757300
 622              	.LASF1:
 623 0056 756E7369 		.ascii	"unsigned char\000"
 623      676E6564 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 17


 623      20636861 
 623      7200
 624              	.LASF13:
 625 0064 72656738 		.ascii	"reg8\000"
 625      00
 626              	.LASF28:
 627 0069 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 627      43313120 
 627      352E342E 
 627      31203230 
 627      31363036 
 628 009c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 628      20726576 
 628      6973696F 
 628      6E203233 
 628      37373135 
 629 00cf 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 629      66756E63 
 629      74696F6E 
 629      2D736563 
 629      74696F6E 
 630              	.LASF12:
 631 00f7 75696E74 		.ascii	"uint8\000"
 631      3800
 632              	.LASF23:
 633 00fd 55415254 		.ascii	"UART_rxBuffer\000"
 633      5F727842 
 633      75666665 
 633      7200
 634              	.LASF5:
 635 010b 6C6F6E67 		.ascii	"long unsigned int\000"
 635      20756E73 
 635      69676E65 
 635      6420696E 
 635      7400
 636              	.LASF22:
 637 011d 55415254 		.ascii	"UART_errorStatus\000"
 637      5F657272 
 637      6F725374 
 637      61747573 
 637      00
 638              	.LASF25:
 639 012e 55415254 		.ascii	"UART_rxBufferWrite\000"
 639      5F727842 
 639      75666665 
 639      72577269 
 639      746500
 640              	.LASF8:
 641 0141 756E7369 		.ascii	"unsigned int\000"
 641      676E6564 
 641      20696E74 
 641      00
 642              	.LASF7:
 643 014e 6C6F6E67 		.ascii	"long long unsigned int\000"
 643      206C6F6E 
 643      6720756E 
 643      7369676E 
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 18


 643      65642069 
 644              	.LASF27:
 645 0165 55415254 		.ascii	"UART_rxBufferOverflow\000"
 645      5F727842 
 645      75666665 
 645      724F7665 
 645      72666C6F 
 646              	.LASF14:
 647 017b 6C6F6E67 		.ascii	"long double\000"
 647      20646F75 
 647      626C6500 
 648              	.LASF30:
 649 0187 433A5C55 		.ascii	"C:\\Users\\valer\\Desktop\\Other Projects\\RoboArm\\"
 649      73657273 
 649      5C76616C 
 649      65725C44 
 649      65736B74 
 650 01b5 526F626F 		.ascii	"RoboarmTest\\RoboArmTest.cydsn\000"
 650      61726D54 
 650      6573745C 
 650      526F626F 
 650      41726D54 
 651              	.LASF15:
 652 01d3 73697A65 		.ascii	"sizetype\000"
 652      74797065 
 652      00
 653              	.LASF6:
 654 01dc 6C6F6E67 		.ascii	"long long int\000"
 654      206C6F6E 
 654      6720696E 
 654      7400
 655              	.LASF32:
 656 01ea 55415254 		.ascii	"UART_TXISR\000"
 656      5F545849 
 656      535200
 657              	.LASF18:
 658 01f5 696E6372 		.ascii	"increment_pointer\000"
 658      656D656E 
 658      745F706F 
 658      696E7465 
 658      7200
 659              	.LASF26:
 660 0207 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 660      5F727842 
 660      75666665 
 660      724C6F6F 
 660      70446574 
 661              	.LASF2:
 662 021f 73686F72 		.ascii	"short int\000"
 662      7420696E 
 662      7400
 663              	.LASF21:
 664 0229 55415254 		.ascii	"UART_txBufferWrite\000"
 664      5F747842 
 664      75666665 
 664      72577269 
 664      746500
ARM GAS  C:\Users\valer\AppData\Local\Temp\ccEVDRLV.s 			page 19


 665              	.LASF4:
 666 023c 6C6F6E67 		.ascii	"long int\000"
 666      20696E74 
 666      00
 667              	.LASF11:
 668 0245 63686172 		.ascii	"char\000"
 668      00
 669              	.LASF20:
 670 024a 55415254 		.ascii	"UART_txBufferRead\000"
 670      5F747842 
 670      75666665 
 670      72526561 
 670      6400
 671              	.LASF0:
 672 025c 7369676E 		.ascii	"signed char\000"
 672      65642063 
 672      68617200 
 673              	.LASF29:
 674 0268 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_INT.c\000"
 674      72617465 
 674      645F536F 
 674      75726365 
 674      5C50536F 
 675              	.LASF16:
 676 028a 72656164 		.ascii	"readData\000"
 676      44617461 
 676      00
 677              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
